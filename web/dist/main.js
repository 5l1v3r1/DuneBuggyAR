!function(a){var e={};function c(b){if(e[b])return e[b].exports;var t=e[b]={i:b,l:!1,exports:{}};return a[b].call(t.exports,t,t.exports,c),t.l=!0,t.exports}c.m=a,c.c=e,c.d=function(a,e,b){c.o(a,e)||Object.defineProperty(a,e,{enumerable:!0,get:b})},c.r=function(a){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(a,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(a,"__esModule",{value:!0})},c.t=function(a,e){if(1&e&&(a=c(a)),8&e)return a;if(4&e&&"object"==typeof a&&a&&a.__esModule)return a;var b=Object.create(null);if(c.r(b),Object.defineProperty(b,"default",{enumerable:!0,value:a}),2&e&&"string"!=typeof a)for(var t in a)c.d(b,t,function(e){return a[e]}.bind(null,t));return b},c.n=function(a){var e=a&&a.__esModule?function(){return a.default}:function(){return a};return c.d(e,"a",e),e},c.o=function(a,e){return Object.prototype.hasOwnProperty.call(a,e)},c.p="",c(c.s=0)}([function(a,e,c){"use strict";c.r(e);var b="",t=function(){function a(a,e){this.setPosition(this.currentPosition[0]+a,this.currentPosition[1]+e)}function e(a,e){this.slide(a-this.currentPosition[0],0,this.xPos,this.wrap_horizontal),this.slide(e-this.currentPosition[1],1,this.yPos,this.wrap_vertical);for(a=0;a<this.numRows;a++)for(e=0;e<this.numRows;e++)if(0==a||0==e||a==this.lastRow||e==this.lastRow||this.ptInfo[a][e].update){this.ptInfo[a][e].x=this.currentPosition[0]-this.xPos[a],this.ptInfo[a][e].y=this.currentPosition[1]-this.yPos[e];var c=r(this.ptInfo[a][e].x,this.ptInfo[a][e].y);this.ptInfo[a][e].u=c.u,this.ptInfo[a][e].v=c.v,this.ptInfo[a][e].z=c.z,this.ptInfo[a][e].update=!1}}function c(a,e,c,b){var t;if(this.offset[e]+=a,this.offset[e]<0){t=Math.min(this.numRows-1,Math.ceil(Math.abs(this.offset[e])/this.spacing));for(var d=0;d<t;d++)b(1);for(;this.offset[e]<0;)this.offset[e]+=this.spacing}else if(this.offset[e]>this.spacing){t=Math.min(this.numRows-1,Math.floor(this.offset[e]/this.spacing));for(d=0;d<t;d++)b(0);for(;this.offset[e]>this.spacing;)this.offset[e]-=this.spacing}this.currentPosition[e]+=a;var i=-this.halfSize;c[0]=i,i+=this.offset[e];for(var n=1;n<this.numRows-1;n++)c[n]=i,i+=this.spacing;c[this.numRows-1]=this.halfSize}function t(a){if(a){this.ptInfo.push(this.ptInfo.shift());for(var e=0;e<this.numRows;e++)this.ptInfo[this.numRows-1][e].update=!0}else{this.ptInfo.unshift(this.ptInfo.pop());for(e=0;e<this.numRows;e++)this.ptInfo[0][e].update=!0}}function d(a){if(a)for(var e=0;e<this.numRows;e++)this.ptInfo[e].push(this.ptInfo[e].shift()),this.ptInfo[e][this.numRows-1].update=!0;else for(e=0;e<this.numRows;e++)this.ptInfo[e].unshift(this.ptInfo[e].pop()),this.ptInfo[e][0].update=!0}function i(a,e){var c=a>=0?a%262144:262143-Math.abs(a)%262144;return e&&console.log("ind, _ind",a,c),parseInt(b.substr(2*c,2),16)}function n(a,e,c){return a+(e-a)*c}function r(a,e,c){var b=5.12*a,t=5.12*e;c&&console.log("/////////// GET PT: _x, _y",b,t);var d=i(512*Math.floor(t)+Math.floor(b),c),r=i(512*Math.floor(t)+Math.ceil(b),c),f=i(512*Math.ceil(t)+Math.floor(b),c),o=i(512*Math.ceil(t)+Math.ceil(b),c),s=b>=0?b%1:1+b%1,h=t>=0?t%1:1+t%1;return c&&(console.log("getHeightAtIndex",d,r,f,o),console.log("_x%1, _y%1",b%1,t%1),console.log("xMixer, yMixer",s,h),console.log("lerp",n(d,r,b%1),n(f,o,b%1),n(n(d,r,b%1),n(f,o,b%1),t%1)),console.log("lerp_wMIXER",n(d,r,s),n(f,o,s),n(n(d,r,s),n(f,o,s),h)),console.log(n(n(d,r,b%1),n(f,o,b%1),t%1))),{u:.5/2048+2047/2048*(a/100),v:1-(.5/2048+2047/2048*(e/100)),z:n(n(d,r,s),n(f,o,s),h)/15}}function f(){for(var a=[],e=0;e<this.numRows;e++)for(var c=0;c<this.numRows;c++)a.push(-this.xPos[e],this.yPos[c],this.ptInfo[e][c].z);return a}function o(){for(var a=[],e=0;e<this.numRows;e++)for(var c=0;c<this.numRows;c++)a.push(0,0,1);return a}function s(){for(var a=[],e=0;e<this.numRows;e++)for(var c=0;c<this.numRows;c++)a.push(this.ptInfo[e][c].u,this.ptInfo[e][c].v);return a}function h(){for(var a=[],e=0;e<this.numRows;e++)for(var c=0;c<this.numRows;c++)a.push(-this.xPos[e],this.ptInfo[e][c].z,this.yPos[c],0,1,0,this.ptInfo[e][c].u,this.ptInfo[e][c].v);return a}function l(){for(var a=[],e=0;e<this.numRows-1;e++)for(var c=0;c<this.numRows-1;c++)a.push(this.ptInfo[e][c].index,this.ptInfo[e][c+1].index,this.ptInfo[e+1][c].index,this.ptInfo[e+1][c].index,this.ptInfo[e][c+1].index,this.ptInfo[e+1][c+1].index);return a}function u(){for(var a=[],e=0;e<this.numRows-1;e++)for(var c=0;c<this.numRows-1;c++)a.push(this.ptInfo[e][c].index,this.ptInfo[e+1][c].index,this.ptInfo[e][c+1].index,this.ptInfo[e+1][c].index,this.ptInfo[e+1][c+1].index,this.ptInfo[e][c+1].index);return a}return function(b,i){this.size=b,this.halfSize=b/2,this.spacing=b/i,this.currentPosition=[0,0],this.numRows=i+2,this.lastRow=this.numRows-1,this.xPos=[],this.yPos=[],this.ptInfo=[],this.offset=[0,0],this.updateList=[];for(var n=0,p=0;p<this.numRows;p++){for(var m=[],g=[],v=0;v<this.numRows;v++){var y={x:0,y:0,z:0,index:0,update:!0};y.index=n,n++,m.push(y),g.push(!0)}this.xPos.push(0),this.yPos.push(0),this.ptInfo.push(m),this.updateList.push(g)}this.move=a.bind(this),this.setPosition=e.bind(this),this.slide=c.bind(this),this.wrap_horizontal=t.bind(this),this.wrap_vertical=d.bind(this),this.getPt=r.bind(this),this.returnPtArray=f.bind(this),this.returnNormalArray=o.bind(this),this.returnUVArray=s.bind(this),this.returnIndiceArray=l.bind(this),this.returnIndiceArraySnap=u.bind(this),this.returnPackedArray=h.bind(this),this.setPosition(0,0)}}();function d(){this.frontWheelX=2.6077,this.frontWheelSpace=1.36649;this.backWheelX=-2.25336,this.backWheelSpace=1.82944;this.speed=.35,this.velocity=[0,this.speed];var a=[[-this.frontWheelSpace,this.frontWheelX],[this.frontWheelSpace,this.frontWheelX],[-this.backWheelSpace,this.backWheelX],[this.backWheelSpace,this.backWheelX]];this.wheelPositions=[[-this.frontWheelSpace,this.frontWheelX,0],[this.frontWheelSpace,this.frontWheelX,0],[-this.backWheelSpace,this.backWheelX,0],[this.backWheelSpace,this.backWheelX,0]];var e=this.frontWheelX-this.backWheelX;this.rotation=0,this.tilt=0,this.roll=0,this.midHeight=0,this.wheelHeights=[0,0,0,0],this.setWheelHeights=function(a,c,b,t){this.wheelPositions[0][2]=a+.3256125,this.wheelPositions[1][2]=c+.3256125,this.wheelPositions[2][2]=b+.3903525,this.wheelPositions[3][2]=t+.3903525;var d=(a+c)/2,i=(b+t)/2;this.midHeight=(this.wheelPositions[0][2]+this.wheelPositions[1][2]+this.wheelPositions[2][2]+this.wheelPositions[3][2])/4,this.tilt=Math.atan((d-i)/e),this.roll=(Math.atan((a-c)/(2*this.frontWheelSpace))+Math.atan((b-t)/(2*this.backWheelSpace)))/2},this.getWheelPos=function(a){return this.wheels[a]},this.rotate=function(e){this.rotation+=e;for(var c=0;c<4;c++)this.wheelPositions[c][0]=a[c][0]*Math.cos(this.rotation)-a[c][1]*Math.sin(this.rotation),this.wheelPositions[c][1]=a[c][0]*Math.sin(this.rotation)+a[c][1]*Math.cos(this.rotation);this.velocity[0]=-this.speed*Math.sin(this.rotation),this.velocity[1]=this.speed*Math.cos(this.rotation)}}void 0===Number.EPSILON&&(Number.EPSILON=Math.pow(2,-52)),void 0===Number.isInteger&&(Number.isInteger=function(a){return"number"==typeof a&&isFinite(a)&&Math.floor(a)===a}),void 0===Math.sign&&(Math.sign=function(a){return a<0?-1:a>0?1:+a}),"name"in Function.prototype==!1&&Object.defineProperty(Function.prototype,"name",{get:function(){return this.toString().match(/^\s*function\s*([^\(\s]*)/)[1]}}),void 0===Object.assign&&(Object.assign=function(a){if(null==a)throw new TypeError("Cannot convert undefined or null to object");for(var e=Object(a),c=1;c<arguments.length;c++){var b=arguments[c];if(null!=b)for(var t in b)Object.prototype.hasOwnProperty.call(b,t)&&(e[t]=b[t])}return e});var i=0,n=1,r=2,f=1,o=2,s=3,h=0,l=1,u=2,p=0,m=1,g=2,v=0,y=1,x=2,w=3,_=4,M=5,S=100,T=101,E=102,A=103,L=104,R=200,P=201,C=202,O=203,I=204,N=205,D=206,z=207,U=208,B=209,F=210,G=0,H=1,V=2,k=3,j=4,W=5,q=6,X=7,Y=0,Z=1,J=2,K=0,Q=1,$=2,aa=3,ea=4,ca=5,ba=301,ta=302,da=303,ia=304,na=305,ra=306,fa=307,oa=1e3,sa=1001,ha=1002,la=1003,ua=1004,pa=1005,ma=1006,ga=1007,va=1008,ya=1009,xa=1010,wa=1011,_a=1012,Ma=1013,Sa=1014,Ta=1015,Ea=1016,Aa=1017,La=1018,Ra=1019,Pa=1020,Ca=1021,Oa=1022,Ia=1023,Na=1024,Da=1025,za=1026,Ua=1027,Ba=1028,Fa=33776,Ga=33777,Ha=33778,Va=33779,ka=35840,ja=35841,Wa=35842,qa=35843,Xa=36196,Ya=37808,Za=37809,Ja=37810,Ka=37811,Qa=37812,$a=37813,ae=37814,ee=37815,ce=37816,be=37817,te=37818,de=37819,ie=37820,ne=37821,re=2201,fe=2400,oe=0,se=1,he=2,le=3e3,ue=3001,pe=3007,me=3002,ge=3003,ve=3004,ye=3005,xe=3006,we=3200,_e=3201,Me=0,Se=1,Te=7680,Ee=519;function Ae(){}Object.assign(Ae.prototype,{addEventListener:function(a,e){void 0===this._listeners&&(this._listeners={});var c=this._listeners;void 0===c[a]&&(c[a]=[]),-1===c[a].indexOf(e)&&c[a].push(e)},hasEventListener:function(a,e){if(void 0===this._listeners)return!1;var c=this._listeners;return void 0!==c[a]&&-1!==c[a].indexOf(e)},removeEventListener:function(a,e){if(void 0!==this._listeners){var c=this._listeners[a];if(void 0!==c){var b=c.indexOf(e);-1!==b&&c.splice(b,1)}}},dispatchEvent:function(a){if(void 0!==this._listeners){var e=this._listeners[a.type];if(void 0!==e){a.target=this;for(var c=e.slice(0),b=0,t=c.length;b<t;b++)c[b].call(this,a)}}}});for(var Le=[],Re=0;Re<256;Re++)Le[Re]=(Re<16?"0":"")+Re.toString(16);var Pe={DEG2RAD:Math.PI/180,RAD2DEG:180/Math.PI,generateUUID:function(){var a=4294967295*Math.random()|0,e=4294967295*Math.random()|0,c=4294967295*Math.random()|0,b=4294967295*Math.random()|0;return(Le[255&a]+Le[a>>8&255]+Le[a>>16&255]+Le[a>>24&255]+"-"+Le[255&e]+Le[e>>8&255]+"-"+Le[e>>16&15|64]+Le[e>>24&255]+"-"+Le[63&c|128]+Le[c>>8&255]+"-"+Le[c>>16&255]+Le[c>>24&255]+Le[255&b]+Le[b>>8&255]+Le[b>>16&255]+Le[b>>24&255]).toUpperCase()},clamp:function(a,e,c){return Math.max(e,Math.min(c,a))},euclideanModulo:function(a,e){return(a%e+e)%e},mapLinear:function(a,e,c,b,t){return b+(a-e)*(t-b)/(c-e)},lerp:function(a,e,c){return(1-c)*a+c*e},smoothstep:function(a,e,c){return a<=e?0:a>=c?1:(a=(a-e)/(c-e))*a*(3-2*a)},smootherstep:function(a,e,c){return a<=e?0:a>=c?1:(a=(a-e)/(c-e))*a*a*(a*(6*a-15)+10)},randInt:function(a,e){return a+Math.floor(Math.random()*(e-a+1))},randFloat:function(a,e){return a+Math.random()*(e-a)},randFloatSpread:function(a){return a*(.5-Math.random())},degToRad:function(a){return a*Pe.DEG2RAD},radToDeg:function(a){return a*Pe.RAD2DEG},isPowerOfTwo:function(a){return 0==(a&a-1)&&0!==a},ceilPowerOfTwo:function(a){return Math.pow(2,Math.ceil(Math.log(a)/Math.LN2))},floorPowerOfTwo:function(a){return Math.pow(2,Math.floor(Math.log(a)/Math.LN2))}};function Ce(a,e){this.x=a||0,this.y=e||0}function Oe(a,e,c,b){this._x=a||0,this._y=e||0,this._z=c||0,this._w=void 0!==b?b:1}Object.defineProperties(Ce.prototype,{width:{get:function(){return this.x},set:function(a){this.x=a}},height:{get:function(){return this.y},set:function(a){this.y=a}}}),Object.assign(Ce.prototype,{isVector2:!0,set:function(a,e){return this.x=a,this.y=e,this},setScalar:function(a){return this.x=a,this.y=a,this},setX:function(a){return this.x=a,this},setY:function(a){return this.y=a,this},setComponent:function(a,e){switch(a){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+a)}return this},getComponent:function(a){switch(a){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+a)}},clone:function(){return new this.constructor(this.x,this.y)},copy:function(a){return this.x=a.x,this.y=a.y,this},add:function(a,e){return void 0!==e?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(a,e)):(this.x+=a.x,this.y+=a.y,this)},addScalar:function(a){return this.x+=a,this.y+=a,this},addVectors:function(a,e){return this.x=a.x+e.x,this.y=a.y+e.y,this},addScaledVector:function(a,e){return this.x+=a.x*e,this.y+=a.y*e,this},sub:function(a,e){return void 0!==e?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(a,e)):(this.x-=a.x,this.y-=a.y,this)},subScalar:function(a){return this.x-=a,this.y-=a,this},subVectors:function(a,e){return this.x=a.x-e.x,this.y=a.y-e.y,this},multiply:function(a){return this.x*=a.x,this.y*=a.y,this},multiplyScalar:function(a){return this.x*=a,this.y*=a,this},divide:function(a){return this.x/=a.x,this.y/=a.y,this},divideScalar:function(a){return this.multiplyScalar(1/a)},applyMatrix3:function(a){var e=this.x,c=this.y,b=a.elements;return this.x=b[0]*e+b[3]*c+b[6],this.y=b[1]*e+b[4]*c+b[7],this},min:function(a){return this.x=Math.min(this.x,a.x),this.y=Math.min(this.y,a.y),this},max:function(a){return this.x=Math.max(this.x,a.x),this.y=Math.max(this.y,a.y),this},clamp:function(a,e){return this.x=Math.max(a.x,Math.min(e.x,this.x)),this.y=Math.max(a.y,Math.min(e.y,this.y)),this},clampScalar:function(a,e){return this.x=Math.max(a,Math.min(e,this.x)),this.y=Math.max(a,Math.min(e,this.y)),this},clampLength:function(a,e){var c=this.length();return this.divideScalar(c||1).multiplyScalar(Math.max(a,Math.min(e,c)))},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this},negate:function(){return this.x=-this.x,this.y=-this.y,this},dot:function(a){return this.x*a.x+this.y*a.y},cross:function(a){return this.x*a.y-this.y*a.x},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y)},normalize:function(){return this.divideScalar(this.length()||1)},angle:function(){var a=Math.atan2(this.y,this.x);return a<0&&(a+=2*Math.PI),a},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){var e=this.x-a.x,c=this.y-a.y;return e*e+c*c},manhattanDistanceTo:function(a){return Math.abs(this.x-a.x)+Math.abs(this.y-a.y)},setLength:function(a){return this.normalize().multiplyScalar(a)},lerp:function(a,e){return this.x+=(a.x-this.x)*e,this.y+=(a.y-this.y)*e,this},lerpVectors:function(a,e,c){return this.subVectors(e,a).multiplyScalar(c).add(a)},equals:function(a){return a.x===this.x&&a.y===this.y},fromArray:function(a,e){return void 0===e&&(e=0),this.x=a[e],this.y=a[e+1],this},toArray:function(a,e){return void 0===a&&(a=[]),void 0===e&&(e=0),a[e]=this.x,a[e+1]=this.y,a},fromBufferAttribute:function(a,e,c){return void 0!==c&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=a.getX(e),this.y=a.getY(e),this},rotateAround:function(a,e){var c=Math.cos(e),b=Math.sin(e),t=this.x-a.x,d=this.y-a.y;return this.x=t*c-d*b+a.x,this.y=t*b+d*c+a.y,this}}),Object.assign(Oe,{slerp:function(a,e,c,b){return c.copy(a).slerp(e,b)},slerpFlat:function(a,e,c,b,t,d,i){var n=c[b+0],r=c[b+1],f=c[b+2],o=c[b+3],s=t[d+0],h=t[d+1],l=t[d+2],u=t[d+3];if(o!==u||n!==s||r!==h||f!==l){var p=1-i,m=n*s+r*h+f*l+o*u,g=m>=0?1:-1,v=1-m*m;if(v>Number.EPSILON){var y=Math.sqrt(v),x=Math.atan2(y,m*g);p=Math.sin(p*x)/y,i=Math.sin(i*x)/y}var w=i*g;if(n=n*p+s*w,r=r*p+h*w,f=f*p+l*w,o=o*p+u*w,p===1-i){var _=1/Math.sqrt(n*n+r*r+f*f+o*o);n*=_,r*=_,f*=_,o*=_}}a[e]=n,a[e+1]=r,a[e+2]=f,a[e+3]=o}}),Object.defineProperties(Oe.prototype,{x:{get:function(){return this._x},set:function(a){this._x=a,this._onChangeCallback()}},y:{get:function(){return this._y},set:function(a){this._y=a,this._onChangeCallback()}},z:{get:function(){return this._z},set:function(a){this._z=a,this._onChangeCallback()}},w:{get:function(){return this._w},set:function(a){this._w=a,this._onChangeCallback()}}}),Object.assign(Oe.prototype,{isQuaternion:!0,set:function(a,e,c,b){return this._x=a,this._y=e,this._z=c,this._w=b,this._onChangeCallback(),this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._w)},copy:function(a){return this._x=a.x,this._y=a.y,this._z=a.z,this._w=a.w,this._onChangeCallback(),this},setFromEuler:function(a,e){if(!a||!a.isEuler)throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");var c=a._x,b=a._y,t=a._z,d=a.order,i=Math.cos,n=Math.sin,r=i(c/2),f=i(b/2),o=i(t/2),s=n(c/2),h=n(b/2),l=n(t/2);return"XYZ"===d?(this._x=s*f*o+r*h*l,this._y=r*h*o-s*f*l,this._z=r*f*l+s*h*o,this._w=r*f*o-s*h*l):"YXZ"===d?(this._x=s*f*o+r*h*l,this._y=r*h*o-s*f*l,this._z=r*f*l-s*h*o,this._w=r*f*o+s*h*l):"ZXY"===d?(this._x=s*f*o-r*h*l,this._y=r*h*o+s*f*l,this._z=r*f*l+s*h*o,this._w=r*f*o-s*h*l):"ZYX"===d?(this._x=s*f*o-r*h*l,this._y=r*h*o+s*f*l,this._z=r*f*l-s*h*o,this._w=r*f*o+s*h*l):"YZX"===d?(this._x=s*f*o+r*h*l,this._y=r*h*o+s*f*l,this._z=r*f*l-s*h*o,this._w=r*f*o-s*h*l):"XZY"===d&&(this._x=s*f*o-r*h*l,this._y=r*h*o-s*f*l,this._z=r*f*l+s*h*o,this._w=r*f*o+s*h*l),!1!==e&&this._onChangeCallback(),this},setFromAxisAngle:function(a,e){var c=e/2,b=Math.sin(c);return this._x=a.x*b,this._y=a.y*b,this._z=a.z*b,this._w=Math.cos(c),this._onChangeCallback(),this},setFromRotationMatrix:function(a){var e,c=a.elements,b=c[0],t=c[4],d=c[8],i=c[1],n=c[5],r=c[9],f=c[2],o=c[6],s=c[10],h=b+n+s;return h>0?(e=.5/Math.sqrt(h+1),this._w=.25/e,this._x=(o-r)*e,this._y=(d-f)*e,this._z=(i-t)*e):b>n&&b>s?(e=2*Math.sqrt(1+b-n-s),this._w=(o-r)/e,this._x=.25*e,this._y=(t+i)/e,this._z=(d+f)/e):n>s?(e=2*Math.sqrt(1+n-b-s),this._w=(d-f)/e,this._x=(t+i)/e,this._y=.25*e,this._z=(r+o)/e):(e=2*Math.sqrt(1+s-b-n),this._w=(i-t)/e,this._x=(d+f)/e,this._y=(r+o)/e,this._z=.25*e),this._onChangeCallback(),this},setFromUnitVectors:function(a,e){var c=a.dot(e)+1;return c<1e-6?(c=0,Math.abs(a.x)>Math.abs(a.z)?(this._x=-a.y,this._y=a.x,this._z=0,this._w=c):(this._x=0,this._y=-a.z,this._z=a.y,this._w=c)):(this._x=a.y*e.z-a.z*e.y,this._y=a.z*e.x-a.x*e.z,this._z=a.x*e.y-a.y*e.x,this._w=c),this.normalize()},angleTo:function(a){return 2*Math.acos(Math.abs(Pe.clamp(this.dot(a),-1,1)))},rotateTowards:function(a,e){var c=this.angleTo(a);if(0===c)return this;var b=Math.min(1,e/c);return this.slerp(a,b),this},inverse:function(){return this.conjugate()},conjugate:function(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this},dot:function(a){return this._x*a._x+this._y*a._y+this._z*a._z+this._w*a._w},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var a=this.length();return 0===a?(this._x=0,this._y=0,this._z=0,this._w=1):(a=1/a,this._x=this._x*a,this._y=this._y*a,this._z=this._z*a,this._w=this._w*a),this._onChangeCallback(),this},multiply:function(a,e){return void 0!==e?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(a,e)):this.multiplyQuaternions(this,a)},premultiply:function(a){return this.multiplyQuaternions(a,this)},multiplyQuaternions:function(a,e){var c=a._x,b=a._y,t=a._z,d=a._w,i=e._x,n=e._y,r=e._z,f=e._w;return this._x=c*f+d*i+b*r-t*n,this._y=b*f+d*n+t*i-c*r,this._z=t*f+d*r+c*n-b*i,this._w=d*f-c*i-b*n-t*r,this._onChangeCallback(),this},slerp:function(a,e){if(0===e)return this;if(1===e)return this.copy(a);var c=this._x,b=this._y,t=this._z,d=this._w,i=d*a._w+c*a._x+b*a._y+t*a._z;if(i<0?(this._w=-a._w,this._x=-a._x,this._y=-a._y,this._z=-a._z,i=-i):this.copy(a),i>=1)return this._w=d,this._x=c,this._y=b,this._z=t,this;var n=1-i*i;if(n<=Number.EPSILON){var r=1-e;return this._w=r*d+e*this._w,this._x=r*c+e*this._x,this._y=r*b+e*this._y,this._z=r*t+e*this._z,this.normalize(),this._onChangeCallback(),this}var f=Math.sqrt(n),o=Math.atan2(f,i),s=Math.sin((1-e)*o)/f,h=Math.sin(e*o)/f;return this._w=d*s+this._w*h,this._x=c*s+this._x*h,this._y=b*s+this._y*h,this._z=t*s+this._z*h,this._onChangeCallback(),this},equals:function(a){return a._x===this._x&&a._y===this._y&&a._z===this._z&&a._w===this._w},fromArray:function(a,e){return void 0===e&&(e=0),this._x=a[e],this._y=a[e+1],this._z=a[e+2],this._w=a[e+3],this._onChangeCallback(),this},toArray:function(a,e){return void 0===a&&(a=[]),void 0===e&&(e=0),a[e]=this._x,a[e+1]=this._y,a[e+2]=this._z,a[e+3]=this._w,a},_onChange:function(a){return this._onChangeCallback=a,this},_onChangeCallback:function(){}});var Ie=new De,Ne=new Oe;function De(a,e,c){this.x=a||0,this.y=e||0,this.z=c||0}Object.assign(De.prototype,{isVector3:!0,set:function(a,e,c){return this.x=a,this.y=e,this.z=c,this},setScalar:function(a){return this.x=a,this.y=a,this.z=a,this},setX:function(a){return this.x=a,this},setY:function(a){return this.y=a,this},setZ:function(a){return this.z=a,this},setComponent:function(a,e){switch(a){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+a)}return this},getComponent:function(a){switch(a){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+a)}},clone:function(){return new this.constructor(this.x,this.y,this.z)},copy:function(a){return this.x=a.x,this.y=a.y,this.z=a.z,this},add:function(a,e){return void 0!==e?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(a,e)):(this.x+=a.x,this.y+=a.y,this.z+=a.z,this)},addScalar:function(a){return this.x+=a,this.y+=a,this.z+=a,this},addVectors:function(a,e){return this.x=a.x+e.x,this.y=a.y+e.y,this.z=a.z+e.z,this},addScaledVector:function(a,e){return this.x+=a.x*e,this.y+=a.y*e,this.z+=a.z*e,this},sub:function(a,e){return void 0!==e?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(a,e)):(this.x-=a.x,this.y-=a.y,this.z-=a.z,this)},subScalar:function(a){return this.x-=a,this.y-=a,this.z-=a,this},subVectors:function(a,e){return this.x=a.x-e.x,this.y=a.y-e.y,this.z=a.z-e.z,this},multiply:function(a,e){return void 0!==e?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(a,e)):(this.x*=a.x,this.y*=a.y,this.z*=a.z,this)},multiplyScalar:function(a){return this.x*=a,this.y*=a,this.z*=a,this},multiplyVectors:function(a,e){return this.x=a.x*e.x,this.y=a.y*e.y,this.z=a.z*e.z,this},applyEuler:function(a){return a&&a.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(Ne.setFromEuler(a))},applyAxisAngle:function(a,e){return this.applyQuaternion(Ne.setFromAxisAngle(a,e))},applyMatrix3:function(a){var e=this.x,c=this.y,b=this.z,t=a.elements;return this.x=t[0]*e+t[3]*c+t[6]*b,this.y=t[1]*e+t[4]*c+t[7]*b,this.z=t[2]*e+t[5]*c+t[8]*b,this},applyMatrix4:function(a){var e=this.x,c=this.y,b=this.z,t=a.elements,d=1/(t[3]*e+t[7]*c+t[11]*b+t[15]);return this.x=(t[0]*e+t[4]*c+t[8]*b+t[12])*d,this.y=(t[1]*e+t[5]*c+t[9]*b+t[13])*d,this.z=(t[2]*e+t[6]*c+t[10]*b+t[14])*d,this},applyQuaternion:function(a){var e=this.x,c=this.y,b=this.z,t=a.x,d=a.y,i=a.z,n=a.w,r=n*e+d*b-i*c,f=n*c+i*e-t*b,o=n*b+t*c-d*e,s=-t*e-d*c-i*b;return this.x=r*n+s*-t+f*-i-o*-d,this.y=f*n+s*-d+o*-t-r*-i,this.z=o*n+s*-i+r*-d-f*-t,this},project:function(a){return this.applyMatrix4(a.matrixWorldInverse).applyMatrix4(a.projectionMatrix)},unproject:function(a){return this.applyMatrix4(a.projectionMatrixInverse).applyMatrix4(a.matrixWorld)},transformDirection:function(a){var e=this.x,c=this.y,b=this.z,t=a.elements;return this.x=t[0]*e+t[4]*c+t[8]*b,this.y=t[1]*e+t[5]*c+t[9]*b,this.z=t[2]*e+t[6]*c+t[10]*b,this.normalize()},divide:function(a){return this.x/=a.x,this.y/=a.y,this.z/=a.z,this},divideScalar:function(a){return this.multiplyScalar(1/a)},min:function(a){return this.x=Math.min(this.x,a.x),this.y=Math.min(this.y,a.y),this.z=Math.min(this.z,a.z),this},max:function(a){return this.x=Math.max(this.x,a.x),this.y=Math.max(this.y,a.y),this.z=Math.max(this.z,a.z),this},clamp:function(a,e){return this.x=Math.max(a.x,Math.min(e.x,this.x)),this.y=Math.max(a.y,Math.min(e.y,this.y)),this.z=Math.max(a.z,Math.min(e.z,this.z)),this},clampScalar:function(a,e){return this.x=Math.max(a,Math.min(e,this.x)),this.y=Math.max(a,Math.min(e,this.y)),this.z=Math.max(a,Math.min(e,this.z)),this},clampLength:function(a,e){var c=this.length();return this.divideScalar(c||1).multiplyScalar(Math.max(a,Math.min(e,c)))},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length()||1)},setLength:function(a){return this.normalize().multiplyScalar(a)},lerp:function(a,e){return this.x+=(a.x-this.x)*e,this.y+=(a.y-this.y)*e,this.z+=(a.z-this.z)*e,this},lerpVectors:function(a,e,c){return this.subVectors(e,a).multiplyScalar(c).add(a)},cross:function(a,e){return void 0!==e?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(a,e)):this.crossVectors(this,a)},crossVectors:function(a,e){var c=a.x,b=a.y,t=a.z,d=e.x,i=e.y,n=e.z;return this.x=b*n-t*i,this.y=t*d-c*n,this.z=c*i-b*d,this},projectOnVector:function(a){var e=a.dot(this)/a.lengthSq();return this.copy(a).multiplyScalar(e)},projectOnPlane:function(a){return Ie.copy(this).projectOnVector(a),this.sub(Ie)},reflect:function(a){return this.sub(Ie.copy(a).multiplyScalar(2*this.dot(a)))},angleTo:function(a){var e=Math.sqrt(this.lengthSq()*a.lengthSq());0===e&&console.error("THREE.Vector3: angleTo() can't handle zero length vectors.");var c=this.dot(a)/e;return Math.acos(Pe.clamp(c,-1,1))},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){var e=this.x-a.x,c=this.y-a.y,b=this.z-a.z;return e*e+c*c+b*b},manhattanDistanceTo:function(a){return Math.abs(this.x-a.x)+Math.abs(this.y-a.y)+Math.abs(this.z-a.z)},setFromSpherical:function(a){return this.setFromSphericalCoords(a.radius,a.phi,a.theta)},setFromSphericalCoords:function(a,e,c){var b=Math.sin(e)*a;return this.x=b*Math.sin(c),this.y=Math.cos(e)*a,this.z=b*Math.cos(c),this},setFromCylindrical:function(a){return this.setFromCylindricalCoords(a.radius,a.theta,a.y)},setFromCylindricalCoords:function(a,e,c){return this.x=a*Math.sin(e),this.y=c,this.z=a*Math.cos(e),this},setFromMatrixPosition:function(a){var e=a.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this},setFromMatrixScale:function(a){var e=this.setFromMatrixColumn(a,0).length(),c=this.setFromMatrixColumn(a,1).length(),b=this.setFromMatrixColumn(a,2).length();return this.x=e,this.y=c,this.z=b,this},setFromMatrixColumn:function(a,e){return this.fromArray(a.elements,4*e)},equals:function(a){return a.x===this.x&&a.y===this.y&&a.z===this.z},fromArray:function(a,e){return void 0===e&&(e=0),this.x=a[e],this.y=a[e+1],this.z=a[e+2],this},toArray:function(a,e){return void 0===a&&(a=[]),void 0===e&&(e=0),a[e]=this.x,a[e+1]=this.y,a[e+2]=this.z,a},fromBufferAttribute:function(a,e,c){return void 0!==c&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=a.getX(e),this.y=a.getY(e),this.z=a.getZ(e),this}});var ze,Ue=new De;function Be(){this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}Object.assign(Be.prototype,{isMatrix3:!0,set:function(a,e,c,b,t,d,i,n,r){var f=this.elements;return f[0]=a,f[1]=b,f[2]=i,f[3]=e,f[4]=t,f[5]=n,f[6]=c,f[7]=d,f[8]=r,this},identity:function(){return this.set(1,0,0,0,1,0,0,0,1),this},clone:function(){return(new this.constructor).fromArray(this.elements)},copy:function(a){var e=this.elements,c=a.elements;return e[0]=c[0],e[1]=c[1],e[2]=c[2],e[3]=c[3],e[4]=c[4],e[5]=c[5],e[6]=c[6],e[7]=c[7],e[8]=c[8],this},setFromMatrix4:function(a){var e=a.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this},applyToBufferAttribute:function(a){for(var e=0,c=a.count;e<c;e++)Ue.x=a.getX(e),Ue.y=a.getY(e),Ue.z=a.getZ(e),Ue.applyMatrix3(this),a.setXYZ(e,Ue.x,Ue.y,Ue.z);return a},multiply:function(a){return this.multiplyMatrices(this,a)},premultiply:function(a){return this.multiplyMatrices(a,this)},multiplyMatrices:function(a,e){var c=a.elements,b=e.elements,t=this.elements,d=c[0],i=c[3],n=c[6],r=c[1],f=c[4],o=c[7],s=c[2],h=c[5],l=c[8],u=b[0],p=b[3],m=b[6],g=b[1],v=b[4],y=b[7],x=b[2],w=b[5],_=b[8];return t[0]=d*u+i*g+n*x,t[3]=d*p+i*v+n*w,t[6]=d*m+i*y+n*_,t[1]=r*u+f*g+o*x,t[4]=r*p+f*v+o*w,t[7]=r*m+f*y+o*_,t[2]=s*u+h*g+l*x,t[5]=s*p+h*v+l*w,t[8]=s*m+h*y+l*_,this},multiplyScalar:function(a){var e=this.elements;return e[0]*=a,e[3]*=a,e[6]*=a,e[1]*=a,e[4]*=a,e[7]*=a,e[2]*=a,e[5]*=a,e[8]*=a,this},determinant:function(){var a=this.elements,e=a[0],c=a[1],b=a[2],t=a[3],d=a[4],i=a[5],n=a[6],r=a[7],f=a[8];return e*d*f-e*i*r-c*t*f+c*i*n+b*t*r-b*d*n},getInverse:function(a,e){a&&a.isMatrix4&&console.error("THREE.Matrix3: .getInverse() no longer takes a Matrix4 argument.");var c=a.elements,b=this.elements,t=c[0],d=c[1],i=c[2],n=c[3],r=c[4],f=c[5],o=c[6],s=c[7],h=c[8],l=h*r-f*s,u=f*o-h*n,p=s*n-r*o,m=t*l+d*u+i*p;if(0===m){var g="THREE.Matrix3: .getInverse() can't invert matrix, determinant is 0";if(!0===e)throw new Error(g);return console.warn(g),this.identity()}var v=1/m;return b[0]=l*v,b[1]=(i*s-h*d)*v,b[2]=(f*d-i*r)*v,b[3]=u*v,b[4]=(h*t-i*o)*v,b[5]=(i*n-f*t)*v,b[6]=p*v,b[7]=(d*o-s*t)*v,b[8]=(r*t-d*n)*v,this},transpose:function(){var a,e=this.elements;return a=e[1],e[1]=e[3],e[3]=a,a=e[2],e[2]=e[6],e[6]=a,a=e[5],e[5]=e[7],e[7]=a,this},getNormalMatrix:function(a){return this.setFromMatrix4(a).getInverse(this).transpose()},transposeIntoArray:function(a){var e=this.elements;return a[0]=e[0],a[1]=e[3],a[2]=e[6],a[3]=e[1],a[4]=e[4],a[5]=e[7],a[6]=e[2],a[7]=e[5],a[8]=e[8],this},setUvTransform:function(a,e,c,b,t,d,i){var n=Math.cos(t),r=Math.sin(t);this.set(c*n,c*r,-c*(n*d+r*i)+d+a,-b*r,b*n,-b*(-r*d+n*i)+i+e,0,0,1)},scale:function(a,e){var c=this.elements;return c[0]*=a,c[3]*=a,c[6]*=a,c[1]*=e,c[4]*=e,c[7]*=e,this},rotate:function(a){var e=Math.cos(a),c=Math.sin(a),b=this.elements,t=b[0],d=b[3],i=b[6],n=b[1],r=b[4],f=b[7];return b[0]=e*t+c*n,b[3]=e*d+c*r,b[6]=e*i+c*f,b[1]=-c*t+e*n,b[4]=-c*d+e*r,b[7]=-c*i+e*f,this},translate:function(a,e){var c=this.elements;return c[0]+=a*c[2],c[3]+=a*c[5],c[6]+=a*c[8],c[1]+=e*c[2],c[4]+=e*c[5],c[7]+=e*c[8],this},equals:function(a){for(var e=this.elements,c=a.elements,b=0;b<9;b++)if(e[b]!==c[b])return!1;return!0},fromArray:function(a,e){void 0===e&&(e=0);for(var c=0;c<9;c++)this.elements[c]=a[c+e];return this},toArray:function(a,e){void 0===a&&(a=[]),void 0===e&&(e=0);var c=this.elements;return a[e]=c[0],a[e+1]=c[1],a[e+2]=c[2],a[e+3]=c[3],a[e+4]=c[4],a[e+5]=c[5],a[e+6]=c[6],a[e+7]=c[7],a[e+8]=c[8],a}});var Fe={getDataURL:function(a){var e;if("undefined"==typeof HTMLCanvasElement)return a.src;if(a instanceof HTMLCanvasElement)e=a;else{void 0===ze&&(ze=document.createElementNS("http://www.w3.org/1999/xhtml","canvas")),ze.width=a.width,ze.height=a.height;var c=ze.getContext("2d");a instanceof ImageData?c.putImageData(a,0,0):c.drawImage(a,0,0,a.width,a.height),e=ze}return e.width>2048||e.height>2048?e.toDataURL("image/jpeg",.6):e.toDataURL("image/png")}},Ge=0;function He(a,e,c,b,t,d,i,n,r,f){Object.defineProperty(this,"id",{value:Ge++}),this.uuid=Pe.generateUUID(),this.name="",this.image=void 0!==a?a:He.DEFAULT_IMAGE,this.mipmaps=[],this.mapping=void 0!==e?e:He.DEFAULT_MAPPING,this.wrapS=void 0!==c?c:sa,this.wrapT=void 0!==b?b:sa,this.magFilter=void 0!==t?t:ma,this.minFilter=void 0!==d?d:va,this.anisotropy=void 0!==r?r:1,this.format=void 0!==i?i:Ia,this.type=void 0!==n?n:ya,this.offset=new Ce(0,0),this.repeat=new Ce(1,1),this.center=new Ce(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Be,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=void 0!==f?f:le,this.version=0,this.onUpdate=null}function Ve(a,e,c,b){this.x=a||0,this.y=e||0,this.z=c||0,this.w=void 0!==b?b:1}function ke(a,e,c){this.width=a,this.height=e,this.scissor=new Ve(0,0,a,e),this.scissorTest=!1,this.viewport=new Ve(0,0,a,e),c=c||{},this.texture=new He(void 0,void 0,c.wrapS,c.wrapT,c.magFilter,c.minFilter,c.format,c.type,c.anisotropy,c.encoding),this.texture.image={},this.texture.image.width=a,this.texture.image.height=e,this.texture.generateMipmaps=void 0!==c.generateMipmaps&&c.generateMipmaps,this.texture.minFilter=void 0!==c.minFilter?c.minFilter:ma,this.depthBuffer=void 0===c.depthBuffer||c.depthBuffer,this.stencilBuffer=void 0===c.stencilBuffer||c.stencilBuffer,this.depthTexture=void 0!==c.depthTexture?c.depthTexture:null}function je(a,e,c){ke.call(this,a,e,c),this.samples=4}He.DEFAULT_IMAGE=void 0,He.DEFAULT_MAPPING=300,He.prototype=Object.assign(Object.create(Ae.prototype),{constructor:He,isTexture:!0,updateMatrix:function(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)},clone:function(){return(new this.constructor).copy(this)},copy:function(a){return this.name=a.name,this.image=a.image,this.mipmaps=a.mipmaps.slice(0),this.mapping=a.mapping,this.wrapS=a.wrapS,this.wrapT=a.wrapT,this.magFilter=a.magFilter,this.minFilter=a.minFilter,this.anisotropy=a.anisotropy,this.format=a.format,this.type=a.type,this.offset.copy(a.offset),this.repeat.copy(a.repeat),this.center.copy(a.center),this.rotation=a.rotation,this.matrixAutoUpdate=a.matrixAutoUpdate,this.matrix.copy(a.matrix),this.generateMipmaps=a.generateMipmaps,this.premultiplyAlpha=a.premultiplyAlpha,this.flipY=a.flipY,this.unpackAlignment=a.unpackAlignment,this.encoding=a.encoding,this},toJSON:function(a){var e=void 0===a||"string"==typeof a;if(!e&&void 0!==a.textures[this.uuid])return a.textures[this.uuid];var c={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(void 0!==this.image){var b=this.image;if(void 0===b.uuid&&(b.uuid=Pe.generateUUID()),!e&&void 0===a.images[b.uuid]){var t;if(Array.isArray(b)){t=[];for(var d=0,i=b.length;d<i;d++)t.push(Fe.getDataURL(b[d]))}else t=Fe.getDataURL(b);a.images[b.uuid]={uuid:b.uuid,url:t}}c.image=b.uuid}return e||(a.textures[this.uuid]=c),c},dispose:function(){this.dispatchEvent({type:"dispose"})},transformUv:function(a){if(300!==this.mapping)return a;if(a.applyMatrix3(this.matrix),a.x<0||a.x>1)switch(this.wrapS){case oa:a.x=a.x-Math.floor(a.x);break;case sa:a.x=a.x<0?0:1;break;case ha:1===Math.abs(Math.floor(a.x)%2)?a.x=Math.ceil(a.x)-a.x:a.x=a.x-Math.floor(a.x)}if(a.y<0||a.y>1)switch(this.wrapT){case oa:a.y=a.y-Math.floor(a.y);break;case sa:a.y=a.y<0?0:1;break;case ha:1===Math.abs(Math.floor(a.y)%2)?a.y=Math.ceil(a.y)-a.y:a.y=a.y-Math.floor(a.y)}return this.flipY&&(a.y=1-a.y),a}}),Object.defineProperty(He.prototype,"needsUpdate",{set:function(a){!0===a&&this.version++}}),Object.defineProperties(Ve.prototype,{width:{get:function(){return this.z},set:function(a){this.z=a}},height:{get:function(){return this.w},set:function(a){this.w=a}}}),Object.assign(Ve.prototype,{isVector4:!0,set:function(a,e,c,b){return this.x=a,this.y=e,this.z=c,this.w=b,this},setScalar:function(a){return this.x=a,this.y=a,this.z=a,this.w=a,this},setX:function(a){return this.x=a,this},setY:function(a){return this.y=a,this},setZ:function(a){return this.z=a,this},setW:function(a){return this.w=a,this},setComponent:function(a,e){switch(a){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+a)}return this},getComponent:function(a){switch(a){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+a)}},clone:function(){return new this.constructor(this.x,this.y,this.z,this.w)},copy:function(a){return this.x=a.x,this.y=a.y,this.z=a.z,this.w=void 0!==a.w?a.w:1,this},add:function(a,e){return void 0!==e?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(a,e)):(this.x+=a.x,this.y+=a.y,this.z+=a.z,this.w+=a.w,this)},addScalar:function(a){return this.x+=a,this.y+=a,this.z+=a,this.w+=a,this},addVectors:function(a,e){return this.x=a.x+e.x,this.y=a.y+e.y,this.z=a.z+e.z,this.w=a.w+e.w,this},addScaledVector:function(a,e){return this.x+=a.x*e,this.y+=a.y*e,this.z+=a.z*e,this.w+=a.w*e,this},sub:function(a,e){return void 0!==e?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(a,e)):(this.x-=a.x,this.y-=a.y,this.z-=a.z,this.w-=a.w,this)},subScalar:function(a){return this.x-=a,this.y-=a,this.z-=a,this.w-=a,this},subVectors:function(a,e){return this.x=a.x-e.x,this.y=a.y-e.y,this.z=a.z-e.z,this.w=a.w-e.w,this},multiplyScalar:function(a){return this.x*=a,this.y*=a,this.z*=a,this.w*=a,this},applyMatrix4:function(a){var e=this.x,c=this.y,b=this.z,t=this.w,d=a.elements;return this.x=d[0]*e+d[4]*c+d[8]*b+d[12]*t,this.y=d[1]*e+d[5]*c+d[9]*b+d[13]*t,this.z=d[2]*e+d[6]*c+d[10]*b+d[14]*t,this.w=d[3]*e+d[7]*c+d[11]*b+d[15]*t,this},divideScalar:function(a){return this.multiplyScalar(1/a)},setAxisAngleFromQuaternion:function(a){this.w=2*Math.acos(a.w);var e=Math.sqrt(1-a.w*a.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=a.x/e,this.y=a.y/e,this.z=a.z/e),this},setAxisAngleFromRotationMatrix:function(a){var e,c,b,t,d=a.elements,i=d[0],n=d[4],r=d[8],f=d[1],o=d[5],s=d[9],h=d[2],l=d[6],u=d[10];if(Math.abs(n-f)<.01&&Math.abs(r-h)<.01&&Math.abs(s-l)<.01){if(Math.abs(n+f)<.1&&Math.abs(r+h)<.1&&Math.abs(s+l)<.1&&Math.abs(i+o+u-3)<.1)return this.set(1,0,0,0),this;e=Math.PI;var p=(i+1)/2,m=(o+1)/2,g=(u+1)/2,v=(n+f)/4,y=(r+h)/4,x=(s+l)/4;return p>m&&p>g?p<.01?(c=0,b=.707106781,t=.707106781):(b=v/(c=Math.sqrt(p)),t=y/c):m>g?m<.01?(c=.707106781,b=0,t=.707106781):(c=v/(b=Math.sqrt(m)),t=x/b):g<.01?(c=.707106781,b=.707106781,t=0):(c=y/(t=Math.sqrt(g)),b=x/t),this.set(c,b,t,e),this}var w=Math.sqrt((l-s)*(l-s)+(r-h)*(r-h)+(f-n)*(f-n));return Math.abs(w)<.001&&(w=1),this.x=(l-s)/w,this.y=(r-h)/w,this.z=(f-n)/w,this.w=Math.acos((i+o+u-1)/2),this},min:function(a){return this.x=Math.min(this.x,a.x),this.y=Math.min(this.y,a.y),this.z=Math.min(this.z,a.z),this.w=Math.min(this.w,a.w),this},max:function(a){return this.x=Math.max(this.x,a.x),this.y=Math.max(this.y,a.y),this.z=Math.max(this.z,a.z),this.w=Math.max(this.w,a.w),this},clamp:function(a,e){return this.x=Math.max(a.x,Math.min(e.x,this.x)),this.y=Math.max(a.y,Math.min(e.y,this.y)),this.z=Math.max(a.z,Math.min(e.z,this.z)),this.w=Math.max(a.w,Math.min(e.w,this.w)),this},clampScalar:function(a,e){return this.x=Math.max(a,Math.min(e,this.x)),this.y=Math.max(a,Math.min(e,this.y)),this.z=Math.max(a,Math.min(e,this.z)),this.w=Math.max(a,Math.min(e,this.w)),this},clampLength:function(a,e){var c=this.length();return this.divideScalar(c||1).multiplyScalar(Math.max(a,Math.min(e,c)))},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z+this.w*a.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length()||1)},setLength:function(a){return this.normalize().multiplyScalar(a)},lerp:function(a,e){return this.x+=(a.x-this.x)*e,this.y+=(a.y-this.y)*e,this.z+=(a.z-this.z)*e,this.w+=(a.w-this.w)*e,this},lerpVectors:function(a,e,c){return this.subVectors(e,a).multiplyScalar(c).add(a)},equals:function(a){return a.x===this.x&&a.y===this.y&&a.z===this.z&&a.w===this.w},fromArray:function(a,e){return void 0===e&&(e=0),this.x=a[e],this.y=a[e+1],this.z=a[e+2],this.w=a[e+3],this},toArray:function(a,e){return void 0===a&&(a=[]),void 0===e&&(e=0),a[e]=this.x,a[e+1]=this.y,a[e+2]=this.z,a[e+3]=this.w,a},fromBufferAttribute:function(a,e,c){return void 0!==c&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=a.getX(e),this.y=a.getY(e),this.z=a.getZ(e),this.w=a.getW(e),this}}),ke.prototype=Object.assign(Object.create(Ae.prototype),{constructor:ke,isWebGLRenderTarget:!0,setSize:function(a,e){this.width===a&&this.height===e||(this.width=a,this.height=e,this.texture.image.width=a,this.texture.image.height=e,this.dispose()),this.viewport.set(0,0,a,e),this.scissor.set(0,0,a,e)},clone:function(){return(new this.constructor).copy(this)},copy:function(a){return this.width=a.width,this.height=a.height,this.viewport.copy(a.viewport),this.texture=a.texture.clone(),this.depthBuffer=a.depthBuffer,this.stencilBuffer=a.stencilBuffer,this.depthTexture=a.depthTexture,this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),je.prototype=Object.assign(Object.create(ke.prototype),{constructor:je,isWebGLMultisampleRenderTarget:!0,copy:function(a){return ke.prototype.copy.call(this,a),this.samples=a.samples,this}});var We=new De,qe=new Qe,Xe=new De(0,0,0),Ye=new De(1,1,1),Ze=new De,Je=new De,Ke=new De;function Qe(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}Object.assign(Qe.prototype,{isMatrix4:!0,set:function(a,e,c,b,t,d,i,n,r,f,o,s,h,l,u,p){var m=this.elements;return m[0]=a,m[4]=e,m[8]=c,m[12]=b,m[1]=t,m[5]=d,m[9]=i,m[13]=n,m[2]=r,m[6]=f,m[10]=o,m[14]=s,m[3]=h,m[7]=l,m[11]=u,m[15]=p,this},identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},clone:function(){return(new Qe).fromArray(this.elements)},copy:function(a){var e=this.elements,c=a.elements;return e[0]=c[0],e[1]=c[1],e[2]=c[2],e[3]=c[3],e[4]=c[4],e[5]=c[5],e[6]=c[6],e[7]=c[7],e[8]=c[8],e[9]=c[9],e[10]=c[10],e[11]=c[11],e[12]=c[12],e[13]=c[13],e[14]=c[14],e[15]=c[15],this},copyPosition:function(a){var e=this.elements,c=a.elements;return e[12]=c[12],e[13]=c[13],e[14]=c[14],this},extractBasis:function(a,e,c){return a.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),c.setFromMatrixColumn(this,2),this},makeBasis:function(a,e,c){return this.set(a.x,e.x,c.x,0,a.y,e.y,c.y,0,a.z,e.z,c.z,0,0,0,0,1),this},extractRotation:function(a){var e=this.elements,c=a.elements,b=1/We.setFromMatrixColumn(a,0).length(),t=1/We.setFromMatrixColumn(a,1).length(),d=1/We.setFromMatrixColumn(a,2).length();return e[0]=c[0]*b,e[1]=c[1]*b,e[2]=c[2]*b,e[3]=0,e[4]=c[4]*t,e[5]=c[5]*t,e[6]=c[6]*t,e[7]=0,e[8]=c[8]*d,e[9]=c[9]*d,e[10]=c[10]*d,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this},makeRotationFromEuler:function(a){a&&a.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");var e=this.elements,c=a.x,b=a.y,t=a.z,d=Math.cos(c),i=Math.sin(c),n=Math.cos(b),r=Math.sin(b),f=Math.cos(t),o=Math.sin(t);if("XYZ"===a.order){var s=d*f,h=d*o,l=i*f,u=i*o;e[0]=n*f,e[4]=-n*o,e[8]=r,e[1]=h+l*r,e[5]=s-u*r,e[9]=-i*n,e[2]=u-s*r,e[6]=l+h*r,e[10]=d*n}else if("YXZ"===a.order){var p=n*f,m=n*o,g=r*f,v=r*o;e[0]=p+v*i,e[4]=g*i-m,e[8]=d*r,e[1]=d*o,e[5]=d*f,e[9]=-i,e[2]=m*i-g,e[6]=v+p*i,e[10]=d*n}else if("ZXY"===a.order){p=n*f,m=n*o,g=r*f,v=r*o;e[0]=p-v*i,e[4]=-d*o,e[8]=g+m*i,e[1]=m+g*i,e[5]=d*f,e[9]=v-p*i,e[2]=-d*r,e[6]=i,e[10]=d*n}else if("ZYX"===a.order){s=d*f,h=d*o,l=i*f,u=i*o;e[0]=n*f,e[4]=l*r-h,e[8]=s*r+u,e[1]=n*o,e[5]=u*r+s,e[9]=h*r-l,e[2]=-r,e[6]=i*n,e[10]=d*n}else if("YZX"===a.order){var y=d*n,x=d*r,w=i*n,_=i*r;e[0]=n*f,e[4]=_-y*o,e[8]=w*o+x,e[1]=o,e[5]=d*f,e[9]=-i*f,e[2]=-r*f,e[6]=x*o+w,e[10]=y-_*o}else if("XZY"===a.order){y=d*n,x=d*r,w=i*n,_=i*r;e[0]=n*f,e[4]=-o,e[8]=r*f,e[1]=y*o+_,e[5]=d*f,e[9]=x*o-w,e[2]=w*o-x,e[6]=i*f,e[10]=_*o+y}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this},makeRotationFromQuaternion:function(a){return this.compose(Xe,a,Ye)},lookAt:function(a,e,c){var b=this.elements;return Ke.subVectors(a,e),0===Ke.lengthSq()&&(Ke.z=1),Ke.normalize(),Ze.crossVectors(c,Ke),0===Ze.lengthSq()&&(1===Math.abs(c.z)?Ke.x+=1e-4:Ke.z+=1e-4,Ke.normalize(),Ze.crossVectors(c,Ke)),Ze.normalize(),Je.crossVectors(Ke,Ze),b[0]=Ze.x,b[4]=Je.x,b[8]=Ke.x,b[1]=Ze.y,b[5]=Je.y,b[9]=Ke.y,b[2]=Ze.z,b[6]=Je.z,b[10]=Ke.z,this},multiply:function(a,e){return void 0!==e?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(a,e)):this.multiplyMatrices(this,a)},premultiply:function(a){return this.multiplyMatrices(a,this)},multiplyMatrices:function(a,e){var c=a.elements,b=e.elements,t=this.elements,d=c[0],i=c[4],n=c[8],r=c[12],f=c[1],o=c[5],s=c[9],h=c[13],l=c[2],u=c[6],p=c[10],m=c[14],g=c[3],v=c[7],y=c[11],x=c[15],w=b[0],_=b[4],M=b[8],S=b[12],T=b[1],E=b[5],A=b[9],L=b[13],R=b[2],P=b[6],C=b[10],O=b[14],I=b[3],N=b[7],D=b[11],z=b[15];return t[0]=d*w+i*T+n*R+r*I,t[4]=d*_+i*E+n*P+r*N,t[8]=d*M+i*A+n*C+r*D,t[12]=d*S+i*L+n*O+r*z,t[1]=f*w+o*T+s*R+h*I,t[5]=f*_+o*E+s*P+h*N,t[9]=f*M+o*A+s*C+h*D,t[13]=f*S+o*L+s*O+h*z,t[2]=l*w+u*T+p*R+m*I,t[6]=l*_+u*E+p*P+m*N,t[10]=l*M+u*A+p*C+m*D,t[14]=l*S+u*L+p*O+m*z,t[3]=g*w+v*T+y*R+x*I,t[7]=g*_+v*E+y*P+x*N,t[11]=g*M+v*A+y*C+x*D,t[15]=g*S+v*L+y*O+x*z,this},multiplyScalar:function(a){var e=this.elements;return e[0]*=a,e[4]*=a,e[8]*=a,e[12]*=a,e[1]*=a,e[5]*=a,e[9]*=a,e[13]*=a,e[2]*=a,e[6]*=a,e[10]*=a,e[14]*=a,e[3]*=a,e[7]*=a,e[11]*=a,e[15]*=a,this},applyToBufferAttribute:function(a){for(var e=0,c=a.count;e<c;e++)We.x=a.getX(e),We.y=a.getY(e),We.z=a.getZ(e),We.applyMatrix4(this),a.setXYZ(e,We.x,We.y,We.z);return a},determinant:function(){var a=this.elements,e=a[0],c=a[4],b=a[8],t=a[12],d=a[1],i=a[5],n=a[9],r=a[13],f=a[2],o=a[6],s=a[10],h=a[14];return a[3]*(+t*n*o-b*r*o-t*i*s+c*r*s+b*i*h-c*n*h)+a[7]*(+e*n*h-e*r*s+t*d*s-b*d*h+b*r*f-t*n*f)+a[11]*(+e*r*o-e*i*h-t*d*o+c*d*h+t*i*f-c*r*f)+a[15]*(-b*i*f-e*n*o+e*i*s+b*d*o-c*d*s+c*n*f)},transpose:function(){var a,e=this.elements;return a=e[1],e[1]=e[4],e[4]=a,a=e[2],e[2]=e[8],e[8]=a,a=e[6],e[6]=e[9],e[9]=a,a=e[3],e[3]=e[12],e[12]=a,a=e[7],e[7]=e[13],e[13]=a,a=e[11],e[11]=e[14],e[14]=a,this},setPosition:function(a,e,c){var b=this.elements;return a.isVector3?(b[12]=a.x,b[13]=a.y,b[14]=a.z):(b[12]=a,b[13]=e,b[14]=c),this},getInverse:function(a,e){var c=this.elements,b=a.elements,t=b[0],d=b[1],i=b[2],n=b[3],r=b[4],f=b[5],o=b[6],s=b[7],h=b[8],l=b[9],u=b[10],p=b[11],m=b[12],g=b[13],v=b[14],y=b[15],x=l*v*s-g*u*s+g*o*p-f*v*p-l*o*y+f*u*y,w=m*u*s-h*v*s-m*o*p+r*v*p+h*o*y-r*u*y,_=h*g*s-m*l*s+m*f*p-r*g*p-h*f*y+r*l*y,M=m*l*o-h*g*o-m*f*u+r*g*u+h*f*v-r*l*v,S=t*x+d*w+i*_+n*M;if(0===S){var T="THREE.Matrix4: .getInverse() can't invert matrix, determinant is 0";if(!0===e)throw new Error(T);return console.warn(T),this.identity()}var E=1/S;return c[0]=x*E,c[1]=(g*u*n-l*v*n-g*i*p+d*v*p+l*i*y-d*u*y)*E,c[2]=(f*v*n-g*o*n+g*i*s-d*v*s-f*i*y+d*o*y)*E,c[3]=(l*o*n-f*u*n-l*i*s+d*u*s+f*i*p-d*o*p)*E,c[4]=w*E,c[5]=(h*v*n-m*u*n+m*i*p-t*v*p-h*i*y+t*u*y)*E,c[6]=(m*o*n-r*v*n-m*i*s+t*v*s+r*i*y-t*o*y)*E,c[7]=(r*u*n-h*o*n+h*i*s-t*u*s-r*i*p+t*o*p)*E,c[8]=_*E,c[9]=(m*l*n-h*g*n-m*d*p+t*g*p+h*d*y-t*l*y)*E,c[10]=(r*g*n-m*f*n+m*d*s-t*g*s-r*d*y+t*f*y)*E,c[11]=(h*f*n-r*l*n-h*d*s+t*l*s+r*d*p-t*f*p)*E,c[12]=M*E,c[13]=(h*g*i-m*l*i+m*d*u-t*g*u-h*d*v+t*l*v)*E,c[14]=(m*f*i-r*g*i-m*d*o+t*g*o+r*d*v-t*f*v)*E,c[15]=(r*l*i-h*f*i+h*d*o-t*l*o-r*d*u+t*f*u)*E,this},scale:function(a){var e=this.elements,c=a.x,b=a.y,t=a.z;return e[0]*=c,e[4]*=b,e[8]*=t,e[1]*=c,e[5]*=b,e[9]*=t,e[2]*=c,e[6]*=b,e[10]*=t,e[3]*=c,e[7]*=b,e[11]*=t,this},getMaxScaleOnAxis:function(){var a=this.elements,e=a[0]*a[0]+a[1]*a[1]+a[2]*a[2],c=a[4]*a[4]+a[5]*a[5]+a[6]*a[6],b=a[8]*a[8]+a[9]*a[9]+a[10]*a[10];return Math.sqrt(Math.max(e,c,b))},makeTranslation:function(a,e,c){return this.set(1,0,0,a,0,1,0,e,0,0,1,c,0,0,0,1),this},makeRotationX:function(a){var e=Math.cos(a),c=Math.sin(a);return this.set(1,0,0,0,0,e,-c,0,0,c,e,0,0,0,0,1),this},makeRotationY:function(a){var e=Math.cos(a),c=Math.sin(a);return this.set(e,0,c,0,0,1,0,0,-c,0,e,0,0,0,0,1),this},makeRotationZ:function(a){var e=Math.cos(a),c=Math.sin(a);return this.set(e,-c,0,0,c,e,0,0,0,0,1,0,0,0,0,1),this},makeRotationAxis:function(a,e){var c=Math.cos(e),b=Math.sin(e),t=1-c,d=a.x,i=a.y,n=a.z,r=t*d,f=t*i;return this.set(r*d+c,r*i-b*n,r*n+b*i,0,r*i+b*n,f*i+c,f*n-b*d,0,r*n-b*i,f*n+b*d,t*n*n+c,0,0,0,0,1),this},makeScale:function(a,e,c){return this.set(a,0,0,0,0,e,0,0,0,0,c,0,0,0,0,1),this},makeShear:function(a,e,c){return this.set(1,e,c,0,a,1,c,0,a,e,1,0,0,0,0,1),this},compose:function(a,e,c){var b=this.elements,t=e._x,d=e._y,i=e._z,n=e._w,r=t+t,f=d+d,o=i+i,s=t*r,h=t*f,l=t*o,u=d*f,p=d*o,m=i*o,g=n*r,v=n*f,y=n*o,x=c.x,w=c.y,_=c.z;return b[0]=(1-(u+m))*x,b[1]=(h+y)*x,b[2]=(l-v)*x,b[3]=0,b[4]=(h-y)*w,b[5]=(1-(s+m))*w,b[6]=(p+g)*w,b[7]=0,b[8]=(l+v)*_,b[9]=(p-g)*_,b[10]=(1-(s+u))*_,b[11]=0,b[12]=a.x,b[13]=a.y,b[14]=a.z,b[15]=1,this},decompose:function(a,e,c){var b=this.elements,t=We.set(b[0],b[1],b[2]).length(),d=We.set(b[4],b[5],b[6]).length(),i=We.set(b[8],b[9],b[10]).length();this.determinant()<0&&(t=-t),a.x=b[12],a.y=b[13],a.z=b[14],qe.copy(this);var n=1/t,r=1/d,f=1/i;return qe.elements[0]*=n,qe.elements[1]*=n,qe.elements[2]*=n,qe.elements[4]*=r,qe.elements[5]*=r,qe.elements[6]*=r,qe.elements[8]*=f,qe.elements[9]*=f,qe.elements[10]*=f,e.setFromRotationMatrix(qe),c.x=t,c.y=d,c.z=i,this},makePerspective:function(a,e,c,b,t,d){void 0===d&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");var i=this.elements,n=2*t/(e-a),r=2*t/(c-b),f=(e+a)/(e-a),o=(c+b)/(c-b),s=-(d+t)/(d-t),h=-2*d*t/(d-t);return i[0]=n,i[4]=0,i[8]=f,i[12]=0,i[1]=0,i[5]=r,i[9]=o,i[13]=0,i[2]=0,i[6]=0,i[10]=s,i[14]=h,i[3]=0,i[7]=0,i[11]=-1,i[15]=0,this},makeOrthographic:function(a,e,c,b,t,d){var i=this.elements,n=1/(e-a),r=1/(c-b),f=1/(d-t),o=(e+a)*n,s=(c+b)*r,h=(d+t)*f;return i[0]=2*n,i[4]=0,i[8]=0,i[12]=-o,i[1]=0,i[5]=2*r,i[9]=0,i[13]=-s,i[2]=0,i[6]=0,i[10]=-2*f,i[14]=-h,i[3]=0,i[7]=0,i[11]=0,i[15]=1,this},equals:function(a){for(var e=this.elements,c=a.elements,b=0;b<16;b++)if(e[b]!==c[b])return!1;return!0},fromArray:function(a,e){void 0===e&&(e=0);for(var c=0;c<16;c++)this.elements[c]=a[c+e];return this},toArray:function(a,e){void 0===a&&(a=[]),void 0===e&&(e=0);var c=this.elements;return a[e]=c[0],a[e+1]=c[1],a[e+2]=c[2],a[e+3]=c[3],a[e+4]=c[4],a[e+5]=c[5],a[e+6]=c[6],a[e+7]=c[7],a[e+8]=c[8],a[e+9]=c[9],a[e+10]=c[10],a[e+11]=c[11],a[e+12]=c[12],a[e+13]=c[13],a[e+14]=c[14],a[e+15]=c[15],a}});var $e=new Qe,ac=new Oe;function ec(a,e,c,b){this._x=a||0,this._y=e||0,this._z=c||0,this._order=b||ec.DefaultOrder}function cc(){this.mask=1}ec.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"],ec.DefaultOrder="XYZ",Object.defineProperties(ec.prototype,{x:{get:function(){return this._x},set:function(a){this._x=a,this._onChangeCallback()}},y:{get:function(){return this._y},set:function(a){this._y=a,this._onChangeCallback()}},z:{get:function(){return this._z},set:function(a){this._z=a,this._onChangeCallback()}},order:{get:function(){return this._order},set:function(a){this._order=a,this._onChangeCallback()}}}),Object.assign(ec.prototype,{isEuler:!0,set:function(a,e,c,b){return this._x=a,this._y=e,this._z=c,this._order=b||this._order,this._onChangeCallback(),this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._order)},copy:function(a){return this._x=a._x,this._y=a._y,this._z=a._z,this._order=a._order,this._onChangeCallback(),this},setFromRotationMatrix:function(a,e,c){var b=Pe.clamp,t=a.elements,d=t[0],i=t[4],n=t[8],r=t[1],f=t[5],o=t[9],s=t[2],h=t[6],l=t[10];return"XYZ"===(e=e||this._order)?(this._y=Math.asin(b(n,-1,1)),Math.abs(n)<.9999999?(this._x=Math.atan2(-o,l),this._z=Math.atan2(-i,d)):(this._x=Math.atan2(h,f),this._z=0)):"YXZ"===e?(this._x=Math.asin(-b(o,-1,1)),Math.abs(o)<.9999999?(this._y=Math.atan2(n,l),this._z=Math.atan2(r,f)):(this._y=Math.atan2(-s,d),this._z=0)):"ZXY"===e?(this._x=Math.asin(b(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(-s,l),this._z=Math.atan2(-i,f)):(this._y=0,this._z=Math.atan2(r,d))):"ZYX"===e?(this._y=Math.asin(-b(s,-1,1)),Math.abs(s)<.9999999?(this._x=Math.atan2(h,l),this._z=Math.atan2(r,d)):(this._x=0,this._z=Math.atan2(-i,f))):"YZX"===e?(this._z=Math.asin(b(r,-1,1)),Math.abs(r)<.9999999?(this._x=Math.atan2(-o,f),this._y=Math.atan2(-s,d)):(this._x=0,this._y=Math.atan2(n,l))):"XZY"===e?(this._z=Math.asin(-b(i,-1,1)),Math.abs(i)<.9999999?(this._x=Math.atan2(h,f),this._y=Math.atan2(n,d)):(this._x=Math.atan2(-o,l),this._y=0)):console.warn("THREE.Euler: .setFromRotationMatrix() given unsupported order: "+e),this._order=e,!1!==c&&this._onChangeCallback(),this},setFromQuaternion:function(a,e,c){return $e.makeRotationFromQuaternion(a),this.setFromRotationMatrix($e,e,c)},setFromVector3:function(a,e){return this.set(a.x,a.y,a.z,e||this._order)},reorder:function(a){return ac.setFromEuler(this),this.setFromQuaternion(ac,a)},equals:function(a){return a._x===this._x&&a._y===this._y&&a._z===this._z&&a._order===this._order},fromArray:function(a){return this._x=a[0],this._y=a[1],this._z=a[2],void 0!==a[3]&&(this._order=a[3]),this._onChangeCallback(),this},toArray:function(a,e){return void 0===a&&(a=[]),void 0===e&&(e=0),a[e]=this._x,a[e+1]=this._y,a[e+2]=this._z,a[e+3]=this._order,a},toVector3:function(a){return a?a.set(this._x,this._y,this._z):new De(this._x,this._y,this._z)},_onChange:function(a){return this._onChangeCallback=a,this},_onChangeCallback:function(){}}),Object.assign(cc.prototype,{set:function(a){this.mask=1<<a|0},enable:function(a){this.mask|=1<<a|0},enableAll:function(){this.mask=-1},toggle:function(a){this.mask^=1<<a|0},disable:function(a){this.mask&=~(1<<a|0)},disableAll:function(){this.mask=0},test:function(a){return 0!=(this.mask&a.mask)}});var bc=0,tc=new De,dc=new Oe,ic=new Qe,nc=new De,rc=new De,fc=new De,oc=new Oe,sc=new De(1,0,0),hc=new De(0,1,0),lc=new De(0,0,1),uc={type:"added"},pc={type:"removed"};function mc(){Object.defineProperty(this,"id",{value:bc++}),this.uuid=Pe.generateUUID(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=mc.DefaultUp.clone();var a=new De,e=new ec,c=new Oe,b=new De(1,1,1);e._onChange((function(){c.setFromEuler(e,!1)})),c._onChange((function(){e.setFromQuaternion(c,void 0,!1)})),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:a},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:c},scale:{configurable:!0,enumerable:!0,value:b},modelViewMatrix:{value:new Qe},normalMatrix:{value:new Be}}),this.matrix=new Qe,this.matrixWorld=new Qe,this.matrixAutoUpdate=mc.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new cc,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.userData={}}function gc(){mc.call(this),this.type="Scene",this.background=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}mc.DefaultUp=new De(0,1,0),mc.DefaultMatrixAutoUpdate=!0,mc.prototype=Object.assign(Object.create(Ae.prototype),{constructor:mc,isObject3D:!0,onBeforeRender:function(){},onAfterRender:function(){},applyMatrix:function(a){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(a),this.matrix.decompose(this.position,this.quaternion,this.scale)},applyQuaternion:function(a){return this.quaternion.premultiply(a),this},setRotationFromAxisAngle:function(a,e){this.quaternion.setFromAxisAngle(a,e)},setRotationFromEuler:function(a){this.quaternion.setFromEuler(a,!0)},setRotationFromMatrix:function(a){this.quaternion.setFromRotationMatrix(a)},setRotationFromQuaternion:function(a){this.quaternion.copy(a)},rotateOnAxis:function(a,e){return dc.setFromAxisAngle(a,e),this.quaternion.multiply(dc),this},rotateOnWorldAxis:function(a,e){return dc.setFromAxisAngle(a,e),this.quaternion.premultiply(dc),this},rotateX:function(a){return this.rotateOnAxis(sc,a)},rotateY:function(a){return this.rotateOnAxis(hc,a)},rotateZ:function(a){return this.rotateOnAxis(lc,a)},translateOnAxis:function(a,e){return tc.copy(a).applyQuaternion(this.quaternion),this.position.add(tc.multiplyScalar(e)),this},translateX:function(a){return this.translateOnAxis(sc,a)},translateY:function(a){return this.translateOnAxis(hc,a)},translateZ:function(a){return this.translateOnAxis(lc,a)},localToWorld:function(a){return a.applyMatrix4(this.matrixWorld)},worldToLocal:function(a){return a.applyMatrix4(ic.getInverse(this.matrixWorld))},lookAt:function(a,e,c){a.isVector3?nc.copy(a):nc.set(a,e,c);var b=this.parent;this.updateWorldMatrix(!0,!1),rc.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?ic.lookAt(rc,nc,this.up):ic.lookAt(nc,rc,this.up),this.quaternion.setFromRotationMatrix(ic),b&&(ic.extractRotation(b.matrixWorld),dc.setFromRotationMatrix(ic),this.quaternion.premultiply(dc.inverse()))},add:function(a){if(arguments.length>1){for(var e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return a===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",a),this):(a&&a.isObject3D?(null!==a.parent&&a.parent.remove(a),a.parent=this,this.children.push(a),a.dispatchEvent(uc)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",a),this)},remove:function(a){if(arguments.length>1){for(var e=0;e<arguments.length;e++)this.remove(arguments[e]);return this}var c=this.children.indexOf(a);return-1!==c&&(a.parent=null,this.children.splice(c,1),a.dispatchEvent(pc)),this},attach:function(a){return this.updateWorldMatrix(!0,!1),ic.getInverse(this.matrixWorld),null!==a.parent&&(a.parent.updateWorldMatrix(!0,!1),ic.multiply(a.parent.matrixWorld)),a.applyMatrix(ic),a.updateWorldMatrix(!1,!1),this.add(a),this},getObjectById:function(a){return this.getObjectByProperty("id",a)},getObjectByName:function(a){return this.getObjectByProperty("name",a)},getObjectByProperty:function(a,e){if(this[a]===e)return this;for(var c=0,b=this.children.length;c<b;c++){var t=this.children[c].getObjectByProperty(a,e);if(void 0!==t)return t}},getWorldPosition:function(a){return void 0===a&&(console.warn("THREE.Object3D: .getWorldPosition() target is now required"),a=new De),this.updateMatrixWorld(!0),a.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(a){return void 0===a&&(console.warn("THREE.Object3D: .getWorldQuaternion() target is now required"),a=new Oe),this.updateMatrixWorld(!0),this.matrixWorld.decompose(rc,a,fc),a},getWorldScale:function(a){return void 0===a&&(console.warn("THREE.Object3D: .getWorldScale() target is now required"),a=new De),this.updateMatrixWorld(!0),this.matrixWorld.decompose(rc,oc,a),a},getWorldDirection:function(a){void 0===a&&(console.warn("THREE.Object3D: .getWorldDirection() target is now required"),a=new De),this.updateMatrixWorld(!0);var e=this.matrixWorld.elements;return a.set(e[8],e[9],e[10]).normalize()},raycast:function(){},traverse:function(a){a(this);for(var e=this.children,c=0,b=e.length;c<b;c++)e[c].traverse(a)},traverseVisible:function(a){if(!1!==this.visible){a(this);for(var e=this.children,c=0,b=e.length;c<b;c++)e[c].traverseVisible(a)}},traverseAncestors:function(a){var e=this.parent;null!==e&&(a(e),e.traverseAncestors(a))},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(a){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||a)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,a=!0);for(var e=this.children,c=0,b=e.length;c<b;c++)e[c].updateMatrixWorld(a)},updateWorldMatrix:function(a,e){var c=this.parent;if(!0===a&&null!==c&&c.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===e)for(var b=this.children,t=0,d=b.length;t<d;t++)b[t].updateWorldMatrix(!1,!0)},toJSON:function(a){var e=void 0===a||"string"==typeof a,c={};e&&(a={geometries:{},materials:{},textures:{},images:{},shapes:{}},c.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});var b={};function t(e,c){return void 0===e[c.uuid]&&(e[c.uuid]=c.toJSON(a)),c.uuid}if(b.uuid=this.uuid,b.type=this.type,""!==this.name&&(b.name=this.name),!0===this.castShadow&&(b.castShadow=!0),!0===this.receiveShadow&&(b.receiveShadow=!0),!1===this.visible&&(b.visible=!1),!1===this.frustumCulled&&(b.frustumCulled=!1),0!==this.renderOrder&&(b.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(b.userData=this.userData),b.layers=this.layers.mask,b.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(b.matrixAutoUpdate=!1),this.isMesh&&this.drawMode!==oe&&(b.drawMode=this.drawMode),this.isMesh||this.isLine||this.isPoints){b.geometry=t(a.geometries,this.geometry);var d=this.geometry.parameters;if(void 0!==d&&void 0!==d.shapes){var i=d.shapes;if(Array.isArray(i))for(var n=0,r=i.length;n<r;n++){var f=i[n];t(a.shapes,f)}else t(a.shapes,i)}}if(void 0!==this.material)if(Array.isArray(this.material)){var o=[];for(n=0,r=this.material.length;n<r;n++)o.push(t(a.materials,this.material[n]));b.material=o}else b.material=t(a.materials,this.material);if(this.children.length>0){b.children=[];for(n=0;n<this.children.length;n++)b.children.push(this.children[n].toJSON(a).object)}if(e){var s=p(a.geometries),h=p(a.materials),l=p(a.textures),u=p(a.images);i=p(a.shapes);s.length>0&&(c.geometries=s),h.length>0&&(c.materials=h),l.length>0&&(c.textures=l),u.length>0&&(c.images=u),i.length>0&&(c.shapes=i)}return c.object=b,c;function p(a){var e=[];for(var c in a){var b=a[c];delete b.metadata,e.push(b)}return e}},clone:function(a){return(new this.constructor).copy(this,a)},copy:function(a,e){if(void 0===e&&(e=!0),this.name=a.name,this.up.copy(a.up),this.position.copy(a.position),this.quaternion.copy(a.quaternion),this.scale.copy(a.scale),this.matrix.copy(a.matrix),this.matrixWorld.copy(a.matrixWorld),this.matrixAutoUpdate=a.matrixAutoUpdate,this.matrixWorldNeedsUpdate=a.matrixWorldNeedsUpdate,this.layers.mask=a.layers.mask,this.visible=a.visible,this.castShadow=a.castShadow,this.receiveShadow=a.receiveShadow,this.frustumCulled=a.frustumCulled,this.renderOrder=a.renderOrder,this.userData=JSON.parse(JSON.stringify(a.userData)),!0===e)for(var c=0;c<a.children.length;c++){var b=a.children[c];this.add(b.clone())}return this}}),gc.prototype=Object.assign(Object.create(mc.prototype),{constructor:gc,isScene:!0,copy:function(a,e){return mc.prototype.copy.call(this,a,e),null!==a.background&&(this.background=a.background.clone()),null!==a.fog&&(this.fog=a.fog.clone()),null!==a.overrideMaterial&&(this.overrideMaterial=a.overrideMaterial.clone()),this.autoUpdate=a.autoUpdate,this.matrixAutoUpdate=a.matrixAutoUpdate,this},toJSON:function(a){var e=mc.prototype.toJSON.call(this,a);return null!==this.background&&(e.object.background=this.background.toJSON(a)),null!==this.fog&&(e.object.fog=this.fog.toJSON()),e},dispose:function(){this.dispatchEvent({type:"dispose"})}});var vc=[new De,new De,new De,new De,new De,new De,new De,new De],yc=new De,xc=new De,wc=new De,_c=new De,Mc=new De,Sc=new De,Tc=new De,Ec=new De,Ac=new De,Lc=new De,Rc=new De;function Pc(a,e){this.min=void 0!==a?a:new De(1/0,1/0,1/0),this.max=void 0!==e?e:new De(-1/0,-1/0,-1/0)}function Cc(a,e,c,b,t){var d,i;for(d=0,i=a.length-3;d<=i;d+=3){Rc.fromArray(a,d);var n=t.x*Math.abs(Rc.x)+t.y*Math.abs(Rc.y)+t.z*Math.abs(Rc.z),r=e.dot(Rc),f=c.dot(Rc),o=b.dot(Rc);if(Math.max(-Math.max(r,f,o),Math.min(r,f,o))>n)return!1}return!0}Object.assign(Pc.prototype,{isBox3:!0,set:function(a,e){return this.min.copy(a),this.max.copy(e),this},setFromArray:function(a){for(var e=1/0,c=1/0,b=1/0,t=-1/0,d=-1/0,i=-1/0,n=0,r=a.length;n<r;n+=3){var f=a[n],o=a[n+1],s=a[n+2];f<e&&(e=f),o<c&&(c=o),s<b&&(b=s),f>t&&(t=f),o>d&&(d=o),s>i&&(i=s)}return this.min.set(e,c,b),this.max.set(t,d,i),this},setFromBufferAttribute:function(a){for(var e=1/0,c=1/0,b=1/0,t=-1/0,d=-1/0,i=-1/0,n=0,r=a.count;n<r;n++){var f=a.getX(n),o=a.getY(n),s=a.getZ(n);f<e&&(e=f),o<c&&(c=o),s<b&&(b=s),f>t&&(t=f),o>d&&(d=o),s>i&&(i=s)}return this.min.set(e,c,b),this.max.set(t,d,i),this},setFromPoints:function(a){this.makeEmpty();for(var e=0,c=a.length;e<c;e++)this.expandByPoint(a[e]);return this},setFromCenterAndSize:function(a,e){var c=yc.copy(e).multiplyScalar(.5);return this.min.copy(a).sub(c),this.max.copy(a).add(c),this},setFromObject:function(a){return this.makeEmpty(),this.expandByObject(a)},clone:function(){return(new this.constructor).copy(this)},copy:function(a){return this.min.copy(a.min),this.max.copy(a.max),this},makeEmpty:function(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},getCenter:function(a){return void 0===a&&(console.warn("THREE.Box3: .getCenter() target is now required"),a=new De),this.isEmpty()?a.set(0,0,0):a.addVectors(this.min,this.max).multiplyScalar(.5)},getSize:function(a){return void 0===a&&(console.warn("THREE.Box3: .getSize() target is now required"),a=new De),this.isEmpty()?a.set(0,0,0):a.subVectors(this.max,this.min)},expandByPoint:function(a){return this.min.min(a),this.max.max(a),this},expandByVector:function(a){return this.min.sub(a),this.max.add(a),this},expandByScalar:function(a){return this.min.addScalar(-a),this.max.addScalar(a),this},expandByObject:function(a){var e,c;a.updateWorldMatrix(!1,!1);var b=a.geometry;if(void 0!==b)if(b.isGeometry){var t=b.vertices;for(e=0,c=t.length;e<c;e++)yc.copy(t[e]),yc.applyMatrix4(a.matrixWorld),this.expandByPoint(yc)}else if(b.isBufferGeometry){var d=b.attributes.position;if(void 0!==d)for(e=0,c=d.count;e<c;e++)yc.fromBufferAttribute(d,e).applyMatrix4(a.matrixWorld),this.expandByPoint(yc)}var i=a.children;for(e=0,c=i.length;e<c;e++)this.expandByObject(i[e]);return this},containsPoint:function(a){return!(a.x<this.min.x||a.x>this.max.x||a.y<this.min.y||a.y>this.max.y||a.z<this.min.z||a.z>this.max.z)},containsBox:function(a){return this.min.x<=a.min.x&&a.max.x<=this.max.x&&this.min.y<=a.min.y&&a.max.y<=this.max.y&&this.min.z<=a.min.z&&a.max.z<=this.max.z},getParameter:function(a,e){return void 0===e&&(console.warn("THREE.Box3: .getParameter() target is now required"),e=new De),e.set((a.x-this.min.x)/(this.max.x-this.min.x),(a.y-this.min.y)/(this.max.y-this.min.y),(a.z-this.min.z)/(this.max.z-this.min.z))},intersectsBox:function(a){return!(a.max.x<this.min.x||a.min.x>this.max.x||a.max.y<this.min.y||a.min.y>this.max.y||a.max.z<this.min.z||a.min.z>this.max.z)},intersectsSphere:function(a){return this.clampPoint(a.center,yc),yc.distanceToSquared(a.center)<=a.radius*a.radius},intersectsPlane:function(a){var e,c;return a.normal.x>0?(e=a.normal.x*this.min.x,c=a.normal.x*this.max.x):(e=a.normal.x*this.max.x,c=a.normal.x*this.min.x),a.normal.y>0?(e+=a.normal.y*this.min.y,c+=a.normal.y*this.max.y):(e+=a.normal.y*this.max.y,c+=a.normal.y*this.min.y),a.normal.z>0?(e+=a.normal.z*this.min.z,c+=a.normal.z*this.max.z):(e+=a.normal.z*this.max.z,c+=a.normal.z*this.min.z),e<=-a.constant&&c>=-a.constant},intersectsTriangle:function(a){if(this.isEmpty())return!1;this.getCenter(Ec),Ac.subVectors(this.max,Ec),xc.subVectors(a.a,Ec),wc.subVectors(a.b,Ec),_c.subVectors(a.c,Ec),Mc.subVectors(wc,xc),Sc.subVectors(_c,wc),Tc.subVectors(xc,_c);var e=[0,-Mc.z,Mc.y,0,-Sc.z,Sc.y,0,-Tc.z,Tc.y,Mc.z,0,-Mc.x,Sc.z,0,-Sc.x,Tc.z,0,-Tc.x,-Mc.y,Mc.x,0,-Sc.y,Sc.x,0,-Tc.y,Tc.x,0];return!!Cc(e,xc,wc,_c,Ac)&&(!!Cc(e=[1,0,0,0,1,0,0,0,1],xc,wc,_c,Ac)&&(Lc.crossVectors(Mc,Sc),Cc(e=[Lc.x,Lc.y,Lc.z],xc,wc,_c,Ac)))},clampPoint:function(a,e){return void 0===e&&(console.warn("THREE.Box3: .clampPoint() target is now required"),e=new De),e.copy(a).clamp(this.min,this.max)},distanceToPoint:function(a){return yc.copy(a).clamp(this.min,this.max).sub(a).length()},getBoundingSphere:function(a){return void 0===a&&console.error("THREE.Box3: .getBoundingSphere() target is now required"),this.getCenter(a.center),a.radius=.5*this.getSize(yc).length(),a},intersect:function(a){return this.min.max(a.min),this.max.min(a.max),this.isEmpty()&&this.makeEmpty(),this},union:function(a){return this.min.min(a.min),this.max.max(a.max),this},applyMatrix4:function(a){return this.isEmpty()?this:(vc[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(a),vc[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(a),vc[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(a),vc[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(a),vc[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(a),vc[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(a),vc[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(a),vc[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(a),this.setFromPoints(vc),this)},translate:function(a){return this.min.add(a),this.max.add(a),this},equals:function(a){return a.min.equals(this.min)&&a.max.equals(this.max)}});var Oc=new Pc;function Ic(a,e){this.center=void 0!==a?a:new De,this.radius=void 0!==e?e:0}Object.assign(Ic.prototype,{set:function(a,e){return this.center.copy(a),this.radius=e,this},setFromPoints:function(a,e){var c=this.center;void 0!==e?c.copy(e):Oc.setFromPoints(a).getCenter(c);for(var b=0,t=0,d=a.length;t<d;t++)b=Math.max(b,c.distanceToSquared(a[t]));return this.radius=Math.sqrt(b),this},clone:function(){return(new this.constructor).copy(this)},copy:function(a){return this.center.copy(a.center),this.radius=a.radius,this},empty:function(){return this.radius<=0},containsPoint:function(a){return a.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(a){return a.distanceTo(this.center)-this.radius},intersectsSphere:function(a){var e=this.radius+a.radius;return a.center.distanceToSquared(this.center)<=e*e},intersectsBox:function(a){return a.intersectsSphere(this)},intersectsPlane:function(a){return Math.abs(a.distanceToPoint(this.center))<=this.radius},clampPoint:function(a,e){var c=this.center.distanceToSquared(a);return void 0===e&&(console.warn("THREE.Sphere: .clampPoint() target is now required"),e=new De),e.copy(a),c>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e},getBoundingBox:function(a){return void 0===a&&(console.warn("THREE.Sphere: .getBoundingBox() target is now required"),a=new Pc),a.set(this.center,this.center),a.expandByScalar(this.radius),a},applyMatrix4:function(a){return this.center.applyMatrix4(a),this.radius=this.radius*a.getMaxScaleOnAxis(),this},translate:function(a){return this.center.add(a),this},equals:function(a){return a.center.equals(this.center)&&a.radius===this.radius}});var Nc=new De,Dc=new De,zc=new De,Uc=new De,Bc=new De,Fc=new De,Gc=new De;function Hc(a,e){this.origin=void 0!==a?a:new De,this.direction=void 0!==e?e:new De}Object.assign(Hc.prototype,{set:function(a,e){return this.origin.copy(a),this.direction.copy(e),this},clone:function(){return(new this.constructor).copy(this)},copy:function(a){return this.origin.copy(a.origin),this.direction.copy(a.direction),this},at:function(a,e){return void 0===e&&(console.warn("THREE.Ray: .at() target is now required"),e=new De),e.copy(this.direction).multiplyScalar(a).add(this.origin)},lookAt:function(a){return this.direction.copy(a).sub(this.origin).normalize(),this},recast:function(a){return this.origin.copy(this.at(a,Nc)),this},closestPointToPoint:function(a,e){void 0===e&&(console.warn("THREE.Ray: .closestPointToPoint() target is now required"),e=new De),e.subVectors(a,this.origin);var c=e.dot(this.direction);return c<0?e.copy(this.origin):e.copy(this.direction).multiplyScalar(c).add(this.origin)},distanceToPoint:function(a){return Math.sqrt(this.distanceSqToPoint(a))},distanceSqToPoint:function(a){var e=Nc.subVectors(a,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(a):(Nc.copy(this.direction).multiplyScalar(e).add(this.origin),Nc.distanceToSquared(a))},distanceSqToSegment:function(a,e,c,b){Dc.copy(a).add(e).multiplyScalar(.5),zc.copy(e).sub(a).normalize(),Uc.copy(this.origin).sub(Dc);var t,d,i,n,r=.5*a.distanceTo(e),f=-this.direction.dot(zc),o=Uc.dot(this.direction),s=-Uc.dot(zc),h=Uc.lengthSq(),l=Math.abs(1-f*f);if(l>0)if(d=f*o-s,n=r*l,(t=f*s-o)>=0)if(d>=-n)if(d<=n){var u=1/l;i=(t*=u)*(t+f*(d*=u)+2*o)+d*(f*t+d+2*s)+h}else d=r,i=-(t=Math.max(0,-(f*d+o)))*t+d*(d+2*s)+h;else d=-r,i=-(t=Math.max(0,-(f*d+o)))*t+d*(d+2*s)+h;else d<=-n?i=-(t=Math.max(0,-(-f*r+o)))*t+(d=t>0?-r:Math.min(Math.max(-r,-s),r))*(d+2*s)+h:d<=n?(t=0,i=(d=Math.min(Math.max(-r,-s),r))*(d+2*s)+h):i=-(t=Math.max(0,-(f*r+o)))*t+(d=t>0?r:Math.min(Math.max(-r,-s),r))*(d+2*s)+h;else d=f>0?-r:r,i=-(t=Math.max(0,-(f*d+o)))*t+d*(d+2*s)+h;return c&&c.copy(this.direction).multiplyScalar(t).add(this.origin),b&&b.copy(zc).multiplyScalar(d).add(Dc),i},intersectSphere:function(a,e){Nc.subVectors(a.center,this.origin);var c=Nc.dot(this.direction),b=Nc.dot(Nc)-c*c,t=a.radius*a.radius;if(b>t)return null;var d=Math.sqrt(t-b),i=c-d,n=c+d;return i<0&&n<0?null:i<0?this.at(n,e):this.at(i,e)},intersectsSphere:function(a){return this.distanceSqToPoint(a.center)<=a.radius*a.radius},distanceToPlane:function(a){var e=a.normal.dot(this.direction);if(0===e)return 0===a.distanceToPoint(this.origin)?0:null;var c=-(this.origin.dot(a.normal)+a.constant)/e;return c>=0?c:null},intersectPlane:function(a,e){var c=this.distanceToPlane(a);return null===c?null:this.at(c,e)},intersectsPlane:function(a){var e=a.distanceToPoint(this.origin);return 0===e||a.normal.dot(this.direction)*e<0},intersectBox:function(a,e){var c,b,t,d,i,n,r=1/this.direction.x,f=1/this.direction.y,o=1/this.direction.z,s=this.origin;return r>=0?(c=(a.min.x-s.x)*r,b=(a.max.x-s.x)*r):(c=(a.max.x-s.x)*r,b=(a.min.x-s.x)*r),f>=0?(t=(a.min.y-s.y)*f,d=(a.max.y-s.y)*f):(t=(a.max.y-s.y)*f,d=(a.min.y-s.y)*f),c>d||t>b?null:((t>c||c!=c)&&(c=t),(d<b||b!=b)&&(b=d),o>=0?(i=(a.min.z-s.z)*o,n=(a.max.z-s.z)*o):(i=(a.max.z-s.z)*o,n=(a.min.z-s.z)*o),c>n||i>b?null:((i>c||c!=c)&&(c=i),(n<b||b!=b)&&(b=n),b<0?null:this.at(c>=0?c:b,e)))},intersectsBox:function(a){return null!==this.intersectBox(a,Nc)},intersectTriangle:function(a,e,c,b,t){Bc.subVectors(e,a),Fc.subVectors(c,a),Gc.crossVectors(Bc,Fc);var d,i=this.direction.dot(Gc);if(i>0){if(b)return null;d=1}else{if(!(i<0))return null;d=-1,i=-i}Uc.subVectors(this.origin,a);var n=d*this.direction.dot(Fc.crossVectors(Uc,Fc));if(n<0)return null;var r=d*this.direction.dot(Bc.cross(Uc));if(r<0)return null;if(n+r>i)return null;var f=-d*Uc.dot(Gc);return f<0?null:this.at(f/i,t)},applyMatrix4:function(a){return this.origin.applyMatrix4(a),this.direction.transformDirection(a),this},equals:function(a){return a.origin.equals(this.origin)&&a.direction.equals(this.direction)}});var Vc=new De,kc=new De,jc=new De,Wc=new De,qc=new De,Xc=new De,Yc=new De,Zc=new De,Jc=new De,Kc=new De;function Qc(a,e,c){this.a=void 0!==a?a:new De,this.b=void 0!==e?e:new De,this.c=void 0!==c?c:new De}Object.assign(Qc,{getNormal:function(a,e,c,b){void 0===b&&(console.warn("THREE.Triangle: .getNormal() target is now required"),b=new De),b.subVectors(c,e),Vc.subVectors(a,e),b.cross(Vc);var t=b.lengthSq();return t>0?b.multiplyScalar(1/Math.sqrt(t)):b.set(0,0,0)},getBarycoord:function(a,e,c,b,t){Vc.subVectors(b,e),kc.subVectors(c,e),jc.subVectors(a,e);var d=Vc.dot(Vc),i=Vc.dot(kc),n=Vc.dot(jc),r=kc.dot(kc),f=kc.dot(jc),o=d*r-i*i;if(void 0===t&&(console.warn("THREE.Triangle: .getBarycoord() target is now required"),t=new De),0===o)return t.set(-2,-1,-1);var s=1/o,h=(r*n-i*f)*s,l=(d*f-i*n)*s;return t.set(1-h-l,l,h)},containsPoint:function(a,e,c,b){return Qc.getBarycoord(a,e,c,b,Wc),Wc.x>=0&&Wc.y>=0&&Wc.x+Wc.y<=1},getUV:function(a,e,c,b,t,d,i,n){return this.getBarycoord(a,e,c,b,Wc),n.set(0,0),n.addScaledVector(t,Wc.x),n.addScaledVector(d,Wc.y),n.addScaledVector(i,Wc.z),n},isFrontFacing:function(a,e,c,b){return Vc.subVectors(c,e),kc.subVectors(a,e),Vc.cross(kc).dot(b)<0}}),Object.assign(Qc.prototype,{set:function(a,e,c){return this.a.copy(a),this.b.copy(e),this.c.copy(c),this},setFromPointsAndIndices:function(a,e,c,b){return this.a.copy(a[e]),this.b.copy(a[c]),this.c.copy(a[b]),this},clone:function(){return(new this.constructor).copy(this)},copy:function(a){return this.a.copy(a.a),this.b.copy(a.b),this.c.copy(a.c),this},getArea:function(){return Vc.subVectors(this.c,this.b),kc.subVectors(this.a,this.b),.5*Vc.cross(kc).length()},getMidpoint:function(a){return void 0===a&&(console.warn("THREE.Triangle: .getMidpoint() target is now required"),a=new De),a.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},getNormal:function(a){return Qc.getNormal(this.a,this.b,this.c,a)},getPlane:function(a){return void 0===a&&(console.warn("THREE.Triangle: .getPlane() target is now required"),a=new De),a.setFromCoplanarPoints(this.a,this.b,this.c)},getBarycoord:function(a,e){return Qc.getBarycoord(a,this.a,this.b,this.c,e)},getUV:function(a,e,c,b,t){return Qc.getUV(a,this.a,this.b,this.c,e,c,b,t)},containsPoint:function(a){return Qc.containsPoint(a,this.a,this.b,this.c)},isFrontFacing:function(a){return Qc.isFrontFacing(this.a,this.b,this.c,a)},intersectsBox:function(a){return a.intersectsTriangle(this)},closestPointToPoint:function(a,e){void 0===e&&(console.warn("THREE.Triangle: .closestPointToPoint() target is now required"),e=new De);var c,b,t=this.a,d=this.b,i=this.c;qc.subVectors(d,t),Xc.subVectors(i,t),Zc.subVectors(a,t);var n=qc.dot(Zc),r=Xc.dot(Zc);if(n<=0&&r<=0)return e.copy(t);Jc.subVectors(a,d);var f=qc.dot(Jc),o=Xc.dot(Jc);if(f>=0&&o<=f)return e.copy(d);var s=n*o-f*r;if(s<=0&&n>=0&&f<=0)return c=n/(n-f),e.copy(t).addScaledVector(qc,c);Kc.subVectors(a,i);var h=qc.dot(Kc),l=Xc.dot(Kc);if(l>=0&&h<=l)return e.copy(i);var u=h*r-n*l;if(u<=0&&r>=0&&l<=0)return b=r/(r-l),e.copy(t).addScaledVector(Xc,b);var p=f*l-h*o;if(p<=0&&o-f>=0&&h-l>=0)return Yc.subVectors(i,d),b=(o-f)/(o-f+(h-l)),e.copy(d).addScaledVector(Yc,b);var m=1/(p+u+s);return c=u*m,b=s*m,e.copy(t).addScaledVector(qc,c).addScaledVector(Xc,b)},equals:function(a){return a.a.equals(this.a)&&a.b.equals(this.b)&&a.c.equals(this.c)}});var $c={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},ab={h:0,s:0,l:0},eb={h:0,s:0,l:0};function cb(a,e,c){return void 0===e&&void 0===c?this.set(a):this.setRGB(a,e,c)}function bb(a,e,c){return c<0&&(c+=1),c>1&&(c-=1),c<1/6?a+6*(e-a)*c:c<.5?e:c<2/3?a+6*(e-a)*(2/3-c):a}function tb(a){return a<.04045?.0773993808*a:Math.pow(.9478672986*a+.0521327014,2.4)}function db(a){return a<.0031308?12.92*a:1.055*Math.pow(a,.41666)-.055}function ib(a,e,c,b,t,d){this.a=a,this.b=e,this.c=c,this.normal=b&&b.isVector3?b:new De,this.vertexNormals=Array.isArray(b)?b:[],this.color=t&&t.isColor?t:new cb,this.vertexColors=Array.isArray(t)?t:[],this.materialIndex=void 0!==d?d:0}Object.assign(cb.prototype,{isColor:!0,r:1,g:1,b:1,set:function(a){return a&&a.isColor?this.copy(a):"number"==typeof a?this.setHex(a):"string"==typeof a&&this.setStyle(a),this},setScalar:function(a){return this.r=a,this.g=a,this.b=a,this},setHex:function(a){return a=Math.floor(a),this.r=(a>>16&255)/255,this.g=(a>>8&255)/255,this.b=(255&a)/255,this},setRGB:function(a,e,c){return this.r=a,this.g=e,this.b=c,this},setHSL:function(a,e,c){if(a=Pe.euclideanModulo(a,1),e=Pe.clamp(e,0,1),c=Pe.clamp(c,0,1),0===e)this.r=this.g=this.b=c;else{var b=c<=.5?c*(1+e):c+e-c*e,t=2*c-b;this.r=bb(t,b,a+1/3),this.g=bb(t,b,a),this.b=bb(t,b,a-1/3)}return this},setStyle:function(a){function e(e){void 0!==e&&parseFloat(e)<1&&console.warn("THREE.Color: Alpha component of "+a+" will be ignored.")}var c;if(c=/^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(a)){var b,t=c[1],d=c[2];switch(t){case"rgb":case"rgba":if(b=/^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(d))return this.r=Math.min(255,parseInt(b[1],10))/255,this.g=Math.min(255,parseInt(b[2],10))/255,this.b=Math.min(255,parseInt(b[3],10))/255,e(b[5]),this;if(b=/^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(d))return this.r=Math.min(100,parseInt(b[1],10))/100,this.g=Math.min(100,parseInt(b[2],10))/100,this.b=Math.min(100,parseInt(b[3],10))/100,e(b[5]),this;break;case"hsl":case"hsla":if(b=/^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(d)){var i=parseFloat(b[1])/360,n=parseInt(b[2],10)/100,r=parseInt(b[3],10)/100;return e(b[5]),this.setHSL(i,n,r)}}}else if(c=/^\#([A-Fa-f0-9]+)$/.exec(a)){var f,o=(f=c[1]).length;if(3===o)return this.r=parseInt(f.charAt(0)+f.charAt(0),16)/255,this.g=parseInt(f.charAt(1)+f.charAt(1),16)/255,this.b=parseInt(f.charAt(2)+f.charAt(2),16)/255,this;if(6===o)return this.r=parseInt(f.charAt(0)+f.charAt(1),16)/255,this.g=parseInt(f.charAt(2)+f.charAt(3),16)/255,this.b=parseInt(f.charAt(4)+f.charAt(5),16)/255,this}a&&a.length>0&&(void 0!==(f=$c[a])?this.setHex(f):console.warn("THREE.Color: Unknown color "+a));return this},clone:function(){return new this.constructor(this.r,this.g,this.b)},copy:function(a){return this.r=a.r,this.g=a.g,this.b=a.b,this},copyGammaToLinear:function(a,e){return void 0===e&&(e=2),this.r=Math.pow(a.r,e),this.g=Math.pow(a.g,e),this.b=Math.pow(a.b,e),this},copyLinearToGamma:function(a,e){void 0===e&&(e=2);var c=e>0?1/e:1;return this.r=Math.pow(a.r,c),this.g=Math.pow(a.g,c),this.b=Math.pow(a.b,c),this},convertGammaToLinear:function(a){return this.copyGammaToLinear(this,a),this},convertLinearToGamma:function(a){return this.copyLinearToGamma(this,a),this},copySRGBToLinear:function(a){return this.r=tb(a.r),this.g=tb(a.g),this.b=tb(a.b),this},copyLinearToSRGB:function(a){return this.r=db(a.r),this.g=db(a.g),this.b=db(a.b),this},convertSRGBToLinear:function(){return this.copySRGBToLinear(this),this},convertLinearToSRGB:function(){return this.copyLinearToSRGB(this),this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(a){void 0===a&&(console.warn("THREE.Color: .getHSL() target is now required"),a={h:0,s:0,l:0});var e,c,b=this.r,t=this.g,d=this.b,i=Math.max(b,t,d),n=Math.min(b,t,d),r=(n+i)/2;if(n===i)e=0,c=0;else{var f=i-n;switch(c=r<=.5?f/(i+n):f/(2-i-n),i){case b:e=(t-d)/f+(t<d?6:0);break;case t:e=(d-b)/f+2;break;case d:e=(b-t)/f+4}e/=6}return a.h=e,a.s=c,a.l=r,a},getStyle:function(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"},offsetHSL:function(a,e,c){return this.getHSL(ab),ab.h+=a,ab.s+=e,ab.l+=c,this.setHSL(ab.h,ab.s,ab.l),this},add:function(a){return this.r+=a.r,this.g+=a.g,this.b+=a.b,this},addColors:function(a,e){return this.r=a.r+e.r,this.g=a.g+e.g,this.b=a.b+e.b,this},addScalar:function(a){return this.r+=a,this.g+=a,this.b+=a,this},sub:function(a){return this.r=Math.max(0,this.r-a.r),this.g=Math.max(0,this.g-a.g),this.b=Math.max(0,this.b-a.b),this},multiply:function(a){return this.r*=a.r,this.g*=a.g,this.b*=a.b,this},multiplyScalar:function(a){return this.r*=a,this.g*=a,this.b*=a,this},lerp:function(a,e){return this.r+=(a.r-this.r)*e,this.g+=(a.g-this.g)*e,this.b+=(a.b-this.b)*e,this},lerpHSL:function(a,e){this.getHSL(ab),a.getHSL(eb);var c=Pe.lerp(ab.h,eb.h,e),b=Pe.lerp(ab.s,eb.s,e),t=Pe.lerp(ab.l,eb.l,e);return this.setHSL(c,b,t),this},equals:function(a){return a.r===this.r&&a.g===this.g&&a.b===this.b},fromArray:function(a,e){return void 0===e&&(e=0),this.r=a[e],this.g=a[e+1],this.b=a[e+2],this},toArray:function(a,e){return void 0===a&&(a=[]),void 0===e&&(e=0),a[e]=this.r,a[e+1]=this.g,a[e+2]=this.b,a},toJSON:function(){return this.getHex()}}),Object.assign(ib.prototype,{clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.a=a.a,this.b=a.b,this.c=a.c,this.normal.copy(a.normal),this.color.copy(a.color),this.materialIndex=a.materialIndex;for(var e=0,c=a.vertexNormals.length;e<c;e++)this.vertexNormals[e]=a.vertexNormals[e].clone();for(e=0,c=a.vertexColors.length;e<c;e++)this.vertexColors[e]=a.vertexColors[e].clone();return this}});var nb=0;function rb(){Object.defineProperty(this,"id",{value:nb++}),this.uuid=Pe.generateUUID(),this.name="",this.type="Material",this.fog=!0,this.blending=y,this.side=h,this.flatShading=!1,this.vertexTangents=!1,this.vertexColors=p,this.opacity=1,this.transparent=!1,this.blendSrc=I,this.blendDst=N,this.blendEquation=S,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=k,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=Ee,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Te,this.stencilZFail=Te,this.stencilZPass=Te,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaTest=0,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.needsUpdate=!0}function fb(a){rb.call(this),this.type="MeshBasicMaterial",this.color=new cb(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Y,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.setValues(a)}function ob(a,e,c){if(Array.isArray(a))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=a,this.itemSize=e,this.count=void 0!==a?a.length/e:0,this.normalized=!0===c,this.dynamic=!1,this.updateRange={offset:0,count:-1},this.version=0}function sb(a,e,c){ob.call(this,new Int8Array(a),e,c)}function hb(a,e,c){ob.call(this,new Uint8Array(a),e,c)}function lb(a,e,c){ob.call(this,new Uint8ClampedArray(a),e,c)}function ub(a,e,c){ob.call(this,new Int16Array(a),e,c)}function pb(a,e,c){ob.call(this,new Uint16Array(a),e,c)}function mb(a,e,c){ob.call(this,new Int32Array(a),e,c)}function gb(a,e,c){ob.call(this,new Uint32Array(a),e,c)}function vb(a,e,c){ob.call(this,new Float32Array(a),e,c)}function yb(a,e,c){ob.call(this,new Float64Array(a),e,c)}function xb(){this.vertices=[],this.normals=[],this.colors=[],this.uvs=[],this.uvs2=[],this.groups=[],this.morphTargets={},this.skinWeights=[],this.skinIndices=[],this.boundingBox=null,this.boundingSphere=null,this.verticesNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.uvsNeedUpdate=!1,this.groupsNeedUpdate=!1}function wb(a){if(0===a.length)return-1/0;for(var e=a[0],c=1,b=a.length;c<b;++c)a[c]>e&&(e=a[c]);return e}rb.prototype=Object.assign(Object.create(Ae.prototype),{constructor:rb,isMaterial:!0,onBeforeCompile:function(){},setValues:function(a){if(void 0!==a)for(var e in a){var c=a[e];if(void 0!==c)if("shading"!==e){var b=this[e];void 0!==b?b&&b.isColor?b.set(c):b&&b.isVector3&&c&&c.isVector3?b.copy(c):this[e]=c:console.warn("THREE."+this.type+": '"+e+"' is not a property of this material.")}else console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=1===c;else console.warn("THREE.Material: '"+e+"' parameter is undefined.")}},toJSON:function(a){var e=void 0===a||"string"==typeof a;e&&(a={textures:{},images:{}});var c={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};function b(a){var e=[];for(var c in a){var b=a[c];delete b.metadata,e.push(b)}return e}if(c.uuid=this.uuid,c.type=this.type,""!==this.name&&(c.name=this.name),this.color&&this.color.isColor&&(c.color=this.color.getHex()),void 0!==this.roughness&&(c.roughness=this.roughness),void 0!==this.metalness&&(c.metalness=this.metalness),this.sheen&&this.sheen.isColor&&(c.sheen=this.sheen.getHex()),this.emissive&&this.emissive.isColor&&(c.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(c.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(c.specular=this.specular.getHex()),void 0!==this.shininess&&(c.shininess=this.shininess),void 0!==this.clearcoat&&(c.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(c.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(c.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(a).uuid,c.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(c.map=this.map.toJSON(a).uuid),this.matcap&&this.matcap.isTexture&&(c.matcap=this.matcap.toJSON(a).uuid),this.alphaMap&&this.alphaMap.isTexture&&(c.alphaMap=this.alphaMap.toJSON(a).uuid),this.lightMap&&this.lightMap.isTexture&&(c.lightMap=this.lightMap.toJSON(a).uuid),this.aoMap&&this.aoMap.isTexture&&(c.aoMap=this.aoMap.toJSON(a).uuid,c.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(c.bumpMap=this.bumpMap.toJSON(a).uuid,c.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(c.normalMap=this.normalMap.toJSON(a).uuid,c.normalMapType=this.normalMapType,c.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(c.displacementMap=this.displacementMap.toJSON(a).uuid,c.displacementScale=this.displacementScale,c.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(c.roughnessMap=this.roughnessMap.toJSON(a).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(c.metalnessMap=this.metalnessMap.toJSON(a).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(c.emissiveMap=this.emissiveMap.toJSON(a).uuid),this.specularMap&&this.specularMap.isTexture&&(c.specularMap=this.specularMap.toJSON(a).uuid),this.envMap&&this.envMap.isTexture&&(c.envMap=this.envMap.toJSON(a).uuid,c.reflectivity=this.reflectivity,c.refractionRatio=this.refractionRatio,void 0!==this.combine&&(c.combine=this.combine),void 0!==this.envMapIntensity&&(c.envMapIntensity=this.envMapIntensity)),this.gradientMap&&this.gradientMap.isTexture&&(c.gradientMap=this.gradientMap.toJSON(a).uuid),void 0!==this.size&&(c.size=this.size),void 0!==this.sizeAttenuation&&(c.sizeAttenuation=this.sizeAttenuation),this.blending!==y&&(c.blending=this.blending),!0===this.flatShading&&(c.flatShading=this.flatShading),this.side!==h&&(c.side=this.side),this.vertexColors!==p&&(c.vertexColors=this.vertexColors),this.opacity<1&&(c.opacity=this.opacity),!0===this.transparent&&(c.transparent=this.transparent),c.depthFunc=this.depthFunc,c.depthTest=this.depthTest,c.depthWrite=this.depthWrite,c.stencilWrite=this.stencilWrite,c.stencilWriteMask=this.stencilWriteMask,c.stencilFunc=this.stencilFunc,c.stencilRef=this.stencilRef,c.stencilFuncMask=this.stencilFuncMask,c.stencilFail=this.stencilFail,c.stencilZFail=this.stencilZFail,c.stencilZPass=this.stencilZPass,this.rotation&&0!==this.rotation&&(c.rotation=this.rotation),!0===this.polygonOffset&&(c.polygonOffset=!0),0!==this.polygonOffsetFactor&&(c.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(c.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth&&1!==this.linewidth&&(c.linewidth=this.linewidth),void 0!==this.dashSize&&(c.dashSize=this.dashSize),void 0!==this.gapSize&&(c.gapSize=this.gapSize),void 0!==this.scale&&(c.scale=this.scale),!0===this.dithering&&(c.dithering=!0),this.alphaTest>0&&(c.alphaTest=this.alphaTest),!0===this.premultipliedAlpha&&(c.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(c.wireframe=this.wireframe),this.wireframeLinewidth>1&&(c.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(c.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(c.wireframeLinejoin=this.wireframeLinejoin),!0===this.morphTargets&&(c.morphTargets=!0),!0===this.morphNormals&&(c.morphNormals=!0),!0===this.skinning&&(c.skinning=!0),!1===this.visible&&(c.visible=!1),!1===this.toneMapped&&(c.toneMapped=!1),"{}"!==JSON.stringify(this.userData)&&(c.userData=this.userData),e){var t=b(a.textures),d=b(a.images);t.length>0&&(c.textures=t),d.length>0&&(c.images=d)}return c},clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.name=a.name,this.fog=a.fog,this.blending=a.blending,this.side=a.side,this.flatShading=a.flatShading,this.vertexColors=a.vertexColors,this.opacity=a.opacity,this.transparent=a.transparent,this.blendSrc=a.blendSrc,this.blendDst=a.blendDst,this.blendEquation=a.blendEquation,this.blendSrcAlpha=a.blendSrcAlpha,this.blendDstAlpha=a.blendDstAlpha,this.blendEquationAlpha=a.blendEquationAlpha,this.depthFunc=a.depthFunc,this.depthTest=a.depthTest,this.depthWrite=a.depthWrite,this.stencilWrite=a.stencilWrite,this.stencilWriteMask=a.stencilWriteMask,this.stencilFunc=a.stencilFunc,this.stencilRef=a.stencilRef,this.stencilFuncMask=a.stencilFuncMask,this.stencilFail=a.stencilFail,this.stencilZFail=a.stencilZFail,this.stencilZPass=a.stencilZPass,this.colorWrite=a.colorWrite,this.precision=a.precision,this.polygonOffset=a.polygonOffset,this.polygonOffsetFactor=a.polygonOffsetFactor,this.polygonOffsetUnits=a.polygonOffsetUnits,this.dithering=a.dithering,this.alphaTest=a.alphaTest,this.premultipliedAlpha=a.premultipliedAlpha,this.visible=a.visible,this.toneMapped=a.toneMapped,this.userData=JSON.parse(JSON.stringify(a.userData)),this.clipShadows=a.clipShadows,this.clipIntersection=a.clipIntersection;var e=a.clippingPlanes,c=null;if(null!==e){var b=e.length;c=new Array(b);for(var t=0;t!==b;++t)c[t]=e[t].clone()}return this.clippingPlanes=c,this.shadowSide=a.shadowSide,this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),fb.prototype=Object.create(rb.prototype),fb.prototype.constructor=fb,fb.prototype.isMeshBasicMaterial=!0,fb.prototype.copy=function(a){return rb.prototype.copy.call(this,a),this.color.copy(a.color),this.map=a.map,this.lightMap=a.lightMap,this.lightMapIntensity=a.lightMapIntensity,this.aoMap=a.aoMap,this.aoMapIntensity=a.aoMapIntensity,this.specularMap=a.specularMap,this.alphaMap=a.alphaMap,this.envMap=a.envMap,this.combine=a.combine,this.reflectivity=a.reflectivity,this.refractionRatio=a.refractionRatio,this.wireframe=a.wireframe,this.wireframeLinewidth=a.wireframeLinewidth,this.wireframeLinecap=a.wireframeLinecap,this.wireframeLinejoin=a.wireframeLinejoin,this.skinning=a.skinning,this.morphTargets=a.morphTargets,this},Object.defineProperty(ob.prototype,"needsUpdate",{set:function(a){!0===a&&this.version++}}),Object.assign(ob.prototype,{isBufferAttribute:!0,onUploadCallback:function(){},setDynamic:function(a){return this.dynamic=a,this},copy:function(a){return this.name=a.name,this.array=new a.array.constructor(a.array),this.itemSize=a.itemSize,this.count=a.count,this.normalized=a.normalized,this.dynamic=a.dynamic,this},copyAt:function(a,e,c){a*=this.itemSize,c*=e.itemSize;for(var b=0,t=this.itemSize;b<t;b++)this.array[a+b]=e.array[c+b];return this},copyArray:function(a){return this.array.set(a),this},copyColorsArray:function(a){for(var e=this.array,c=0,b=0,t=a.length;b<t;b++){var d=a[b];void 0===d&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",b),d=new cb),e[c++]=d.r,e[c++]=d.g,e[c++]=d.b}return this},copyVector2sArray:function(a){for(var e=this.array,c=0,b=0,t=a.length;b<t;b++){var d=a[b];void 0===d&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",b),d=new Ce),e[c++]=d.x,e[c++]=d.y}return this},copyVector3sArray:function(a){for(var e=this.array,c=0,b=0,t=a.length;b<t;b++){var d=a[b];void 0===d&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",b),d=new De),e[c++]=d.x,e[c++]=d.y,e[c++]=d.z}return this},copyVector4sArray:function(a){for(var e=this.array,c=0,b=0,t=a.length;b<t;b++){var d=a[b];void 0===d&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",b),d=new Ve),e[c++]=d.x,e[c++]=d.y,e[c++]=d.z,e[c++]=d.w}return this},set:function(a,e){return void 0===e&&(e=0),this.array.set(a,e),this},getX:function(a){return this.array[a*this.itemSize]},setX:function(a,e){return this.array[a*this.itemSize]=e,this},getY:function(a){return this.array[a*this.itemSize+1]},setY:function(a,e){return this.array[a*this.itemSize+1]=e,this},getZ:function(a){return this.array[a*this.itemSize+2]},setZ:function(a,e){return this.array[a*this.itemSize+2]=e,this},getW:function(a){return this.array[a*this.itemSize+3]},setW:function(a,e){return this.array[a*this.itemSize+3]=e,this},setXY:function(a,e,c){return a*=this.itemSize,this.array[a+0]=e,this.array[a+1]=c,this},setXYZ:function(a,e,c,b){return a*=this.itemSize,this.array[a+0]=e,this.array[a+1]=c,this.array[a+2]=b,this},setXYZW:function(a,e,c,b,t){return a*=this.itemSize,this.array[a+0]=e,this.array[a+1]=c,this.array[a+2]=b,this.array[a+3]=t,this},onUpload:function(a){return this.onUploadCallback=a,this},clone:function(){return new this.constructor(this.array,this.itemSize).copy(this)},toJSON:function(){return{itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized}}}),sb.prototype=Object.create(ob.prototype),sb.prototype.constructor=sb,hb.prototype=Object.create(ob.prototype),hb.prototype.constructor=hb,lb.prototype=Object.create(ob.prototype),lb.prototype.constructor=lb,ub.prototype=Object.create(ob.prototype),ub.prototype.constructor=ub,pb.prototype=Object.create(ob.prototype),pb.prototype.constructor=pb,mb.prototype=Object.create(ob.prototype),mb.prototype.constructor=mb,gb.prototype=Object.create(ob.prototype),gb.prototype.constructor=gb,vb.prototype=Object.create(ob.prototype),vb.prototype.constructor=vb,yb.prototype=Object.create(ob.prototype),yb.prototype.constructor=yb,Object.assign(xb.prototype,{computeGroups:function(a){for(var e,c=[],b=void 0,t=a.faces,d=0;d<t.length;d++){var i=t[d];i.materialIndex!==b&&(b=i.materialIndex,void 0!==e&&(e.count=3*d-e.start,c.push(e)),e={start:3*d,materialIndex:b})}void 0!==e&&(e.count=3*d-e.start,c.push(e)),this.groups=c},fromGeometry:function(a){var e,c=a.faces,b=a.vertices,t=a.faceVertexUvs,d=t[0]&&t[0].length>0,i=t[1]&&t[1].length>0,n=a.morphTargets,r=n.length;if(r>0){e=[];for(var f=0;f<r;f++)e[f]={name:n[f].name,data:[]};this.morphTargets.position=e}var o,s=a.morphNormals,h=s.length;if(h>0){o=[];for(f=0;f<h;f++)o[f]={name:s[f].name,data:[]};this.morphTargets.normal=o}var l=a.skinIndices,u=a.skinWeights,p=l.length===b.length,m=u.length===b.length;b.length>0&&0===c.length&&console.error("THREE.DirectGeometry: Faceless geometries are not supported.");for(f=0;f<c.length;f++){var g=c[f];this.vertices.push(b[g.a],b[g.b],b[g.c]);var v=g.vertexNormals;if(3===v.length)this.normals.push(v[0],v[1],v[2]);else{var y=g.normal;this.normals.push(y,y,y)}var x,w=g.vertexColors;if(3===w.length)this.colors.push(w[0],w[1],w[2]);else{var _=g.color;this.colors.push(_,_,_)}if(!0===d)void 0!==(x=t[0][f])?this.uvs.push(x[0],x[1],x[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ",f),this.uvs.push(new Ce,new Ce,new Ce));if(!0===i)void 0!==(x=t[1][f])?this.uvs2.push(x[0],x[1],x[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ",f),this.uvs2.push(new Ce,new Ce,new Ce));for(var M=0;M<r;M++){var S=n[M].vertices;e[M].data.push(S[g.a],S[g.b],S[g.c])}for(M=0;M<h;M++){var T=s[M].vertexNormals[f];o[M].data.push(T.a,T.b,T.c)}p&&this.skinIndices.push(l[g.a],l[g.b],l[g.c]),m&&this.skinWeights.push(u[g.a],u[g.b],u[g.c])}return this.computeGroups(a),this.verticesNeedUpdate=a.verticesNeedUpdate,this.normalsNeedUpdate=a.normalsNeedUpdate,this.colorsNeedUpdate=a.colorsNeedUpdate,this.uvsNeedUpdate=a.uvsNeedUpdate,this.groupsNeedUpdate=a.groupsNeedUpdate,null!==a.boundingSphere&&(this.boundingSphere=a.boundingSphere.clone()),null!==a.boundingBox&&(this.boundingBox=a.boundingBox.clone()),this}});var _b=1,Mb=new Qe,Sb=new mc,Tb=new De,Eb=new Pc,Ab=new Pc,Lb=new De;function Rb(){Object.defineProperty(this,"id",{value:_b+=2}),this.uuid=Pe.generateUUID(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}Rb.prototype=Object.assign(Object.create(Ae.prototype),{constructor:Rb,isBufferGeometry:!0,getIndex:function(){return this.index},setIndex:function(a){Array.isArray(a)?this.index=new(wb(a)>65535?gb:pb)(a,1):this.index=a},addAttribute:function(a,e){return e&&e.isBufferAttribute||e&&e.isInterleavedBufferAttribute?"index"===a?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(e),this):this.setAttribute(a,e):(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.addAttribute(a,new ob(arguments[1],arguments[2])))},getAttribute:function(a){return this.attributes[a]},setAttribute:function(a,e){return this.attributes[a]=e,this},removeAttribute:function(a){return delete this.attributes[a],this},addGroup:function(a,e,c){this.groups.push({start:a,count:e,materialIndex:void 0!==c?c:0})},clearGroups:function(){this.groups=[]},setDrawRange:function(a,e){this.drawRange.start=a,this.drawRange.count=e},applyMatrix:function(a){var e=this.attributes.position;void 0!==e&&(a.applyToBufferAttribute(e),e.needsUpdate=!0);var c=this.attributes.normal;void 0!==c&&((new Be).getNormalMatrix(a).applyToBufferAttribute(c),c.needsUpdate=!0);var b=this.attributes.tangent;void 0!==b&&((new Be).getNormalMatrix(a).applyToBufferAttribute(b),b.needsUpdate=!0);return null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this},rotateX:function(a){return Mb.makeRotationX(a),this.applyMatrix(Mb),this},rotateY:function(a){return Mb.makeRotationY(a),this.applyMatrix(Mb),this},rotateZ:function(a){return Mb.makeRotationZ(a),this.applyMatrix(Mb),this},translate:function(a,e,c){return Mb.makeTranslation(a,e,c),this.applyMatrix(Mb),this},scale:function(a,e,c){return Mb.makeScale(a,e,c),this.applyMatrix(Mb),this},lookAt:function(a){return Sb.lookAt(a),Sb.updateMatrix(),this.applyMatrix(Sb.matrix),this},center:function(){return this.computeBoundingBox(),this.boundingBox.getCenter(Tb).negate(),this.translate(Tb.x,Tb.y,Tb.z),this},setFromObject:function(a){var e=a.geometry;if(a.isPoints||a.isLine){var c=new vb(3*e.vertices.length,3),b=new vb(3*e.colors.length,3);if(this.addAttribute("position",c.copyVector3sArray(e.vertices)),this.addAttribute("color",b.copyColorsArray(e.colors)),e.lineDistances&&e.lineDistances.length===e.vertices.length){var t=new vb(e.lineDistances.length,1);this.addAttribute("lineDistance",t.copyArray(e.lineDistances))}null!==e.boundingSphere&&(this.boundingSphere=e.boundingSphere.clone()),null!==e.boundingBox&&(this.boundingBox=e.boundingBox.clone())}else a.isMesh&&e&&e.isGeometry&&this.fromGeometry(e);return this},setFromPoints:function(a){for(var e=[],c=0,b=a.length;c<b;c++){var t=a[c];e.push(t.x,t.y,t.z||0)}return this.addAttribute("position",new vb(e,3)),this},updateFromObject:function(a){var e,c=a.geometry;if(a.isMesh){var b=c.__directGeometry;if(!0===c.elementsNeedUpdate&&(b=void 0,c.elementsNeedUpdate=!1),void 0===b)return this.fromGeometry(c);b.verticesNeedUpdate=c.verticesNeedUpdate,b.normalsNeedUpdate=c.normalsNeedUpdate,b.colorsNeedUpdate=c.colorsNeedUpdate,b.uvsNeedUpdate=c.uvsNeedUpdate,b.groupsNeedUpdate=c.groupsNeedUpdate,c.verticesNeedUpdate=!1,c.normalsNeedUpdate=!1,c.colorsNeedUpdate=!1,c.uvsNeedUpdate=!1,c.groupsNeedUpdate=!1,c=b}return!0===c.verticesNeedUpdate&&(void 0!==(e=this.attributes.position)&&(e.copyVector3sArray(c.vertices),e.needsUpdate=!0),c.verticesNeedUpdate=!1),!0===c.normalsNeedUpdate&&(void 0!==(e=this.attributes.normal)&&(e.copyVector3sArray(c.normals),e.needsUpdate=!0),c.normalsNeedUpdate=!1),!0===c.colorsNeedUpdate&&(void 0!==(e=this.attributes.color)&&(e.copyColorsArray(c.colors),e.needsUpdate=!0),c.colorsNeedUpdate=!1),c.uvsNeedUpdate&&(void 0!==(e=this.attributes.uv)&&(e.copyVector2sArray(c.uvs),e.needsUpdate=!0),c.uvsNeedUpdate=!1),c.lineDistancesNeedUpdate&&(void 0!==(e=this.attributes.lineDistance)&&(e.copyArray(c.lineDistances),e.needsUpdate=!0),c.lineDistancesNeedUpdate=!1),c.groupsNeedUpdate&&(c.computeGroups(a.geometry),this.groups=c.groups,c.groupsNeedUpdate=!1),this},fromGeometry:function(a){return a.__directGeometry=(new xb).fromGeometry(a),this.fromDirectGeometry(a.__directGeometry)},fromDirectGeometry:function(a){var e=new Float32Array(3*a.vertices.length);if(this.addAttribute("position",new ob(e,3).copyVector3sArray(a.vertices)),a.normals.length>0){var c=new Float32Array(3*a.normals.length);this.addAttribute("normal",new ob(c,3).copyVector3sArray(a.normals))}if(a.colors.length>0){var b=new Float32Array(3*a.colors.length);this.addAttribute("color",new ob(b,3).copyColorsArray(a.colors))}if(a.uvs.length>0){var t=new Float32Array(2*a.uvs.length);this.addAttribute("uv",new ob(t,2).copyVector2sArray(a.uvs))}if(a.uvs2.length>0){var d=new Float32Array(2*a.uvs2.length);this.addAttribute("uv2",new ob(d,2).copyVector2sArray(a.uvs2))}for(var i in this.groups=a.groups,a.morphTargets){for(var n=[],r=a.morphTargets[i],f=0,o=r.length;f<o;f++){var s=r[f],h=new vb(3*s.data.length,3);h.name=s.name,n.push(h.copyVector3sArray(s.data))}this.morphAttributes[i]=n}if(a.skinIndices.length>0){var l=new vb(4*a.skinIndices.length,4);this.addAttribute("skinIndex",l.copyVector4sArray(a.skinIndices))}if(a.skinWeights.length>0){var u=new vb(4*a.skinWeights.length,4);this.addAttribute("skinWeight",u.copyVector4sArray(a.skinWeights))}return null!==a.boundingSphere&&(this.boundingSphere=a.boundingSphere.clone()),null!==a.boundingBox&&(this.boundingBox=a.boundingBox.clone()),this},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new Pc);var a=this.attributes.position,e=this.morphAttributes.position;if(void 0!==a){if(this.boundingBox.setFromBufferAttribute(a),e)for(var c=0,b=e.length;c<b;c++){var t=e[c];Eb.setFromBufferAttribute(t),this.boundingBox.expandByPoint(Eb.min),this.boundingBox.expandByPoint(Eb.max)}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new Ic);var a=this.attributes.position,e=this.morphAttributes.position;if(a){var c=this.boundingSphere.center;if(Eb.setFromBufferAttribute(a),e)for(var b=0,t=e.length;b<t;b++){var d=e[b];Ab.setFromBufferAttribute(d),Eb.expandByPoint(Ab.min),Eb.expandByPoint(Ab.max)}Eb.getCenter(c);var i=0;for(b=0,t=a.count;b<t;b++)Lb.fromBufferAttribute(a,b),i=Math.max(i,c.distanceToSquared(Lb));if(e)for(b=0,t=e.length;b<t;b++)for(var n=0,r=(d=e[b]).count;n<r;n++)Lb.fromBufferAttribute(d,n),i=Math.max(i,c.distanceToSquared(Lb));this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}},computeFaceNormals:function(){},computeVertexNormals:function(){var a=this.index,e=this.attributes;if(e.position){var c=e.position.array;if(void 0===e.normal)this.addAttribute("normal",new ob(new Float32Array(c.length),3));else for(var b=e.normal.array,t=0,d=b.length;t<d;t++)b[t]=0;var i,n,r,f=e.normal.array,o=new De,s=new De,h=new De,l=new De,u=new De;if(a){var p=a.array;for(t=0,d=a.count;t<d;t+=3)i=3*p[t+0],n=3*p[t+1],r=3*p[t+2],o.fromArray(c,i),s.fromArray(c,n),h.fromArray(c,r),l.subVectors(h,s),u.subVectors(o,s),l.cross(u),f[i]+=l.x,f[i+1]+=l.y,f[i+2]+=l.z,f[n]+=l.x,f[n+1]+=l.y,f[n+2]+=l.z,f[r]+=l.x,f[r+1]+=l.y,f[r+2]+=l.z}else for(t=0,d=c.length;t<d;t+=9)o.fromArray(c,t),s.fromArray(c,t+3),h.fromArray(c,t+6),l.subVectors(h,s),u.subVectors(o,s),l.cross(u),f[t]=l.x,f[t+1]=l.y,f[t+2]=l.z,f[t+3]=l.x,f[t+4]=l.y,f[t+5]=l.z,f[t+6]=l.x,f[t+7]=l.y,f[t+8]=l.z;this.normalizeNormals(),e.normal.needsUpdate=!0}},merge:function(a,e){if(a&&a.isBufferGeometry){void 0===e&&(e=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));var c=this.attributes;for(var b in c)if(void 0!==a.attributes[b])for(var t=c[b].array,d=a.attributes[b],i=d.array,n=d.itemSize*e,r=Math.min(i.length,t.length-n),f=0,o=n;f<r;f++,o++)t[o]=i[f];return this}console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",a)},normalizeNormals:function(){for(var a=this.attributes.normal,e=0,c=a.count;e<c;e++)Lb.x=a.getX(e),Lb.y=a.getY(e),Lb.z=a.getZ(e),Lb.normalize(),a.setXYZ(e,Lb.x,Lb.y,Lb.z)},toNonIndexed:function(){function a(a,e){for(var c=a.array,b=a.itemSize,t=new c.constructor(e.length*b),d=0,i=0,n=0,r=e.length;n<r;n++){d=e[n]*b;for(var f=0;f<b;f++)t[i++]=c[d++]}return new ob(t,b)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed."),this;var e=new Rb,c=this.index.array,b=this.attributes;for(var t in b){var d=a(b[t],c);e.addAttribute(t,d)}var i=this.morphAttributes;for(t in i){for(var n=[],r=i[t],f=0,o=r.length;f<o;f++){d=a(r[f],c);n.push(d)}e.morphAttributes[t]=n}for(var s=this.groups,h=(f=0,s.length);f<h;f++){var l=s[f];e.addGroup(l.start,l.count,l.materialIndex)}return e},toJSON:function(){var a={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(a.uuid=this.uuid,a.type=this.type,""!==this.name&&(a.name=this.name),Object.keys(this.userData).length>0&&(a.userData=this.userData),void 0!==this.parameters){var e=this.parameters;for(var c in e)void 0!==e[c]&&(a[c]=e[c]);return a}a.data={attributes:{}};var b=this.index;null!==b&&(a.data.index={type:b.array.constructor.name,array:Array.prototype.slice.call(b.array)});var t=this.attributes;for(var c in t){var d=(h=t[c]).toJSON();""!==h.name&&(d.name=h.name),a.data.attributes[c]=d}var i={},n=!1;for(var c in this.morphAttributes){for(var r=this.morphAttributes[c],f=[],o=0,s=r.length;o<s;o++){var h;d=(h=r[o]).toJSON();""!==h.name&&(d.name=h.name),f.push(d)}f.length>0&&(i[c]=f,n=!0)}n&&(a.data.morphAttributes=i);var l=this.groups;l.length>0&&(a.data.groups=JSON.parse(JSON.stringify(l)));var u=this.boundingSphere;return null!==u&&(a.data.boundingSphere={center:u.center.toArray(),radius:u.radius}),a},clone:function(){return(new Rb).copy(this)},copy:function(a){var e,c,b;this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.name=a.name;var t=a.index;null!==t&&this.setIndex(t.clone());var d=a.attributes;for(e in d){var i=d[e];this.addAttribute(e,i.clone())}var n=a.morphAttributes;for(e in n){var r=[],f=n[e];for(c=0,b=f.length;c<b;c++)r.push(f[c].clone());this.morphAttributes[e]=r}var o=a.groups;for(c=0,b=o.length;c<b;c++){var s=o[c];this.addGroup(s.start,s.count,s.materialIndex)}var h=a.boundingBox;null!==h&&(this.boundingBox=h.clone());var l=a.boundingSphere;return null!==l&&(this.boundingSphere=l.clone()),this.drawRange.start=a.drawRange.start,this.drawRange.count=a.drawRange.count,this.userData=a.userData,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});var Pb=new Qe,Cb=new Hc,Ob=new Ic,Ib=new De,Nb=new De,Db=new De,zb=new De,Ub=new De,Bb=new De,Fb=new De,Gb=new De,Hb=new De,Vb=new Ce,kb=new Ce,jb=new Ce,Wb=new De,qb=new De;function Xb(a,e){mc.call(this),this.type="Mesh",this.geometry=void 0!==a?a:new Rb,this.material=void 0!==e?e:new fb({color:16777215*Math.random()}),this.drawMode=oe,this.updateMorphTargets()}function Yb(a,e,c,b,t,d,i,n){if(null===(e.side===l?b.intersectTriangle(i,d,t,!0,n):b.intersectTriangle(t,d,i,e.side!==u,n)))return null;qb.copy(n),qb.applyMatrix4(a.matrixWorld);var r=c.ray.origin.distanceTo(qb);return r<c.near||r>c.far?null:{distance:r,point:qb.clone(),object:a}}function Zb(a,e,c,b,t,d,i,n,r,f,o){Ib.fromBufferAttribute(t,r),Nb.fromBufferAttribute(t,f),Db.fromBufferAttribute(t,o);var s=a.morphTargetInfluences;if(e.morphTargets&&d&&s){Fb.set(0,0,0),Gb.set(0,0,0),Hb.set(0,0,0);for(var h=0,l=d.length;h<l;h++){var u=s[h],p=d[h];0!==u&&(zb.fromBufferAttribute(p,r),Ub.fromBufferAttribute(p,f),Bb.fromBufferAttribute(p,o),Fb.addScaledVector(zb.sub(Ib),u),Gb.addScaledVector(Ub.sub(Nb),u),Hb.addScaledVector(Bb.sub(Db),u))}Ib.add(Fb),Nb.add(Gb),Db.add(Hb)}var m=Yb(a,e,c,b,Ib,Nb,Db,Wb);if(m){i&&(Vb.fromBufferAttribute(i,r),kb.fromBufferAttribute(i,f),jb.fromBufferAttribute(i,o),m.uv=Qc.getUV(Wb,Ib,Nb,Db,Vb,kb,jb,new Ce)),n&&(Vb.fromBufferAttribute(n,r),kb.fromBufferAttribute(n,f),jb.fromBufferAttribute(n,o),m.uv2=Qc.getUV(Wb,Ib,Nb,Db,Vb,kb,jb,new Ce));var g=new ib(r,f,o);Qc.getNormal(Ib,Nb,Db,g.normal),m.face=g}return m}Xb.prototype=Object.assign(Object.create(mc.prototype),{constructor:Xb,isMesh:!0,setDrawMode:function(a){this.drawMode=a},copy:function(a){return mc.prototype.copy.call(this,a),this.drawMode=a.drawMode,void 0!==a.morphTargetInfluences&&(this.morphTargetInfluences=a.morphTargetInfluences.slice()),void 0!==a.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},a.morphTargetDictionary)),this},updateMorphTargets:function(){var a,e,c,b=this.geometry;if(b.isBufferGeometry){var t=b.morphAttributes,d=Object.keys(t);if(d.length>0){var i=t[d[0]];if(void 0!==i)for(this.morphTargetInfluences=[],this.morphTargetDictionary={},a=0,e=i.length;a<e;a++)c=i[a].name||String(a),this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=a}}else{var n=b.morphTargets;void 0!==n&&n.length>0&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}},raycast:function(a,e){var c,b=this.geometry,t=this.material,d=this.matrixWorld;if(void 0!==t&&(null===b.boundingSphere&&b.computeBoundingSphere(),Ob.copy(b.boundingSphere),Ob.applyMatrix4(d),!1!==a.ray.intersectsSphere(Ob)&&(Pb.getInverse(d),Cb.copy(a.ray).applyMatrix4(Pb),null===b.boundingBox||!1!==Cb.intersectsBox(b.boundingBox))))if(b.isBufferGeometry){var i,n,r,f,o,s,h,l,u,p=b.index,m=b.attributes.position,g=b.morphAttributes.position,v=b.attributes.uv,y=b.attributes.uv2,x=b.groups,w=b.drawRange;if(null!==p)if(Array.isArray(t))for(f=0,s=x.length;f<s;f++)for(u=t[(l=x[f]).materialIndex],o=Math.max(l.start,w.start),h=Math.min(l.start+l.count,w.start+w.count);o<h;o+=3)i=p.getX(o),n=p.getX(o+1),r=p.getX(o+2),(c=Zb(this,u,a,Cb,m,g,v,y,i,n,r))&&(c.faceIndex=Math.floor(o/3),c.face.materialIndex=l.materialIndex,e.push(c));else for(f=Math.max(0,w.start),s=Math.min(p.count,w.start+w.count);f<s;f+=3)i=p.getX(f),n=p.getX(f+1),r=p.getX(f+2),(c=Zb(this,t,a,Cb,m,g,v,y,i,n,r))&&(c.faceIndex=Math.floor(f/3),e.push(c));else if(void 0!==m)if(Array.isArray(t))for(f=0,s=x.length;f<s;f++)for(u=t[(l=x[f]).materialIndex],o=Math.max(l.start,w.start),h=Math.min(l.start+l.count,w.start+w.count);o<h;o+=3)(c=Zb(this,u,a,Cb,m,g,v,y,i=o,n=o+1,r=o+2))&&(c.faceIndex=Math.floor(o/3),c.face.materialIndex=l.materialIndex,e.push(c));else for(f=Math.max(0,w.start),s=Math.min(m.count,w.start+w.count);f<s;f+=3)(c=Zb(this,t,a,Cb,m,g,v,y,i=f,n=f+1,r=f+2))&&(c.faceIndex=Math.floor(f/3),e.push(c))}else if(b.isGeometry){var _,M,S,T,E=Array.isArray(t),A=b.vertices,L=b.faces,R=b.faceVertexUvs[0];R.length>0&&(T=R);for(var P=0,C=L.length;P<C;P++){var O=L[P],I=E?t[O.materialIndex]:t;if(void 0!==I&&(_=A[O.a],M=A[O.b],S=A[O.c],c=Yb(this,I,a,Cb,_,M,S,Wb))){if(T&&T[P]){var N=T[P];Vb.copy(N[0]),kb.copy(N[1]),jb.copy(N[2]),c.uv=Qc.getUV(Wb,_,M,S,Vb,kb,jb,new Ce)}c.face=O,c.faceIndex=P,e.push(c)}}}},clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}});var Jb=0,Kb=new Qe,Qb=new mc,$b=new De;function at(){Object.defineProperty(this,"id",{value:Jb+=2}),this.uuid=Pe.generateUUID(),this.name="",this.type="Geometry",this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.elementsNeedUpdate=!1,this.verticesNeedUpdate=!1,this.uvsNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.lineDistancesNeedUpdate=!1,this.groupsNeedUpdate=!1}at.prototype=Object.assign(Object.create(Ae.prototype),{constructor:at,isGeometry:!0,applyMatrix:function(a){for(var e=(new Be).getNormalMatrix(a),c=0,b=this.vertices.length;c<b;c++){this.vertices[c].applyMatrix4(a)}for(c=0,b=this.faces.length;c<b;c++){var t=this.faces[c];t.normal.applyMatrix3(e).normalize();for(var d=0,i=t.vertexNormals.length;d<i;d++)t.vertexNormals[d].applyMatrix3(e).normalize()}return null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this.verticesNeedUpdate=!0,this.normalsNeedUpdate=!0,this},rotateX:function(a){return Kb.makeRotationX(a),this.applyMatrix(Kb),this},rotateY:function(a){return Kb.makeRotationY(a),this.applyMatrix(Kb),this},rotateZ:function(a){return Kb.makeRotationZ(a),this.applyMatrix(Kb),this},translate:function(a,e,c){return Kb.makeTranslation(a,e,c),this.applyMatrix(Kb),this},scale:function(a,e,c){return Kb.makeScale(a,e,c),this.applyMatrix(Kb),this},lookAt:function(a){return Qb.lookAt(a),Qb.updateMatrix(),this.applyMatrix(Qb.matrix),this},fromBufferGeometry:function(a){var e=this,c=null!==a.index?a.index.array:void 0,b=a.attributes;if(void 0===b.position)return console.error("THREE.Geometry.fromBufferGeometry(): Position attribute required for conversion."),this;var t=b.position.array,d=void 0!==b.normal?b.normal.array:void 0,i=void 0!==b.color?b.color.array:void 0,n=void 0!==b.uv?b.uv.array:void 0,r=void 0!==b.uv2?b.uv2.array:void 0;void 0!==r&&(this.faceVertexUvs[1]=[]);for(var f=0;f<t.length;f+=3)e.vertices.push((new De).fromArray(t,f)),void 0!==i&&e.colors.push((new cb).fromArray(i,f));function o(a,c,b,t){var f=void 0===i?[]:[e.colors[a].clone(),e.colors[c].clone(),e.colors[b].clone()],o=new ib(a,c,b,void 0===d?[]:[(new De).fromArray(d,3*a),(new De).fromArray(d,3*c),(new De).fromArray(d,3*b)],f,t);e.faces.push(o),void 0!==n&&e.faceVertexUvs[0].push([(new Ce).fromArray(n,2*a),(new Ce).fromArray(n,2*c),(new Ce).fromArray(n,2*b)]),void 0!==r&&e.faceVertexUvs[1].push([(new Ce).fromArray(r,2*a),(new Ce).fromArray(r,2*c),(new Ce).fromArray(r,2*b)])}var s=a.groups;if(s.length>0)for(f=0;f<s.length;f++)for(var h=s[f],l=h.start,u=l,p=l+h.count;u<p;u+=3)void 0!==c?o(c[u],c[u+1],c[u+2],h.materialIndex):o(u,u+1,u+2,h.materialIndex);else if(void 0!==c)for(f=0;f<c.length;f+=3)o(c[f],c[f+1],c[f+2]);else for(f=0;f<t.length/3;f+=3)o(f,f+1,f+2);return this.computeFaceNormals(),null!==a.boundingBox&&(this.boundingBox=a.boundingBox.clone()),null!==a.boundingSphere&&(this.boundingSphere=a.boundingSphere.clone()),this},center:function(){return this.computeBoundingBox(),this.boundingBox.getCenter($b).negate(),this.translate($b.x,$b.y,$b.z),this},normalize:function(){this.computeBoundingSphere();var a=this.boundingSphere.center,e=this.boundingSphere.radius,c=0===e?1:1/e,b=new Qe;return b.set(c,0,0,-c*a.x,0,c,0,-c*a.y,0,0,c,-c*a.z,0,0,0,1),this.applyMatrix(b),this},computeFaceNormals:function(){for(var a=new De,e=new De,c=0,b=this.faces.length;c<b;c++){var t=this.faces[c],d=this.vertices[t.a],i=this.vertices[t.b],n=this.vertices[t.c];a.subVectors(n,i),e.subVectors(d,i),a.cross(e),a.normalize(),t.normal.copy(a)}},computeVertexNormals:function(a){var e,c,b,t,d,i;for(void 0===a&&(a=!0),i=new Array(this.vertices.length),e=0,c=this.vertices.length;e<c;e++)i[e]=new De;if(a){var n,r,f,o=new De,s=new De;for(b=0,t=this.faces.length;b<t;b++)d=this.faces[b],n=this.vertices[d.a],r=this.vertices[d.b],f=this.vertices[d.c],o.subVectors(f,r),s.subVectors(n,r),o.cross(s),i[d.a].add(o),i[d.b].add(o),i[d.c].add(o)}else for(this.computeFaceNormals(),b=0,t=this.faces.length;b<t;b++)i[(d=this.faces[b]).a].add(d.normal),i[d.b].add(d.normal),i[d.c].add(d.normal);for(e=0,c=this.vertices.length;e<c;e++)i[e].normalize();for(b=0,t=this.faces.length;b<t;b++){var h=(d=this.faces[b]).vertexNormals;3===h.length?(h[0].copy(i[d.a]),h[1].copy(i[d.b]),h[2].copy(i[d.c])):(h[0]=i[d.a].clone(),h[1]=i[d.b].clone(),h[2]=i[d.c].clone())}this.faces.length>0&&(this.normalsNeedUpdate=!0)},computeFlatVertexNormals:function(){var a,e,c;for(this.computeFaceNormals(),a=0,e=this.faces.length;a<e;a++){var b=(c=this.faces[a]).vertexNormals;3===b.length?(b[0].copy(c.normal),b[1].copy(c.normal),b[2].copy(c.normal)):(b[0]=c.normal.clone(),b[1]=c.normal.clone(),b[2]=c.normal.clone())}this.faces.length>0&&(this.normalsNeedUpdate=!0)},computeMorphNormals:function(){var a,e,c,b,t;for(c=0,b=this.faces.length;c<b;c++)for((t=this.faces[c]).__originalFaceNormal?t.__originalFaceNormal.copy(t.normal):t.__originalFaceNormal=t.normal.clone(),t.__originalVertexNormals||(t.__originalVertexNormals=[]),a=0,e=t.vertexNormals.length;a<e;a++)t.__originalVertexNormals[a]?t.__originalVertexNormals[a].copy(t.vertexNormals[a]):t.__originalVertexNormals[a]=t.vertexNormals[a].clone();var d=new at;for(d.faces=this.faces,a=0,e=this.morphTargets.length;a<e;a++){if(!this.morphNormals[a]){this.morphNormals[a]={},this.morphNormals[a].faceNormals=[],this.morphNormals[a].vertexNormals=[];var i=this.morphNormals[a].faceNormals,n=this.morphNormals[a].vertexNormals;for(c=0,b=this.faces.length;c<b;c++)r=new De,f={a:new De,b:new De,c:new De},i.push(r),n.push(f)}var r,f,o=this.morphNormals[a];for(d.vertices=this.morphTargets[a].vertices,d.computeFaceNormals(),d.computeVertexNormals(),c=0,b=this.faces.length;c<b;c++)t=this.faces[c],r=o.faceNormals[c],f=o.vertexNormals[c],r.copy(t.normal),f.a.copy(t.vertexNormals[0]),f.b.copy(t.vertexNormals[1]),f.c.copy(t.vertexNormals[2])}for(c=0,b=this.faces.length;c<b;c++)(t=this.faces[c]).normal=t.__originalFaceNormal,t.vertexNormals=t.__originalVertexNormals},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new Pc),this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new Ic),this.boundingSphere.setFromPoints(this.vertices)},merge:function(a,e,c){if(a&&a.isGeometry){var b,t=this.vertices.length,d=this.vertices,i=a.vertices,n=this.faces,r=a.faces,f=this.colors,o=a.colors;void 0===c&&(c=0),void 0!==e&&(b=(new Be).getNormalMatrix(e));for(var s=0,h=i.length;s<h;s++){var l=i[s].clone();void 0!==e&&l.applyMatrix4(e),d.push(l)}for(s=0,h=o.length;s<h;s++)f.push(o[s].clone());for(s=0,h=r.length;s<h;s++){var u,p,m,g=r[s],v=g.vertexNormals,y=g.vertexColors;(u=new ib(g.a+t,g.b+t,g.c+t)).normal.copy(g.normal),void 0!==b&&u.normal.applyMatrix3(b).normalize();for(var x=0,w=v.length;x<w;x++)p=v[x].clone(),void 0!==b&&p.applyMatrix3(b).normalize(),u.vertexNormals.push(p);u.color.copy(g.color);for(x=0,w=y.length;x<w;x++)m=y[x],u.vertexColors.push(m.clone());u.materialIndex=g.materialIndex+c,n.push(u)}for(s=0,h=a.faceVertexUvs.length;s<h;s++){var _=a.faceVertexUvs[s];void 0===this.faceVertexUvs[s]&&(this.faceVertexUvs[s]=[]);for(x=0,w=_.length;x<w;x++){for(var M=_[x],S=[],T=0,E=M.length;T<E;T++)S.push(M[T].clone());this.faceVertexUvs[s].push(S)}}}else console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.",a)},mergeMesh:function(a){a&&a.isMesh?(a.matrixAutoUpdate&&a.updateMatrix(),this.merge(a.geometry,a.matrix)):console.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.",a)},mergeVertices:function(){var a,e,c,b,t,d,i,n,r={},f=[],o=[],s=Math.pow(10,4);for(c=0,b=this.vertices.length;c<b;c++)a=this.vertices[c],void 0===r[e=Math.round(a.x*s)+"_"+Math.round(a.y*s)+"_"+Math.round(a.z*s)]?(r[e]=c,f.push(this.vertices[c]),o[c]=f.length-1):o[c]=o[r[e]];var h=[];for(c=0,b=this.faces.length;c<b;c++){(t=this.faces[c]).a=o[t.a],t.b=o[t.b],t.c=o[t.c],d=[t.a,t.b,t.c];for(var l=0;l<3;l++)if(d[l]===d[(l+1)%3]){h.push(c);break}}for(c=h.length-1;c>=0;c--){var u=h[c];for(this.faces.splice(u,1),i=0,n=this.faceVertexUvs.length;i<n;i++)this.faceVertexUvs[i].splice(u,1)}var p=this.vertices.length-f.length;return this.vertices=f,p},setFromPoints:function(a){this.vertices=[];for(var e=0,c=a.length;e<c;e++){var b=a[e];this.vertices.push(new De(b.x,b.y,b.z||0))}return this},sortFacesByMaterialIndex:function(){for(var a=this.faces,e=a.length,c=0;c<e;c++)a[c]._id=c;a.sort((function(a,e){return a.materialIndex-e.materialIndex}));var b,t,d=this.faceVertexUvs[0],i=this.faceVertexUvs[1];d&&d.length===e&&(b=[]),i&&i.length===e&&(t=[]);for(c=0;c<e;c++){var n=a[c]._id;b&&b.push(d[n]),t&&t.push(i[n])}b&&(this.faceVertexUvs[0]=b),t&&(this.faceVertexUvs[1]=t)},toJSON:function(){var a={metadata:{version:4.5,type:"Geometry",generator:"Geometry.toJSON"}};if(a.uuid=this.uuid,a.type=this.type,""!==this.name&&(a.name=this.name),void 0!==this.parameters){var e=this.parameters;for(var c in e)void 0!==e[c]&&(a[c]=e[c]);return a}for(var b=[],t=0;t<this.vertices.length;t++){var d=this.vertices[t];b.push(d.x,d.y,d.z)}var i=[],n=[],r={},f=[],o={},s=[],h={};for(t=0;t<this.faces.length;t++){var l=this.faces[t],u=void 0!==this.faceVertexUvs[0][t],p=l.normal.length()>0,m=l.vertexNormals.length>0,g=1!==l.color.r||1!==l.color.g||1!==l.color.b,v=l.vertexColors.length>0,y=0;if(y=M(y,0,0),y=M(y,1,!0),y=M(y,2,!1),y=M(y,3,u),y=M(y,4,p),y=M(y,5,m),y=M(y,6,g),y=M(y,7,v),i.push(y),i.push(l.a,l.b,l.c),i.push(l.materialIndex),u){var x=this.faceVertexUvs[0][t];i.push(E(x[0]),E(x[1]),E(x[2]))}if(p&&i.push(S(l.normal)),m){var w=l.vertexNormals;i.push(S(w[0]),S(w[1]),S(w[2]))}if(g&&i.push(T(l.color)),v){var _=l.vertexColors;i.push(T(_[0]),T(_[1]),T(_[2]))}}function M(a,e,c){return c?a|1<<e:a&~(1<<e)}function S(a){var e=a.x.toString()+a.y.toString()+a.z.toString();return void 0!==r[e]?r[e]:(r[e]=n.length/3,n.push(a.x,a.y,a.z),r[e])}function T(a){var e=a.r.toString()+a.g.toString()+a.b.toString();return void 0!==o[e]?o[e]:(o[e]=f.length,f.push(a.getHex()),o[e])}function E(a){var e=a.x.toString()+a.y.toString();return void 0!==h[e]?h[e]:(h[e]=s.length/2,s.push(a.x,a.y),h[e])}return a.data={},a.data.vertices=b,a.data.normals=n,f.length>0&&(a.data.colors=f),s.length>0&&(a.data.uvs=[s]),a.data.faces=i,a},clone:function(){return(new at).copy(this)},copy:function(a){var e,c,b,t,d,i;this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.name=a.name;var n=a.vertices;for(e=0,c=n.length;e<c;e++)this.vertices.push(n[e].clone());var r=a.colors;for(e=0,c=r.length;e<c;e++)this.colors.push(r[e].clone());var f=a.faces;for(e=0,c=f.length;e<c;e++)this.faces.push(f[e].clone());for(e=0,c=a.faceVertexUvs.length;e<c;e++){var o=a.faceVertexUvs[e];for(void 0===this.faceVertexUvs[e]&&(this.faceVertexUvs[e]=[]),b=0,t=o.length;b<t;b++){var s=o[b],h=[];for(d=0,i=s.length;d<i;d++){var l=s[d];h.push(l.clone())}this.faceVertexUvs[e].push(h)}}var u=a.morphTargets;for(e=0,c=u.length;e<c;e++){var p={};if(p.name=u[e].name,void 0!==u[e].vertices)for(p.vertices=[],b=0,t=u[e].vertices.length;b<t;b++)p.vertices.push(u[e].vertices[b].clone());if(void 0!==u[e].normals)for(p.normals=[],b=0,t=u[e].normals.length;b<t;b++)p.normals.push(u[e].normals[b].clone());this.morphTargets.push(p)}var m=a.morphNormals;for(e=0,c=m.length;e<c;e++){var g={};if(void 0!==m[e].vertexNormals)for(g.vertexNormals=[],b=0,t=m[e].vertexNormals.length;b<t;b++){var v=m[e].vertexNormals[b],y={};y.a=v.a.clone(),y.b=v.b.clone(),y.c=v.c.clone(),g.vertexNormals.push(y)}if(void 0!==m[e].faceNormals)for(g.faceNormals=[],b=0,t=m[e].faceNormals.length;b<t;b++)g.faceNormals.push(m[e].faceNormals[b].clone());this.morphNormals.push(g)}var x=a.skinWeights;for(e=0,c=x.length;e<c;e++)this.skinWeights.push(x[e].clone());var w=a.skinIndices;for(e=0,c=w.length;e<c;e++)this.skinIndices.push(w[e].clone());var _=a.lineDistances;for(e=0,c=_.length;e<c;e++)this.lineDistances.push(_[e]);var M=a.boundingBox;null!==M&&(this.boundingBox=M.clone());var S=a.boundingSphere;return null!==S&&(this.boundingSphere=S.clone()),this.elementsNeedUpdate=a.elementsNeedUpdate,this.verticesNeedUpdate=a.verticesNeedUpdate,this.uvsNeedUpdate=a.uvsNeedUpdate,this.normalsNeedUpdate=a.normalsNeedUpdate,this.colorsNeedUpdate=a.colorsNeedUpdate,this.lineDistancesNeedUpdate=a.lineDistancesNeedUpdate,this.groupsNeedUpdate=a.groupsNeedUpdate,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});class et extends Rb{constructor(a,e,c,b,t,d){super(),this.type="BoxBufferGeometry",this.parameters={width:a,height:e,depth:c,widthSegments:b,heightSegments:t,depthSegments:d};var i=this;a=a||1,e=e||1,c=c||1,b=Math.floor(b)||1,t=Math.floor(t)||1,d=Math.floor(d)||1;var n=[],r=[],f=[],o=[],s=0,h=0;function l(a,e,c,b,t,d,l,u,p,m,g){var v,y,x=d/p,w=l/m,_=d/2,M=l/2,S=u/2,T=p+1,E=m+1,A=0,L=0,R=new De;for(y=0;y<E;y++){var P=y*w-M;for(v=0;v<T;v++){var C=v*x-_;R[a]=C*b,R[e]=P*t,R[c]=S,r.push(R.x,R.y,R.z),R[a]=0,R[e]=0,R[c]=u>0?1:-1,f.push(R.x,R.y,R.z),o.push(v/p),o.push(1-y/m),A+=1}}for(y=0;y<m;y++)for(v=0;v<p;v++){var O=s+v+T*y,I=s+v+T*(y+1),N=s+(v+1)+T*(y+1),D=s+(v+1)+T*y;n.push(O,I,D),n.push(I,N,D),L+=6}i.addGroup(h,L,g),h+=L,s+=A}l("z","y","x",-1,-1,c,e,a,d,t,0),l("z","y","x",1,-1,c,e,-a,d,t,1),l("x","z","y",1,1,a,c,e,b,d,2),l("x","z","y",1,-1,a,c,-e,b,d,3),l("x","y","z",1,-1,a,e,c,b,t,4),l("x","y","z",-1,-1,a,e,-c,b,t,5),this.setIndex(n),this.addAttribute("position",new vb(r,3)),this.addAttribute("normal",new vb(f,3)),this.addAttribute("uv",new vb(o,2))}}function ct(a){var e={};for(var c in a)for(var b in e[c]={},a[c]){var t=a[c][b];t&&(t.isColor||t.isMatrix3||t.isMatrix4||t.isVector2||t.isVector3||t.isVector4||t.isTexture)?e[c][b]=t.clone():Array.isArray(t)?e[c][b]=t.slice():e[c][b]=t}return e}function bt(a){for(var e={},c=0;c<a.length;c++){var b=ct(a[c]);for(var t in b)e[t]=b[t]}return e}var tt={clone:ct,merge:bt},dt="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",it="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}";function nt(a){rb.call(this),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader=dt,this.fragmentShader=it,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,void 0!==a&&(void 0!==a.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(a))}function rt(){mc.call(this),this.type="Camera",this.matrixWorldInverse=new Qe,this.projectionMatrix=new Qe,this.projectionMatrixInverse=new Qe}function ft(a,e,c,b){rt.call(this),this.type="PerspectiveCamera",this.fov=void 0!==a?a:50,this.zoom=1,this.near=void 0!==c?c:.1,this.far=void 0!==b?b:2e3,this.focus=10,this.aspect=void 0!==e?e:1,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}nt.prototype=Object.create(rb.prototype),nt.prototype.constructor=nt,nt.prototype.isShaderMaterial=!0,nt.prototype.copy=function(a){return rb.prototype.copy.call(this,a),this.fragmentShader=a.fragmentShader,this.vertexShader=a.vertexShader,this.uniforms=ct(a.uniforms),this.defines=Object.assign({},a.defines),this.wireframe=a.wireframe,this.wireframeLinewidth=a.wireframeLinewidth,this.lights=a.lights,this.clipping=a.clipping,this.skinning=a.skinning,this.morphTargets=a.morphTargets,this.morphNormals=a.morphNormals,this.extensions=a.extensions,this},nt.prototype.toJSON=function(a){var e=rb.prototype.toJSON.call(this,a);for(var c in e.uniforms={},this.uniforms){var b=this.uniforms[c].value;b&&b.isTexture?e.uniforms[c]={type:"t",value:b.toJSON(a).uuid}:b&&b.isColor?e.uniforms[c]={type:"c",value:b.getHex()}:b&&b.isVector2?e.uniforms[c]={type:"v2",value:b.toArray()}:b&&b.isVector3?e.uniforms[c]={type:"v3",value:b.toArray()}:b&&b.isVector4?e.uniforms[c]={type:"v4",value:b.toArray()}:b&&b.isMatrix3?e.uniforms[c]={type:"m3",value:b.toArray()}:b&&b.isMatrix4?e.uniforms[c]={type:"m4",value:b.toArray()}:e.uniforms[c]={value:b}}Object.keys(this.defines).length>0&&(e.defines=this.defines),e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader;var t={};for(var d in this.extensions)!0===this.extensions[d]&&(t[d]=!0);return Object.keys(t).length>0&&(e.extensions=t),e},rt.prototype=Object.assign(Object.create(mc.prototype),{constructor:rt,isCamera:!0,copy:function(a,e){return mc.prototype.copy.call(this,a,e),this.matrixWorldInverse.copy(a.matrixWorldInverse),this.projectionMatrix.copy(a.projectionMatrix),this.projectionMatrixInverse.copy(a.projectionMatrixInverse),this},getWorldDirection:function(a){void 0===a&&(console.warn("THREE.Camera: .getWorldDirection() target is now required"),a=new De),this.updateMatrixWorld(!0);var e=this.matrixWorld.elements;return a.set(-e[8],-e[9],-e[10]).normalize()},updateMatrixWorld:function(a){mc.prototype.updateMatrixWorld.call(this,a),this.matrixWorldInverse.getInverse(this.matrixWorld)},clone:function(){return(new this.constructor).copy(this)}}),ft.prototype=Object.assign(Object.create(rt.prototype),{constructor:ft,isPerspectiveCamera:!0,copy:function(a,e){return rt.prototype.copy.call(this,a,e),this.fov=a.fov,this.zoom=a.zoom,this.near=a.near,this.far=a.far,this.focus=a.focus,this.aspect=a.aspect,this.view=null===a.view?null:Object.assign({},a.view),this.filmGauge=a.filmGauge,this.filmOffset=a.filmOffset,this},setFocalLength:function(a){var e=.5*this.getFilmHeight()/a;this.fov=2*Pe.RAD2DEG*Math.atan(e),this.updateProjectionMatrix()},getFocalLength:function(){var a=Math.tan(.5*Pe.DEG2RAD*this.fov);return.5*this.getFilmHeight()/a},getEffectiveFOV:function(){return 2*Pe.RAD2DEG*Math.atan(Math.tan(.5*Pe.DEG2RAD*this.fov)/this.zoom)},getFilmWidth:function(){return this.filmGauge*Math.min(this.aspect,1)},getFilmHeight:function(){return this.filmGauge/Math.max(this.aspect,1)},setViewOffset:function(a,e,c,b,t,d){this.aspect=a/e,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=a,this.view.fullHeight=e,this.view.offsetX=c,this.view.offsetY=b,this.view.width=t,this.view.height=d,this.updateProjectionMatrix()},clearViewOffset:function(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){var a=this.near,e=a*Math.tan(.5*Pe.DEG2RAD*this.fov)/this.zoom,c=2*e,b=this.aspect*c,t=-.5*b,d=this.view;if(null!==this.view&&this.view.enabled){var i=d.fullWidth,n=d.fullHeight;t+=d.offsetX*b/i,e-=d.offsetY*c/n,b*=d.width/i,c*=d.height/n}var r=this.filmOffset;0!==r&&(t+=a*r/this.getFilmWidth()),this.projectionMatrix.makePerspective(t,t+b,e,e-c,a,this.far),this.projectionMatrixInverse.getInverse(this.projectionMatrix)},toJSON:function(a){var e=mc.prototype.toJSON.call(this,a);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,null!==this.view&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}});var ot=90,st=1;function ht(a,e,c,b){mc.call(this),this.type="CubeCamera";var t=new ft(ot,st,a,e);t.up.set(0,-1,0),t.lookAt(new De(1,0,0)),this.add(t);var d=new ft(ot,st,a,e);d.up.set(0,-1,0),d.lookAt(new De(-1,0,0)),this.add(d);var i=new ft(ot,st,a,e);i.up.set(0,0,1),i.lookAt(new De(0,1,0)),this.add(i);var n=new ft(ot,st,a,e);n.up.set(0,0,-1),n.lookAt(new De(0,-1,0)),this.add(n);var r=new ft(ot,st,a,e);r.up.set(0,-1,0),r.lookAt(new De(0,0,1)),this.add(r);var f=new ft(ot,st,a,e);f.up.set(0,-1,0),f.lookAt(new De(0,0,-1)),this.add(f),b=b||{format:Oa,magFilter:ma,minFilter:ma},this.renderTarget=new lt(c,c,b),this.renderTarget.texture.name="CubeCamera",this.update=function(a,e){null===this.parent&&this.updateMatrixWorld();var c=a.getRenderTarget(),b=this.renderTarget,o=b.texture.generateMipmaps;b.texture.generateMipmaps=!1,a.setRenderTarget(b,0),a.render(e,t),a.setRenderTarget(b,1),a.render(e,d),a.setRenderTarget(b,2),a.render(e,i),a.setRenderTarget(b,3),a.render(e,n),a.setRenderTarget(b,4),a.render(e,r),b.texture.generateMipmaps=o,a.setRenderTarget(b,5),a.render(e,f),a.setRenderTarget(c)},this.clear=function(a,e,c,b){for(var t=a.getRenderTarget(),d=this.renderTarget,i=0;i<6;i++)a.setRenderTarget(d,i),a.clear(e,c,b);a.setRenderTarget(t)}}function lt(a,e,c){ke.call(this,a,e,c)}function ut(a,e,c,b,t,d,i,n,r,f,o,s){He.call(this,null,d,i,n,r,f,b,t,o,s),this.image={data:a||null,width:e||1,height:c||1},this.magFilter=void 0!==r?r:la,this.minFilter=void 0!==f?f:la,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}ht.prototype=Object.create(mc.prototype),ht.prototype.constructor=ht,lt.prototype=Object.create(ke.prototype),lt.prototype.constructor=lt,lt.prototype.isWebGLRenderTargetCube=!0,lt.prototype.fromEquirectangularTexture=function(a,e){this.texture.type=e.type,this.texture.format=e.format,this.texture.encoding=e.encoding;var c=new gc,b={uniforms:{tEquirect:{value:null}},vertexShader:["varying vec3 vWorldDirection;","vec3 transformDirection( in vec3 dir, in mat4 matrix ) {","\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );","}","void main() {","\tvWorldDirection = transformDirection( position, modelMatrix );","\t#include <begin_vertex>","\t#include <project_vertex>","}"].join("\n"),fragmentShader:["uniform sampler2D tEquirect;","varying vec3 vWorldDirection;","#define RECIPROCAL_PI 0.31830988618","#define RECIPROCAL_PI2 0.15915494","void main() {","\tvec3 direction = normalize( vWorldDirection );","\tvec2 sampleUV;","\tsampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;","\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;","\tgl_FragColor = texture2D( tEquirect, sampleUV );","}"].join("\n")},t=new nt({type:"CubemapFromEquirect",uniforms:ct(b.uniforms),vertexShader:b.vertexShader,fragmentShader:b.fragmentShader,side:l,blending:v});t.uniforms.tEquirect.value=e;var d=new Xb(new et(5,5,5),t);c.add(d);var i=new ht(1,10,1);return i.renderTarget=this,i.renderTarget.texture.name="CubeCameraTexture",i.update(a,c),d.geometry.dispose(),d.material.dispose(),this},ut.prototype=Object.create(He.prototype),ut.prototype.constructor=ut,ut.prototype.isDataTexture=!0;var pt=new De,mt=new De,gt=new Be;function vt(a,e){this.normal=void 0!==a?a:new De(1,0,0),this.constant=void 0!==e?e:0}Object.assign(vt.prototype,{isPlane:!0,set:function(a,e){return this.normal.copy(a),this.constant=e,this},setComponents:function(a,e,c,b){return this.normal.set(a,e,c),this.constant=b,this},setFromNormalAndCoplanarPoint:function(a,e){return this.normal.copy(a),this.constant=-e.dot(this.normal),this},setFromCoplanarPoints:function(a,e,c){var b=pt.subVectors(c,e).cross(mt.subVectors(a,e)).normalize();return this.setFromNormalAndCoplanarPoint(b,a),this},clone:function(){return(new this.constructor).copy(this)},copy:function(a){return this.normal.copy(a.normal),this.constant=a.constant,this},normalize:function(){var a=1/this.normal.length();return this.normal.multiplyScalar(a),this.constant*=a,this},negate:function(){return this.constant*=-1,this.normal.negate(),this},distanceToPoint:function(a){return this.normal.dot(a)+this.constant},distanceToSphere:function(a){return this.distanceToPoint(a.center)-a.radius},projectPoint:function(a,e){return void 0===e&&(console.warn("THREE.Plane: .projectPoint() target is now required"),e=new De),e.copy(this.normal).multiplyScalar(-this.distanceToPoint(a)).add(a)},intersectLine:function(a,e){void 0===e&&(console.warn("THREE.Plane: .intersectLine() target is now required"),e=new De);var c=a.delta(pt),b=this.normal.dot(c);if(0===b)return 0===this.distanceToPoint(a.start)?e.copy(a.start):void 0;var t=-(a.start.dot(this.normal)+this.constant)/b;return t<0||t>1?void 0:e.copy(c).multiplyScalar(t).add(a.start)},intersectsLine:function(a){var e=this.distanceToPoint(a.start),c=this.distanceToPoint(a.end);return e<0&&c>0||c<0&&e>0},intersectsBox:function(a){return a.intersectsPlane(this)},intersectsSphere:function(a){return a.intersectsPlane(this)},coplanarPoint:function(a){return void 0===a&&(console.warn("THREE.Plane: .coplanarPoint() target is now required"),a=new De),a.copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(a,e){var c=e||gt.getNormalMatrix(a),b=this.coplanarPoint(pt).applyMatrix4(a),t=this.normal.applyMatrix3(c).normalize();return this.constant=-b.dot(t),this},translate:function(a){return this.constant-=a.dot(this.normal),this},equals:function(a){return a.normal.equals(this.normal)&&a.constant===this.constant}});var yt=new Ic,xt=new De;function wt(a,e,c,b,t,d){this.planes=[void 0!==a?a:new vt,void 0!==e?e:new vt,void 0!==c?c:new vt,void 0!==b?b:new vt,void 0!==t?t:new vt,void 0!==d?d:new vt]}Object.assign(wt.prototype,{set:function(a,e,c,b,t,d){var i=this.planes;return i[0].copy(a),i[1].copy(e),i[2].copy(c),i[3].copy(b),i[4].copy(t),i[5].copy(d),this},clone:function(){return(new this.constructor).copy(this)},copy:function(a){for(var e=this.planes,c=0;c<6;c++)e[c].copy(a.planes[c]);return this},setFromMatrix:function(a){var e=this.planes,c=a.elements,b=c[0],t=c[1],d=c[2],i=c[3],n=c[4],r=c[5],f=c[6],o=c[7],s=c[8],h=c[9],l=c[10],u=c[11],p=c[12],m=c[13],g=c[14],v=c[15];return e[0].setComponents(i-b,o-n,u-s,v-p).normalize(),e[1].setComponents(i+b,o+n,u+s,v+p).normalize(),e[2].setComponents(i+t,o+r,u+h,v+m).normalize(),e[3].setComponents(i-t,o-r,u-h,v-m).normalize(),e[4].setComponents(i-d,o-f,u-l,v-g).normalize(),e[5].setComponents(i+d,o+f,u+l,v+g).normalize(),this},intersectsObject:function(a){var e=a.geometry;return null===e.boundingSphere&&e.computeBoundingSphere(),yt.copy(e.boundingSphere).applyMatrix4(a.matrixWorld),this.intersectsSphere(yt)},intersectsSprite:function(a){return yt.center.set(0,0,0),yt.radius=.7071067811865476,yt.applyMatrix4(a.matrixWorld),this.intersectsSphere(yt)},intersectsSphere:function(a){for(var e=this.planes,c=a.center,b=-a.radius,t=0;t<6;t++){if(e[t].distanceToPoint(c)<b)return!1}return!0},intersectsBox:function(a){for(var e=this.planes,c=0;c<6;c++){var b=e[c];if(xt.x=b.normal.x>0?a.max.x:a.min.x,xt.y=b.normal.y>0?a.max.y:a.min.y,xt.z=b.normal.z>0?a.max.z:a.min.z,b.distanceToPoint(xt)<0)return!1}return!0},containsPoint:function(a){for(var e=this.planes,c=0;c<6;c++)if(e[c].distanceToPoint(a)<0)return!1;return!0}});var _t={alphamap_fragment:"#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef ALPHATEST\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\t#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",begin_vertex:"vec3 transformed = vec3( position );",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\n}\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\tif( cutoffDistance > 0.0 ) {\n\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t}\n\treturn distanceFalloff;\n#else\n\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t}\n\treturn 1.0;\n#endif\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\n\tvec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\n\treturn Fr * fresnel + F0;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\treturn 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( incidentLight.direction + viewDir );\n\tfloat dotNL = saturate( dot( normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( G * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE  = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nvec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\treturn specularColor * brdf.x + brdf.y;\n}\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tvec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\tvec3 FssEss = F * brdf.x + brdf.y;\n\tfloat Ess = brdf.x + brdf.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie(float roughness, float NoH) {\n\tfloat invAlpha  = 1.0 / roughness;\n\tfloat cos2h = NoH * NoH;\n\tfloat sin2h = max(1.0 - cos2h, 0.0078125);\treturn (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);\n}\nfloat V_Neubelt(float NoV, float NoL) {\n\treturn saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));\n}\nvec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\n\tvec3 N = geometry.normal;\n\tvec3 V = geometry.viewDir;\n\tvec3 H = normalize( V + L );\n\tfloat dotNH = saturate( dot( N, H ) );\n\treturn specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\n}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\t\tfDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n\t#if ! defined( STANDARD ) && ! defined( PHONG ) && ! defined( MATCAP )\n\t\tvarying vec3 vViewPosition;\n\t#endif\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0 && ! defined( STANDARD ) && ! defined( PHONG ) && ! defined( MATCAP )\n\tvarying vec3 vViewPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0 && ! defined( STANDARD ) && ! defined( PHONG ) && ! defined( MATCAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif",color_fragment:"#ifdef USE_COLOR\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif",color_pars_vertex:"#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif",color_vertex:"#ifdef USE_COLOR\n\tvColor.xyz = color.xyz;\n#endif",common:"#define PI 3.14159265359\n#define PI2 6.28318530718\n#define PI_HALF 1.5707963267949\n#define RECIPROCAL_PI 0.31830988618\n#define RECIPROCAL_PI2 0.15915494\n#define LOG2 1.442695\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\treturn - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\treturn dot( weights, color.rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n  return m[ 2 ][ 3 ] == - 1.0;\n}",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n#define cubeUV_textureSize (1024.0)\nint getFaceFromDirection(vec3 direction) {\n\tvec3 absDirection = abs(direction);\n\tint face = -1;\n\tif( absDirection.x > absDirection.z ) {\n\t\tif(absDirection.x > absDirection.y )\n\t\t\tface = direction.x > 0.0 ? 0 : 3;\n\t\telse\n\t\t\tface = direction.y > 0.0 ? 1 : 4;\n\t}\n\telse {\n\t\tif(absDirection.z > absDirection.y )\n\t\t\tface = direction.z > 0.0 ? 2 : 5;\n\t\telse\n\t\t\tface = direction.y > 0.0 ? 1 : 4;\n\t}\n\treturn face;\n}\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\n\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\n\tfloat dxRoughness = dFdx(roughness);\n\tfloat dyRoughness = dFdy(roughness);\n\tvec3 dx = dFdx( vec * scale * dxRoughness );\n\tvec3 dy = dFdy( vec * scale * dyRoughness );\n\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\n\td = clamp(d, 1.0, cubeUV_rangeClamp);\n\tfloat mipLevel = 0.5 * log2(d);\n\treturn vec2(floor(mipLevel), fract(mipLevel));\n}\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\n\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\n\tfloat a = 16.0 * cubeUV_rcpTextureSize;\n\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\n\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\n\tfloat powScale = exp2_packed.x * exp2_packed.y;\n\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\n\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\n\tbool bRes = mipLevel == 0.0;\n\tscale =  bRes && (scale < a) ? a : scale;\n\tvec3 r;\n\tvec2 offset;\n\tint face = getFaceFromDirection(direction);\n\tfloat rcpPowScale = 1.0 / powScale;\n\tif( face == 0) {\n\t\tr = vec3(direction.x, -direction.z, direction.y);\n\t\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n\t}\n\telse if( face == 1) {\n\t\tr = vec3(direction.y, direction.x, direction.z);\n\t\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n\t}\n\telse if( face == 2) {\n\t\tr = vec3(direction.z, direction.x, direction.y);\n\t\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n\t}\n\telse if( face == 3) {\n\t\tr = vec3(direction.x, direction.z, direction.y);\n\t\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n\t}\n\telse if( face == 4) {\n\t\tr = vec3(direction.y, direction.x, -direction.z);\n\t\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n\t}\n\telse {\n\t\tr = vec3(direction.z, -direction.x, direction.y);\n\t\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n\t}\n\tr = normalize(r);\n\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\n\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\n\tvec2 base = offset + vec2( texelOffset );\n\treturn base + s * ( scale - 2.0 * texelOffset );\n}\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\nvec4 textureCubeUV( sampler2D envMap, vec3 reflectedDirection, float roughness ) {\n\tfloat roughnessVal = roughness* cubeUV_maxLods3;\n\tfloat r1 = floor(roughnessVal);\n\tfloat r2 = r1 + 1.0;\n\tfloat t = fract(roughnessVal);\n\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\n\tfloat s = mipInfo.y;\n\tfloat level0 = mipInfo.x;\n\tfloat level1 = level0 + 1.0;\n\tlevel1 = level1 > 5.0 ? 5.0 : level1;\n\tlevel0 += min( floor( s + 0.5 ), 5.0 );\n\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\n\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\n\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\n\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\n\tvec4 result = mix(color10, color20, t);\n\treturn vec4(result.rgb, 1.0);\n}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\ttransformedNormal = mat3( instanceMatrix ) * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = normalMatrix * objectTangent;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",encodings_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_fragment:"\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat D = max( maxRange / maxRGB, 1.0 );\n\tD = min( floor( D ) / 255.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value )  {\n\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\n\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract( Le );\n\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\n\treturn vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\n\treturn vec4( max( vRGB, 0.0 ), 1.0 );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\tvec2 sampleUV;\n\t\treflectVec = normalize( reflectVec );\n\t\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\t\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\n\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\treflectVec = normalize( reflectVec );\n\t\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\n\t\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\tenvColor = envMapTexelToLinear( envColor );\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\tuniform int maxMipLevel;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",envmap_physical_pars_fragment:"#if defined( USE_ENVMAP )\n\t#ifdef ENVMAP_MODE_REFRACTION\n\t\tuniform float refractionRatio;\n\t#endif\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, queryVec, 1.0 );\n\t\t#else\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\t\t#endif\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t}\n\tfloat getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\t\tfloat sigma = PI * roughness * roughness / ( 1.0 + roughness );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar + log2( sigma );\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\t}\n\tvec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t  vec3 reflectVec = reflect( -viewDir, normal );\n\t\t  reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t#else\n\t\t  vec3 reflectVec = refract( -viewDir, normal, refractionRatio );\n\t\t#endif\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, queryReflectVec, roughness );\n\t\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\t\tvec2 sampleUV;\n\t\t\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\t\t\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\t\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#endif\n\t\treturn envMapColor.rgb * envMapIntensity;\n\t}\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n\tfogDepth = -mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n\tvarying float fogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float fogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",gradientmap_pars_fragment:"#ifdef TOON\n\tuniform sampler2D gradientMap;\n\tvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\t\tfloat dotNL = dot( normal, lightDirection );\n\t\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t\t#ifdef USE_GRADIENTMAP\n\t\t\treturn texture2D( gradientMap, coord ).rgb;\n\t\t#else\n\t\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t\t#endif\n\t}\n#endif",lightmap_fragment:"#ifdef USE_LIGHTMAP\n\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_vertex:"vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n\tvIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\n#if NUM_POINT_LIGHTS > 0\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_DIR_LIGHTS > 0\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\t\t#endif\n\t}\n#endif",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\n\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treturn irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t\tfloat shadowCameraNear;\n\t\tfloat shadowCameraFar;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tdirectLight.color = pointLight.color;\n\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\t\tif ( angleCos > spotLight.coneCos ) {\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible = true;\n\t\t} else {\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tirradiance *= PI;\n\t\t#endif\n\t\treturn irradiance;\n\t}\n#endif",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n\tvec3\tdiffuseColor;\n\tvec3\tspecularColor;\n\tfloat\tspecularShininess;\n\tfloat\tspecularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\t#ifdef TOON\n\t\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\t#else\n\t\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\t\tvec3 irradiance = dotNL * directLight.color;\n\t#endif\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\n#ifdef REFLECTIVITY\n\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n#endif\n#ifdef CLEARCOAT\n\tmaterial.clearcoat = saturate( clearcoat );\tmaterial.clearcoatRoughness = clamp( clearcoatRoughness, 0.04, 1.0 );\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheen;\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n\tvec3\tdiffuseColor;\n\tfloat\tspecularRoughness;\n\tvec3\tspecularColor;\n#ifdef CLEARCOAT\n\tfloat clearcoat;\n\tfloat clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tvec3 sheenColor;\n#endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nfloat clearcoatDHRApprox( const in float roughness, const in float dotNL ) {\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.specularRoughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = ccDotNL * directLight.color;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tccIrradiance *= PI;\n\t\t#endif\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t\treflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(\n\t\t\tmaterial.specularRoughness,\n\t\t\tdirectLight.direction,\n\t\t\tgeometry,\n\t\t\tmaterial.sheenColor\n\t\t);\n\t#else\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);\n\t#endif\n\treflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t\tfloat ccDotNL = ccDotNV;\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\tfloat clearcoatInv = 1.0 - clearcoatDHR;\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n\treflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = normalize( vViewPosition );\n#ifdef CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tdirectLight.color *= all( bvec3( pointLight.shadow, directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tdirectLight.color *= all( bvec3( spotLight.shadow, directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectLight.color *= all( bvec3( directionalLight.shadow, directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t}\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );\n\t#ifdef CLEARCOAT\n\t\tclearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );\n\t#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 1.0 ? log2( vFragDepth ) * logDepthBufFC * 0.5 : gl_FragCoord.z;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif",map_fragment:"#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_particle_fragment:"#ifdef USE_MAP\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n\tvec4 mapTexel = texture2D( map, uv );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n#endif",map_particle_pars_fragment:"#ifdef USE_MAP\n\tuniform mat3 uvTransform;\n\tuniform sampler2D map;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\n\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\n\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\n\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n\t#ifndef USE_MORPHNORMALS\n\tuniform float morphTargetInfluences[ 8 ];\n\t#else\n\tuniform float morphTargetInfluences[ 4 ];\n\t#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\n\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\n\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\n\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n\t#ifndef USE_MORPHNORMALS\n\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\n\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\n\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\n\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n\t#endif\n#endif",normal_fragment_begin:"#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t\tbitangent = bitangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t#endif\n\t#endif\n#endif\nvec3 geometryNormal = normal;",normal_fragment_maps:"#ifdef OBJECTSPACE_NORMALMAP\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n\t#ifdef USE_TANGENT\n\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t\tmapN.xy = normalScale * mapN.xy;\n\t\tnormal = normalize( vTBN * mapN );\n\t#else\n\t\tnormal = perturbNormal2Arb( -vViewPosition, normal, normalScale, normalMap );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec2 normalScale, in sampler2D normalMap ) {\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tfloat scale = sign( st1.t * st0.s - st0.t * st1.s );\n\t\tvec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\n\t\tvec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\n\t\tvec3 N = normalize( surf_norm );\n\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t\tmapN.xy *= normalScale;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tbool frontFacing = dot( cross( S, T ), N ) > 0.0;\n\t\t\tmapN.xy *= ( float( frontFacing ) * 2.0 - 1.0 );\n\t\t#else\n\t\t\tmapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t#endif\n\t\tmat3 tsn = mat3( S, T, N );\n\t\treturn normalize( tsn * mapN );\n\t}\n#endif",clearcoat_normal_fragment_begin:"#ifdef CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n\t#ifdef USE_TANGENT\n\t\tmat3 vTBN = mat3( tangent, bitangent, clearcoatNormal );\n\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t\tmapN.xy = clearcoatNormalScale * mapN.xy;\n\t\tclearcoatNormal = normalize( vTBN * mapN );\n\t#else\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatNormalScale, clearcoatNormalMap );\n\t#endif\n#endif",clearcoat_normalmap_pars_fragment:"#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec4 encodeHalfRGBA ( vec2 v ) {\n\tvec4 encoded = vec4( 0.0 );\n\tconst vec2 offset = vec2( 1.0 / 255.0, 0.0 );\n\tencoded.xy = vec2( v.x, fract( v.x * 255.0 ) );\n\tencoded.xy = encoded.xy - ( encoded.yy * offset );\n\tencoded.zw = vec2( v.y, fract( v.y * 255.0 ) );\n\tencoded.zw = encoded.zw - ( encoded.ww * offset );\n\treturn encoded;\n}\nvec2 decodeHalfRGBA( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn decodeHalfRGBA( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\n\t\tconst vec2 offset = vec2( 0.0, 1.0 );\n\t\tvec2 texelSize = vec2( 1.0 ) / size;\n\t\tvec2 centroidUV = ( floor( uv * size - 0.5 ) + 0.5 ) * texelSize;\n\t\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\n\t\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\n\t\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\n\t\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\n\t\tvec2 f = fract( uv * size + 0.5 );\n\t\tfloat a = mix( lb, lt, f.y );\n\t\tfloat b = mix( rb, rt, f.y );\n\t\tfloat c = mix( a, b, f.x );\n\t\treturn c;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tshadow = (\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLight directionalLight;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tshadow *= all( bvec2( directionalLight.shadow, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLight spotLight;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tshadow *= all( bvec2( spotLight.shadow, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLight pointLight;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tshadow *= all( bvec2( pointLight.shadow, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#endif\n\t#endif\n\treturn shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform highp sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nuniform float toneMappingWhitePoint;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\nvec3 Uncharted2ToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( ( color * ( 2.51 * color + 0.03 ) ) / ( color * ( 2.43 * color + 0.59 ) + 0.14 ) );\n}",uv_pars_fragment:"#ifdef USE_UV\n\tvarying vec2 vUv;\n#endif",uv_pars_vertex:"#ifdef USE_UV\n\tvarying vec2 vUv;\n\tuniform mat3 uvTransform;\n#endif",uv_vertex:"#ifdef USE_UV\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",uv2_pars_fragment:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",uv2_pars_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n#endif",uv2_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = uv2;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",background_frag:"uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",cube_frag:"uniform samplerCube tCube;\nuniform float tFlip;\nuniform float opacity;\nvarying vec3 vWorldDirection;\nvoid main() {\n\tvec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - gl_FragCoord.z ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\n\t#endif\n}",depth_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV;\n\tsampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\n\tvec4 texColor = texture2D( tEquirect, sampleUV );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\tvLineDistance = scale * lineDistance;\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\treflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",meshbasic_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_ENVMAP\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",meshlambert_frag:"uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\t#else\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\n\t#endif\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t\tmatcapColor = matcapTexelToLinear( matcapColor );\n\t#else\n\t\tvec4 matcapColor = vec4( 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#ifndef FLAT_SHADED\n\t\tvNormal = normalize( transformedNormal );\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n\t#define REFLECTIVITY\n\t#define CLEARCOAT\n\t#define TRANSPARENCY\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef TRANSPARENCY\n\tuniform float transparency;\n#endif\n#ifdef REFLECTIVITY\n\tuniform float reflectivity;\n#endif\n#ifdef CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheen;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_normalmap_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#ifdef TRANSPARENCY\n\t\tdiffuseColor.a *= saturate( 1. - transparency + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) );\n\t#endif\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",normal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}",normal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <fog_fragment>\n}",shadow_vert:"#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}"},Mt={common:{diffuse:{value:new cb(15658734)},opacity:{value:1},map:{value:null},uvTransform:{value:new Be},alphaMap:{value:null}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},refractionRatio:{value:.98},maxMipLevel:{value:0}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new Ce(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new cb(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}}},points:{diffuse:{value:new cb(15658734)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},uvTransform:{value:new Be}},sprite:{diffuse:{value:new cb(15658734)},opacity:{value:1},center:{value:new Ce(.5,.5)},rotation:{value:0},map:{value:null},uvTransform:{value:new Be}}},St={basic:{uniforms:bt([Mt.common,Mt.specularmap,Mt.envmap,Mt.aomap,Mt.lightmap,Mt.fog]),vertexShader:_t.meshbasic_vert,fragmentShader:_t.meshbasic_frag},lambert:{uniforms:bt([Mt.common,Mt.specularmap,Mt.envmap,Mt.aomap,Mt.lightmap,Mt.emissivemap,Mt.fog,Mt.lights,{emissive:{value:new cb(0)}}]),vertexShader:_t.meshlambert_vert,fragmentShader:_t.meshlambert_frag},phong:{uniforms:bt([Mt.common,Mt.specularmap,Mt.envmap,Mt.aomap,Mt.lightmap,Mt.emissivemap,Mt.bumpmap,Mt.normalmap,Mt.displacementmap,Mt.gradientmap,Mt.fog,Mt.lights,{emissive:{value:new cb(0)},specular:{value:new cb(1118481)},shininess:{value:30}}]),vertexShader:_t.meshphong_vert,fragmentShader:_t.meshphong_frag},standard:{uniforms:bt([Mt.common,Mt.envmap,Mt.aomap,Mt.lightmap,Mt.emissivemap,Mt.bumpmap,Mt.normalmap,Mt.displacementmap,Mt.roughnessmap,Mt.metalnessmap,Mt.fog,Mt.lights,{emissive:{value:new cb(0)},roughness:{value:.5},metalness:{value:.5},envMapIntensity:{value:1}}]),vertexShader:_t.meshphysical_vert,fragmentShader:_t.meshphysical_frag},matcap:{uniforms:bt([Mt.common,Mt.bumpmap,Mt.normalmap,Mt.displacementmap,Mt.fog,{matcap:{value:null}}]),vertexShader:_t.meshmatcap_vert,fragmentShader:_t.meshmatcap_frag},points:{uniforms:bt([Mt.points,Mt.fog]),vertexShader:_t.points_vert,fragmentShader:_t.points_frag},dashed:{uniforms:bt([Mt.common,Mt.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:_t.linedashed_vert,fragmentShader:_t.linedashed_frag},depth:{uniforms:bt([Mt.common,Mt.displacementmap]),vertexShader:_t.depth_vert,fragmentShader:_t.depth_frag},normal:{uniforms:bt([Mt.common,Mt.bumpmap,Mt.normalmap,Mt.displacementmap,{opacity:{value:1}}]),vertexShader:_t.normal_vert,fragmentShader:_t.normal_frag},sprite:{uniforms:bt([Mt.sprite,Mt.fog]),vertexShader:_t.sprite_vert,fragmentShader:_t.sprite_frag},background:{uniforms:{uvTransform:{value:new Be},t2D:{value:null}},vertexShader:_t.background_vert,fragmentShader:_t.background_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:_t.cube_vert,fragmentShader:_t.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:_t.equirect_vert,fragmentShader:_t.equirect_frag},distanceRGBA:{uniforms:bt([Mt.common,Mt.displacementmap,{referencePosition:{value:new De},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:_t.distanceRGBA_vert,fragmentShader:_t.distanceRGBA_frag},shadow:{uniforms:bt([Mt.lights,Mt.fog,{color:{value:new cb(0)},opacity:{value:1}}]),vertexShader:_t.shadow_vert,fragmentShader:_t.shadow_frag}};function Tt(){var a=null,e=!1,c=null;function b(t,d){!1!==e&&(c(t,d),a.requestAnimationFrame(b))}return{start:function(){!0!==e&&null!==c&&(a.requestAnimationFrame(b),e=!0)},stop:function(){e=!1},setAnimationLoop:function(a){c=a},setContext:function(e){a=e}}}function Et(a){var e=new WeakMap;return{get:function(a){return a.isInterleavedBufferAttribute&&(a=a.data),e.get(a)},remove:function(c){c.isInterleavedBufferAttribute&&(c=c.data);var b=e.get(c);b&&(a.deleteBuffer(b.buffer),e.delete(c))},update:function(c,b){c.isInterleavedBufferAttribute&&(c=c.data);var t=e.get(c);void 0===t?e.set(c,function(e,c){var b=e.array,t=e.dynamic?35048:35044,d=a.createBuffer();a.bindBuffer(c,d),a.bufferData(c,b,t),e.onUploadCallback();var i=5126;return b instanceof Float32Array?i=5126:b instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):b instanceof Uint16Array?i=5123:b instanceof Int16Array?i=5122:b instanceof Uint32Array?i=5125:b instanceof Int32Array?i=5124:b instanceof Int8Array?i=5120:b instanceof Uint8Array&&(i=5121),{buffer:d,type:i,bytesPerElement:b.BYTES_PER_ELEMENT,version:e.version}}(c,b)):t.version<c.version&&(!function(e,c,b){var t=c.array,d=c.updateRange;a.bindBuffer(b,e),!1===c.dynamic?a.bufferData(b,t,35044):-1===d.count?a.bufferSubData(b,0,t):0===d.count?console.error("THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually."):(a.bufferSubData(b,d.offset*t.BYTES_PER_ELEMENT,t.subarray(d.offset,d.offset+d.count)),d.count=-1)}(t.buffer,c,b),t.version=c.version)}}}function At(a,e,c,b){at.call(this),this.type="PlaneGeometry",this.parameters={width:a,height:e,widthSegments:c,heightSegments:b},this.fromBufferGeometry(new Lt(a,e,c,b)),this.mergeVertices()}function Lt(a,e,c,b){Rb.call(this),this.type="PlaneBufferGeometry",this.parameters={width:a,height:e,widthSegments:c,heightSegments:b};var t,d,i=(a=a||1)/2,n=(e=e||1)/2,r=Math.floor(c)||1,f=Math.floor(b)||1,o=r+1,s=f+1,h=a/r,l=e/f,u=[],p=[],m=[],g=[];for(d=0;d<s;d++){var v=d*l-n;for(t=0;t<o;t++){var y=t*h-i;p.push(y,-v,0),m.push(0,0,1),g.push(t/r),g.push(1-d/f)}}for(d=0;d<f;d++)for(t=0;t<r;t++){var x=t+o*d,w=t+o*(d+1),_=t+1+o*(d+1),M=t+1+o*d;u.push(x,w,M),u.push(w,_,M)}this.setIndex(u),this.addAttribute("position",new vb(p,3)),this.addAttribute("normal",new vb(m,3)),this.addAttribute("uv",new vb(g,2))}function Rt(a,e,c,b){var t,d,i=new cb(0),n=0,r=null,f=0;function o(a,c){e.buffers.color.setClear(a.r,a.g,a.b,c,b)}return{getClearColor:function(){return i},setClearColor:function(a,e){i.set(a),o(i,n=void 0!==e?e:1)},getClearAlpha:function(){return n},setClearAlpha:function(a){o(i,n=a)},render:function(e,b,s,u){var p=b.background,m=a.vr,g=m.getSession&&m.getSession();if(g&&"additive"===g.environmentBlendMode&&(p=null),null===p?(o(i,n),r=null,f=0):p&&p.isColor&&(o(p,1),u=!0,r=null,f=0),(a.autoClear||u)&&a.clear(a.autoClearColor,a.autoClearDepth,a.autoClearStencil),p&&(p.isCubeTexture||p.isWebGLRenderTargetCube)){void 0===d&&((d=new Xb(new et(1,1,1),new nt({type:"BackgroundCubeMaterial",uniforms:ct(St.cube.uniforms),vertexShader:St.cube.vertexShader,fragmentShader:St.cube.fragmentShader,side:l,depthTest:!1,depthWrite:!1,fog:!1}))).geometry.removeAttribute("normal"),d.geometry.removeAttribute("uv"),d.onBeforeRender=function(a,e,c){this.matrixWorld.copyPosition(c.matrixWorld)},Object.defineProperty(d.material,"map",{get:function(){return this.uniforms.tCube.value}}),c.update(d));var v=p.isWebGLRenderTargetCube?p.texture:p;d.material.uniforms.tCube.value=v,d.material.uniforms.tFlip.value=p.isWebGLRenderTargetCube?1:-1,r===p&&f===v.version||(d.material.needsUpdate=!0,r=p,f=v.version),e.unshift(d,d.geometry,d.material,0,0,null)}else p&&p.isTexture&&(void 0===t&&((t=new Xb(new Lt(2,2),new nt({type:"BackgroundMaterial",uniforms:ct(St.background.uniforms),vertexShader:St.background.vertexShader,fragmentShader:St.background.fragmentShader,side:h,depthTest:!1,depthWrite:!1,fog:!1}))).geometry.removeAttribute("normal"),Object.defineProperty(t.material,"map",{get:function(){return this.uniforms.t2D.value}}),c.update(t)),t.material.uniforms.t2D.value=p,!0===p.matrixAutoUpdate&&p.updateMatrix(),t.material.uniforms.uvTransform.value.copy(p.matrix),r===p&&f===p.version||(t.material.needsUpdate=!0,r=p,f=p.version),e.unshift(t,t.geometry,t.material,0,0,null))}}}function Pt(a,e,c,b){var t;this.setMode=function(a){t=a},this.render=function(e,b){a.drawArrays(t,e,b),c.update(b,t)},this.renderInstances=function(d,i,n,r){if(0!==r){var f,o;if(b.isWebGL2)f=a,o="drawArraysInstanced";else if(o="drawArraysInstancedANGLE",null===(f=e.get("ANGLE_instanced_arrays")))return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");f[o](t,i,n,r),c.update(n,t,r)}}}function Ct(a,e,c){var b;function t(e){if("highp"===e){if(a.getShaderPrecisionFormat(35633,36338).precision>0&&a.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";e="mediump"}return"mediump"===e&&a.getShaderPrecisionFormat(35633,36337).precision>0&&a.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}var d="undefined"!=typeof WebGL2RenderingContext&&a instanceof WebGL2RenderingContext,i=void 0!==c.precision?c.precision:"highp",n=t(i);n!==i&&(console.warn("THREE.WebGLRenderer:",i,"not supported, using",n,"instead."),i=n);var r=!0===c.logarithmicDepthBuffer,f=a.getParameter(34930),o=a.getParameter(35660),s=a.getParameter(3379),h=a.getParameter(34076),l=a.getParameter(34921),u=a.getParameter(36347),p=a.getParameter(36348),m=a.getParameter(36349),g=o>0,v=d||!!e.get("OES_texture_float");return{isWebGL2:d,getMaxAnisotropy:function(){if(void 0!==b)return b;var c=e.get("EXT_texture_filter_anisotropic");return b=null!==c?a.getParameter(c.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0},getMaxPrecision:t,precision:i,logarithmicDepthBuffer:r,maxTextures:f,maxVertexTextures:o,maxTextureSize:s,maxCubemapSize:h,maxAttributes:l,maxVertexUniforms:u,maxVaryings:p,maxFragmentUniforms:m,vertexTextures:g,floatFragmentTextures:v,floatVertexTextures:g&&v,maxSamples:d?a.getParameter(36183):0}}function Ot(){var a=this,e=null,c=0,b=!1,t=!1,d=new vt,i=new Be,n={value:null,needsUpdate:!1};function r(){n.value!==e&&(n.value=e,n.needsUpdate=c>0),a.numPlanes=c,a.numIntersection=0}function f(e,c,b,t){var r=null!==e?e.length:0,f=null;if(0!==r){if(f=n.value,!0!==t||null===f){var o=b+4*r,s=c.matrixWorldInverse;i.getNormalMatrix(s),(null===f||f.length<o)&&(f=new Float32Array(o));for(var h=0,l=b;h!==r;++h,l+=4)d.copy(e[h]).applyMatrix4(s,i),d.normal.toArray(f,l),f[l+3]=d.constant}n.value=f,n.needsUpdate=!0}return a.numPlanes=r,f}this.uniform=n,this.numPlanes=0,this.numIntersection=0,this.init=function(a,t,d){var i=0!==a.length||t||0!==c||b;return b=t,e=f(a,d,0),c=a.length,i},this.beginShadows=function(){t=!0,f(null)},this.endShadows=function(){t=!1,r()},this.setState=function(a,d,i,o,s,h){if(!b||null===a||0===a.length||t&&!i)t?f(null):r();else{var l=t?0:c,u=4*l,p=s.clippingState||null;n.value=p,p=f(a,o,u,h);for(var m=0;m!==u;++m)p[m]=e[m];s.clippingState=p,this.numIntersection=d?this.numPlanes:0,this.numPlanes+=l}}}function It(a){var e={};return{get:function(c){if(void 0!==e[c])return e[c];var b;switch(c){case"WEBGL_depth_texture":b=a.getExtension("WEBGL_depth_texture")||a.getExtension("MOZ_WEBGL_depth_texture")||a.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":b=a.getExtension("EXT_texture_filter_anisotropic")||a.getExtension("MOZ_EXT_texture_filter_anisotropic")||a.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":b=a.getExtension("WEBGL_compressed_texture_s3tc")||a.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||a.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":b=a.getExtension("WEBGL_compressed_texture_pvrtc")||a.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:b=a.getExtension(c)}return null===b&&console.warn("THREE.WebGLRenderer: "+c+" extension not supported."),e[c]=b,b}}}function Nt(a,e,c){var b=new WeakMap,t=new WeakMap;function d(a){var i=a.target,n=b.get(i);for(var r in null!==n.index&&e.remove(n.index),n.attributes)e.remove(n.attributes[r]);i.removeEventListener("dispose",d),b.delete(i);var f=t.get(n);f&&(e.remove(f),t.delete(n)),c.memory.geometries--}function i(a){var c=[],b=a.index,d=a.attributes.position,i=0;if(null!==b){var n=b.array;i=b.version;for(var r=0,f=n.length;r<f;r+=3){var o=n[r+0],s=n[r+1],h=n[r+2];c.push(o,s,s,h,h,o)}}else{n=d.array;i=d.version;for(r=0,f=n.length/3-1;r<f;r+=3){o=r+0,s=r+1,h=r+2;c.push(o,s,s,h,h,o)}}var l=new(wb(c)>65535?gb:pb)(c,1);l.version=i,e.update(l,34963);var u=t.get(a);u&&e.remove(u),t.set(a,l)}return{get:function(a,e){var t=b.get(e);return t||(e.addEventListener("dispose",d),e.isBufferGeometry?t=e:e.isGeometry&&(void 0===e._bufferGeometry&&(e._bufferGeometry=(new Rb).setFromObject(a)),t=e._bufferGeometry),b.set(e,t),c.memory.geometries++,t)},update:function(a){var c=a.index,b=a.attributes;for(var t in null!==c&&e.update(c,34963),b)e.update(b[t],34962);var d=a.morphAttributes;for(var t in d)for(var i=d[t],n=0,r=i.length;n<r;n++)e.update(i[n],34962)},getWireframeAttribute:function(a){var e=t.get(a);if(e){var c=a.index;null!==c&&e.version<c.version&&i(a)}else i(a);return t.get(a)}}}function Dt(a,e,c,b){var t,d,i;this.setMode=function(a){t=a},this.setIndex=function(a){d=a.type,i=a.bytesPerElement},this.render=function(e,b){a.drawElements(t,b,d,e*i),c.update(b,t)},this.renderInstances=function(n,r,f,o){if(0!==o){var s,h;if(b.isWebGL2)s=a,h="drawElementsInstanced";else if(h="drawElementsInstancedANGLE",null===(s=e.get("ANGLE_instanced_arrays")))return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");s[h](t,f,d,r*i,o),c.update(f,t,o)}}}function zt(a){var e={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:e,programs:null,autoReset:!0,reset:function(){e.frame++,e.calls=0,e.triangles=0,e.points=0,e.lines=0},update:function(a,c,b){switch(b=b||1,e.calls++,c){case 4:e.triangles+=b*(a/3);break;case 5:case 6:e.triangles+=b*(a-2);break;case 1:e.lines+=b*(a/2);break;case 3:e.lines+=b*(a-1);break;case 2:e.lines+=b*a;break;case 0:e.points+=b*a;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",c)}}}}function Ut(a,e){return Math.abs(e[1])-Math.abs(a[1])}function Bt(a){var e={},c=new Float32Array(8);return{update:function(b,t,d,i){var n=b.morphTargetInfluences,r=n.length,f=e[t.id];if(void 0===f){f=[];for(var o=0;o<r;o++)f[o]=[o,0];e[t.id]=f}var s=d.morphTargets&&t.morphAttributes.position,h=d.morphNormals&&t.morphAttributes.normal;for(o=0;o<r;o++){0!==(l=f[o])[1]&&(s&&t.removeAttribute("morphTarget"+o),h&&t.removeAttribute("morphNormal"+o))}for(o=0;o<r;o++){(l=f[o])[0]=o,l[1]=n[o]}for(f.sort(Ut),o=0;o<8;o++){var l;if(l=f[o]){var u=l[0],p=l[1];if(p){s&&t.addAttribute("morphTarget"+o,s[u]),h&&t.addAttribute("morphNormal"+o,h[u]),c[o]=p;continue}}c[o]=0}i.getUniforms().setValue(a,"morphTargetInfluences",c)}}}function Ft(a,e,c,b){var t={};return{update:function(a){var d=b.render.frame,i=a.geometry,n=e.get(a,i);return t[n.id]!==d&&(i.isGeometry&&n.updateFromObject(a),e.update(n),t[n.id]=d),a.isInstancedMesh&&c.update(a.instanceMatrix,34962),n},dispose:function(){t={}}}}function Gt(a,e,c,b,t,d,i,n,r,f){a=void 0!==a?a:[],e=void 0!==e?e:ba,i=void 0!==i?i:Oa,He.call(this,a,e,c,b,t,d,i,n,r,f),this.flipY=!1}function Ht(a,e,c,b){He.call(this,null),this.image={data:a||null,width:e||1,height:c||1,depth:b||1},this.magFilter=la,this.minFilter=la,this.wrapR=sa,this.generateMipmaps=!1,this.flipY=!1,this.needsUpdate=!0}function Vt(a,e,c,b){He.call(this,null),this.image={data:a||null,width:e||1,height:c||1,depth:b||1},this.magFilter=la,this.minFilter=la,this.wrapR=sa,this.generateMipmaps=!1,this.flipY=!1,this.needsUpdate=!0}St.physical={uniforms:bt([St.standard.uniforms,{transparency:{value:0},clearcoat:{value:0},clearcoatRoughness:{value:0},sheen:{value:new cb(0)},clearcoatNormalScale:{value:new Ce(1,1)},clearcoatNormalMap:{value:null}}]),vertexShader:_t.meshphysical_vert,fragmentShader:_t.meshphysical_frag},At.prototype=Object.create(at.prototype),At.prototype.constructor=At,Lt.prototype=Object.create(Rb.prototype),Lt.prototype.constructor=Lt,Gt.prototype=Object.create(He.prototype),Gt.prototype.constructor=Gt,Gt.prototype.isCubeTexture=!0,Object.defineProperty(Gt.prototype,"images",{get:function(){return this.image},set:function(a){this.image=a}}),Ht.prototype=Object.create(He.prototype),Ht.prototype.constructor=Ht,Ht.prototype.isDataTexture2DArray=!0,Vt.prototype=Object.create(He.prototype),Vt.prototype.constructor=Vt,Vt.prototype.isDataTexture3D=!0;var kt=new He,jt=new Ht,Wt=new Vt,qt=new Gt,Xt=[],Yt=[],Zt=new Float32Array(16),Jt=new Float32Array(9),Kt=new Float32Array(4);function Qt(a,e,c){var b=a[0];if(b<=0||b>0)return a;var t=e*c,d=Xt[t];if(void 0===d&&(d=new Float32Array(t),Xt[t]=d),0!==e){b.toArray(d,0);for(var i=1,n=0;i!==e;++i)n+=c,a[i].toArray(d,n)}return d}function $t(a,e){if(a.length!==e.length)return!1;for(var c=0,b=a.length;c<b;c++)if(a[c]!==e[c])return!1;return!0}function ad(a,e){for(var c=0,b=e.length;c<b;c++)a[c]=e[c]}function ed(a,e){var c=Yt[e];void 0===c&&(c=new Int32Array(e),Yt[e]=c);for(var b=0;b!==e;++b)c[b]=a.allocateTextureUnit();return c}function cd(a,e){var c=this.cache;c[0]!==e&&(a.uniform1f(this.addr,e),c[0]=e)}function bd(a,e){var c=this.cache;if(void 0!==e.x)c[0]===e.x&&c[1]===e.y||(a.uniform2f(this.addr,e.x,e.y),c[0]=e.x,c[1]=e.y);else{if($t(c,e))return;a.uniform2fv(this.addr,e),ad(c,e)}}function td(a,e){var c=this.cache;if(void 0!==e.x)c[0]===e.x&&c[1]===e.y&&c[2]===e.z||(a.uniform3f(this.addr,e.x,e.y,e.z),c[0]=e.x,c[1]=e.y,c[2]=e.z);else if(void 0!==e.r)c[0]===e.r&&c[1]===e.g&&c[2]===e.b||(a.uniform3f(this.addr,e.r,e.g,e.b),c[0]=e.r,c[1]=e.g,c[2]=e.b);else{if($t(c,e))return;a.uniform3fv(this.addr,e),ad(c,e)}}function dd(a,e){var c=this.cache;if(void 0!==e.x)c[0]===e.x&&c[1]===e.y&&c[2]===e.z&&c[3]===e.w||(a.uniform4f(this.addr,e.x,e.y,e.z,e.w),c[0]=e.x,c[1]=e.y,c[2]=e.z,c[3]=e.w);else{if($t(c,e))return;a.uniform4fv(this.addr,e),ad(c,e)}}function id(a,e){var c=this.cache,b=e.elements;if(void 0===b){if($t(c,e))return;a.uniformMatrix2fv(this.addr,!1,e),ad(c,e)}else{if($t(c,b))return;Kt.set(b),a.uniformMatrix2fv(this.addr,!1,Kt),ad(c,b)}}function nd(a,e){var c=this.cache,b=e.elements;if(void 0===b){if($t(c,e))return;a.uniformMatrix3fv(this.addr,!1,e),ad(c,e)}else{if($t(c,b))return;Jt.set(b),a.uniformMatrix3fv(this.addr,!1,Jt),ad(c,b)}}function rd(a,e){var c=this.cache,b=e.elements;if(void 0===b){if($t(c,e))return;a.uniformMatrix4fv(this.addr,!1,e),ad(c,e)}else{if($t(c,b))return;Zt.set(b),a.uniformMatrix4fv(this.addr,!1,Zt),ad(c,b)}}function fd(a,e,c){var b=this.cache,t=c.allocateTextureUnit();b[0]!==t&&(a.uniform1i(this.addr,t),b[0]=t),c.safeSetTexture2D(e||kt,t)}function od(a,e,c){var b=this.cache,t=c.allocateTextureUnit();b[0]!==t&&(a.uniform1i(this.addr,t),b[0]=t),c.setTexture2DArray(e||jt,t)}function sd(a,e,c){var b=this.cache,t=c.allocateTextureUnit();b[0]!==t&&(a.uniform1i(this.addr,t),b[0]=t),c.setTexture3D(e||Wt,t)}function hd(a,e,c){var b=this.cache,t=c.allocateTextureUnit();b[0]!==t&&(a.uniform1i(this.addr,t),b[0]=t),c.safeSetTextureCube(e||qt,t)}function ld(a,e){var c=this.cache;c[0]!==e&&(a.uniform1i(this.addr,e),c[0]=e)}function ud(a,e){var c=this.cache;$t(c,e)||(a.uniform2iv(this.addr,e),ad(c,e))}function pd(a,e){var c=this.cache;$t(c,e)||(a.uniform3iv(this.addr,e),ad(c,e))}function md(a,e){var c=this.cache;$t(c,e)||(a.uniform4iv(this.addr,e),ad(c,e))}function gd(a,e){a.uniform1fv(this.addr,e)}function vd(a,e){a.uniform1iv(this.addr,e)}function yd(a,e){a.uniform2iv(this.addr,e)}function xd(a,e){a.uniform3iv(this.addr,e)}function wd(a,e){a.uniform4iv(this.addr,e)}function _d(a,e){var c=Qt(e,this.size,2);a.uniform2fv(this.addr,c)}function Md(a,e){var c=Qt(e,this.size,3);a.uniform3fv(this.addr,c)}function Sd(a,e){var c=Qt(e,this.size,4);a.uniform4fv(this.addr,c)}function Td(a,e){var c=Qt(e,this.size,4);a.uniformMatrix2fv(this.addr,!1,c)}function Ed(a,e){var c=Qt(e,this.size,9);a.uniformMatrix3fv(this.addr,!1,c)}function Ad(a,e){var c=Qt(e,this.size,16);a.uniformMatrix4fv(this.addr,!1,c)}function Ld(a,e,c){var b=e.length,t=ed(c,b);a.uniform1iv(this.addr,t);for(var d=0;d!==b;++d)c.safeSetTexture2D(e[d]||kt,t[d])}function Rd(a,e,c){var b=e.length,t=ed(c,b);a.uniform1iv(this.addr,t);for(var d=0;d!==b;++d)c.safeSetTextureCube(e[d]||qt,t[d])}function Pd(a,e,c){this.id=a,this.addr=c,this.cache=[],this.setValue=function(a){switch(a){case 5126:return cd;case 35664:return bd;case 35665:return td;case 35666:return dd;case 35674:return id;case 35675:return nd;case 35676:return rd;case 35678:case 36198:return fd;case 35679:return sd;case 35680:return hd;case 36289:return od;case 5124:case 35670:return ld;case 35667:case 35671:return ud;case 35668:case 35672:return pd;case 35669:case 35673:return md}}(e.type)}function Cd(a,e,c){this.id=a,this.addr=c,this.cache=[],this.size=e.size,this.setValue=function(a){switch(a){case 5126:return gd;case 35664:return _d;case 35665:return Md;case 35666:return Sd;case 35674:return Td;case 35675:return Ed;case 35676:return Ad;case 35678:return Ld;case 35680:return Rd;case 5124:case 35670:return vd;case 35667:case 35671:return yd;case 35668:case 35672:return xd;case 35669:case 35673:return wd}}(e.type)}function Od(a){this.id=a,this.seq=[],this.map={}}Cd.prototype.updateCache=function(a){var e=this.cache;a instanceof Float32Array&&e.length!==a.length&&(this.cache=new Float32Array(a.length)),ad(e,a)},Od.prototype.setValue=function(a,e,c){for(var b=this.seq,t=0,d=b.length;t!==d;++t){var i=b[t];i.setValue(a,e[i.id],c)}};var Id=/([\w\d_]+)(\])?(\[|\.)?/g;function Nd(a,e){a.seq.push(e),a.map[e.id]=e}function Dd(a,e,c){var b=a.name,t=b.length;for(Id.lastIndex=0;;){var d=Id.exec(b),i=Id.lastIndex,n=d[1],r="]"===d[2],f=d[3];if(r&&(n|=0),void 0===f||"["===f&&i+2===t){Nd(c,void 0===f?new Pd(n,a,e):new Cd(n,a,e));break}var o=c.map[n];void 0===o&&Nd(c,o=new Od(n)),c=o}}function zd(a,e){this.seq=[],this.map={};for(var c=a.getProgramParameter(e,35718),b=0;b<c;++b){var t=a.getActiveUniform(e,b);Dd(t,a.getUniformLocation(e,t.name),this)}}function Ud(a,e,c){var b=a.createShader(e);return a.shaderSource(b,c),a.compileShader(b),b}zd.prototype.setValue=function(a,e,c,b){var t=this.map[e];void 0!==t&&t.setValue(a,c,b)},zd.prototype.setOptional=function(a,e,c){var b=e[c];void 0!==b&&this.setValue(a,c,b)},zd.upload=function(a,e,c,b){for(var t=0,d=e.length;t!==d;++t){var i=e[t],n=c[i.id];!1!==n.needsUpdate&&i.setValue(a,n.value,b)}},zd.seqWithValue=function(a,e){for(var c=[],b=0,t=a.length;b!==t;++b){var d=a[b];d.id in e&&c.push(d)}return c};var Bd=0;function Fd(a){switch(a){case le:return["Linear","( value )"];case ue:return["sRGB","( value )"];case me:return["RGBE","( value )"];case ve:return["RGBM","( value, 7.0 )"];case ye:return["RGBM","( value, 16.0 )"];case xe:return["RGBD","( value, 256.0 )"];case pe:return["Gamma","( value, float( GAMMA_FACTOR ) )"];case ge:return["LogLuv","( value )"];default:throw new Error("unsupported encoding: "+a)}}function Gd(a,e,c){var b=a.getShaderParameter(e,35713),t=a.getShaderInfoLog(e).trim();return b&&""===t?"":"THREE.WebGLShader: gl.getShaderInfoLog() "+c+"\n"+t+function(a){for(var e=a.split("\n"),c=0;c<e.length;c++)e[c]=c+1+": "+e[c];return e.join("\n")}(a.getShaderSource(e))}function Hd(a,e){var c=Fd(e);return"vec4 "+a+"( vec4 value ) { return "+c[0]+"ToLinear"+c[1]+"; }"}function Vd(a,e){var c;switch(e){case Q:c="Linear";break;case $:c="Reinhard";break;case aa:c="Uncharted2";break;case ea:c="OptimizedCineon";break;case ca:c="ACESFilmic";break;default:throw new Error("unsupported toneMapping: "+e)}return"vec3 "+a+"( vec3 color ) { return "+c+"ToneMapping( color ); }"}function kd(a){return""!==a}function jd(a,e){return a.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function Wd(a,e){return a.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}var qd=/^[ \t]*#include +<([\w\d./]+)>/gm;function Xd(a){return a.replace(qd,Yd)}function Yd(a,e){var c=_t[e];if(void 0===c)throw new Error("Can not resolve #include <"+e+">");return Xd(c)}var Zd=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g;function Jd(a){return a.replace(Zd,Kd)}function Kd(a,e,c,b){for(var t="",d=parseInt(e);d<parseInt(c);d++)t+=b.replace(/\[ i \]/g,"[ "+d+" ]").replace(/UNROLLED_LOOP_INDEX/g,d);return t}function Qd(a){var e="precision "+a.precision+" float;\nprecision "+a.precision+" int;";return"highp"===a.precision?e+="\n#define HIGH_PRECISION":"mediump"===a.precision?e+="\n#define MEDIUM_PRECISION":"lowp"===a.precision&&(e+="\n#define LOW_PRECISION"),e}function $d(a,e,c,b,t,d){var i,n,r,h,l,u=a.getContext(),p=b.defines,m=t.vertexShader,g=t.fragmentShader,v=function(a){var e="SHADOWMAP_TYPE_BASIC";return a.shadowMapType===f?e="SHADOWMAP_TYPE_PCF":a.shadowMapType===o?e="SHADOWMAP_TYPE_PCF_SOFT":a.shadowMapType===s&&(e="SHADOWMAP_TYPE_VSM"),e}(d),y=function(a,e){var c="ENVMAP_TYPE_CUBE";if(a.envMap)switch(e.envMap.mapping){case ba:case ta:c="ENVMAP_TYPE_CUBE";break;case ra:case fa:c="ENVMAP_TYPE_CUBE_UV";break;case da:case ia:c="ENVMAP_TYPE_EQUIREC";break;case na:c="ENVMAP_TYPE_SPHERE"}return c}(d,b),x=function(a,e){var c="ENVMAP_MODE_REFLECTION";if(a.envMap)switch(e.envMap.mapping){case ta:case ia:c="ENVMAP_MODE_REFRACTION"}return c}(d,b),w=function(a,e){var c="ENVMAP_BLENDING_MULTIPLY";if(a.envMap)switch(e.combine){case Y:c="ENVMAP_BLENDING_MULTIPLY";break;case Z:c="ENVMAP_BLENDING_MIX";break;case J:c="ENVMAP_BLENDING_ADD"}return c}(d,b),_=a.gammaFactor>0?a.gammaFactor:1,M=d.isWebGL2?"":function(a,e,c){return[(a=a||{}).derivatives||e.envMapCubeUV||e.bumpMap||e.tangentSpaceNormalMap||e.clearcoatNormalMap||e.flatShading?"#extension GL_OES_standard_derivatives : enable":"",(a.fragDepth||e.logarithmicDepthBuffer)&&c.get("EXT_frag_depth")?"#extension GL_EXT_frag_depth : enable":"",a.drawBuffers&&c.get("WEBGL_draw_buffers")?"#extension GL_EXT_draw_buffers : require":"",(a.shaderTextureLOD||e.envMap)&&c.get("EXT_shader_texture_lod")?"#extension GL_EXT_shader_texture_lod : enable":""].filter(kd).join("\n")}(b.extensions,d,e),S=function(a){var e=[];for(var c in a){var b=a[c];!1!==b&&e.push("#define "+c+" "+b)}return e.join("\n")}(p),T=u.createProgram(),E=a.getRenderTarget(),A=E&&E.isWebGLMultiviewRenderTarget?E.numViews:0;if(b.isRawShaderMaterial?((i=[S].filter(kd).join("\n")).length>0&&(i+="\n"),(n=[M,S].filter(kd).join("\n")).length>0&&(n+="\n")):(i=[Qd(d),"#define SHADER_NAME "+t.name,S,d.instancing?"#define USE_INSTANCING":"",d.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+_,"#define MAX_BONES "+d.maxBones,d.useFog&&d.fog?"#define USE_FOG":"",d.useFog&&d.fogExp2?"#define FOG_EXP2":"",d.map?"#define USE_MAP":"",d.envMap?"#define USE_ENVMAP":"",d.envMap?"#define "+x:"",d.lightMap?"#define USE_LIGHTMAP":"",d.aoMap?"#define USE_AOMAP":"",d.emissiveMap?"#define USE_EMISSIVEMAP":"",d.bumpMap?"#define USE_BUMPMAP":"",d.normalMap?"#define USE_NORMALMAP":"",d.normalMap&&d.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",d.normalMap&&d.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",d.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",d.displacementMap&&d.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",d.specularMap?"#define USE_SPECULARMAP":"",d.roughnessMap?"#define USE_ROUGHNESSMAP":"",d.metalnessMap?"#define USE_METALNESSMAP":"",d.alphaMap?"#define USE_ALPHAMAP":"",d.vertexTangents?"#define USE_TANGENT":"",d.vertexColors?"#define USE_COLOR":"",d.vertexUvs?"#define USE_UV":"",d.flatShading?"#define FLAT_SHADED":"",d.skinning?"#define USE_SKINNING":"",d.useVertexTexture?"#define BONE_TEXTURE":"",d.morphTargets?"#define USE_MORPHTARGETS":"",d.morphNormals&&!1===d.flatShading?"#define USE_MORPHNORMALS":"",d.doubleSided?"#define DOUBLE_SIDED":"",d.flipSided?"#define FLIP_SIDED":"",d.shadowMapEnabled?"#define USE_SHADOWMAP":"",d.shadowMapEnabled?"#define "+v:"",d.sizeAttenuation?"#define USE_SIZEATTENUATION":"",d.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",d.logarithmicDepthBuffer&&(d.isWebGL2||e.get("EXT_frag_depth"))?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","#ifdef USE_INSTANCING"," attribute mat4 instanceMatrix;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#ifdef USE_COLOR","\tattribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(kd).join("\n"),n=[M,Qd(d),"#define SHADER_NAME "+t.name,S,d.alphaTest?"#define ALPHATEST "+d.alphaTest+(d.alphaTest%1?"":".0"):"","#define GAMMA_FACTOR "+_,d.useFog&&d.fog?"#define USE_FOG":"",d.useFog&&d.fogExp2?"#define FOG_EXP2":"",d.map?"#define USE_MAP":"",d.matcap?"#define USE_MATCAP":"",d.envMap?"#define USE_ENVMAP":"",d.envMap?"#define "+y:"",d.envMap?"#define "+x:"",d.envMap?"#define "+w:"",d.lightMap?"#define USE_LIGHTMAP":"",d.aoMap?"#define USE_AOMAP":"",d.emissiveMap?"#define USE_EMISSIVEMAP":"",d.bumpMap?"#define USE_BUMPMAP":"",d.normalMap?"#define USE_NORMALMAP":"",d.normalMap&&d.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",d.normalMap&&d.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",d.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",d.specularMap?"#define USE_SPECULARMAP":"",d.roughnessMap?"#define USE_ROUGHNESSMAP":"",d.metalnessMap?"#define USE_METALNESSMAP":"",d.alphaMap?"#define USE_ALPHAMAP":"",d.sheen?"#define USE_SHEEN":"",d.vertexTangents?"#define USE_TANGENT":"",d.vertexColors?"#define USE_COLOR":"",d.vertexUvs?"#define USE_UV":"",d.gradientMap?"#define USE_GRADIENTMAP":"",d.flatShading?"#define FLAT_SHADED":"",d.doubleSided?"#define DOUBLE_SIDED":"",d.flipSided?"#define FLIP_SIDED":"",d.shadowMapEnabled?"#define USE_SHADOWMAP":"",d.shadowMapEnabled?"#define "+v:"",d.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",d.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",d.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",d.logarithmicDepthBuffer&&(d.isWebGL2||e.get("EXT_frag_depth"))?"#define USE_LOGDEPTHBUF_EXT":"",(b.extensions&&b.extensions.shaderTextureLOD||d.envMap)&&(d.isWebGL2||e.get("EXT_shader_texture_lod"))?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;",d.toneMapping!==K?"#define TONE_MAPPING":"",d.toneMapping!==K?_t.tonemapping_pars_fragment:"",d.toneMapping!==K?Vd("toneMapping",d.toneMapping):"",d.dithering?"#define DITHERING":"",d.outputEncoding||d.mapEncoding||d.matcapEncoding||d.envMapEncoding||d.emissiveMapEncoding?_t.encodings_pars_fragment:"",d.mapEncoding?Hd("mapTexelToLinear",d.mapEncoding):"",d.matcapEncoding?Hd("matcapTexelToLinear",d.matcapEncoding):"",d.envMapEncoding?Hd("envMapTexelToLinear",d.envMapEncoding):"",d.emissiveMapEncoding?Hd("emissiveMapTexelToLinear",d.emissiveMapEncoding):"",d.outputEncoding?(r="linearToOutputTexel",h=d.outputEncoding,l=Fd(h),"vec4 "+r+"( vec4 value ) { return LinearTo"+l[0]+l[1]+"; }"):"",d.depthPacking?"#define DEPTH_PACKING "+b.depthPacking:"","\n"].filter(kd).join("\n")),m=Wd(m=jd(m=Xd(m),d),d),g=Wd(g=jd(g=Xd(g),d),d),m=Jd(m),g=Jd(g),d.isWebGL2&&!b.isRawShaderMaterial){var L=!1,R=/^\s*#version\s+300\s+es\s*\n/;b.isShaderMaterial&&null!==m.match(R)&&null!==g.match(R)&&(L=!0,m=m.replace(R,""),g=g.replace(R,"")),i=["#version 300 es\n","#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+i,n=["#version 300 es\n","#define varying in",L?"":"out highp vec4 pc_fragColor;",L?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+n,A>0&&(i=(i=i.replace("#version 300 es\n",["#version 300 es\n","#extension GL_OVR_multiview2 : require","layout(num_views = "+A+") in;","#define VIEW_ID gl_ViewID_OVR"].join("\n"))).replace(["uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;"].join("\n"),["uniform mat4 modelViewMatrices["+A+"];","uniform mat4 projectionMatrices["+A+"];","uniform mat4 viewMatrices["+A+"];","uniform mat3 normalMatrices["+A+"];","#define modelViewMatrix modelViewMatrices[VIEW_ID]","#define projectionMatrix projectionMatrices[VIEW_ID]","#define viewMatrix viewMatrices[VIEW_ID]","#define normalMatrix normalMatrices[VIEW_ID]"].join("\n")),n=(n=n.replace("#version 300 es\n",["#version 300 es\n","#extension GL_OVR_multiview2 : require","#define VIEW_ID gl_ViewID_OVR"].join("\n"))).replace("uniform mat4 viewMatrix;",["uniform mat4 viewMatrices["+A+"];","#define viewMatrix viewMatrices[VIEW_ID]"].join("\n")))}var P,C,O=n+g,I=Ud(u,35633,i+m),N=Ud(u,35632,O);if(u.attachShader(T,I),u.attachShader(T,N),void 0!==b.index0AttributeName?u.bindAttribLocation(T,0,b.index0AttributeName):!0===d.morphTargets&&u.bindAttribLocation(T,0,"position"),u.linkProgram(T),a.debug.checkShaderErrors){var D=u.getProgramInfoLog(T).trim(),z=u.getShaderInfoLog(I).trim(),U=u.getShaderInfoLog(N).trim(),B=!0,F=!0;if(!1===u.getProgramParameter(T,35714)){B=!1;var G=Gd(u,I,"vertex"),H=Gd(u,N,"fragment");console.error("THREE.WebGLProgram: shader error: ",u.getError(),"35715",u.getProgramParameter(T,35715),"gl.getProgramInfoLog",D,G,H)}else""!==D?console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",D):""!==z&&""!==U||(F=!1);F&&(this.diagnostics={runnable:B,material:b,programLog:D,vertexShader:{log:z,prefix:i},fragmentShader:{log:U,prefix:n}})}return u.deleteShader(I),u.deleteShader(N),this.getUniforms=function(){return void 0===P&&(P=new zd(u,T)),P},this.getAttributes=function(){return void 0===C&&(C=function(a,e){for(var c={},b=a.getProgramParameter(e,35721),t=0;t<b;t++){var d=a.getActiveAttrib(e,t).name;c[d]=a.getAttribLocation(e,d)}return c}(u,T)),C},this.destroy=function(){u.deleteProgram(T),this.program=void 0},this.name=t.name,this.id=Bd++,this.code=c,this.usedTimes=1,this.program=T,this.vertexShader=I,this.fragmentShader=N,this.numMultiviewViews=A,this}function ai(a,e,c){var b=[],t={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"phong",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"},d=["precision","supportsVertexTextures","instancing","map","mapEncoding","matcap","matcapEncoding","envMap","envMapMode","envMapEncoding","lightMap","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","objectSpaceNormalMap","tangentSpaceNormalMap","clearcoatNormalMap","displacementMap","specularMap","roughnessMap","metalnessMap","gradientMap","alphaMap","combine","vertexColors","vertexTangents","fog","useFog","fogExp2","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","maxMorphTargets","maxMorphNormals","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","numRectAreaLights","shadowMapEnabled","shadowMapType","toneMapping","physicallyCorrectLights","alphaTest","doubleSided","flipSided","numClippingPlanes","numClipIntersection","depthPacking","dithering","sheen"];function i(a,e){var c;return a?a.isTexture?c=a.encoding:a.isWebGLRenderTarget&&(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),c=a.texture.encoding):c=le,c===le&&e&&(c=pe),c}this.getParameters=function(e,b,d,n,r,f,o){var s=t[e.type],h=o.isSkinnedMesh?function(a){var e=a.skeleton.bones;if(c.floatVertexTextures)return 1024;var b=c.maxVertexUniforms,t=Math.floor((b-20)/4),d=Math.min(t,e.length);return d<e.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+e.length+" bones. This GPU supports "+d+"."),0):d}(o):0,p=c.precision;null!==e.precision&&(p=c.getMaxPrecision(e.precision))!==e.precision&&console.warn("THREE.WebGLProgram.getParameters:",e.precision,"not supported, using",p,"instead.");var m=a.getRenderTarget();return{isWebGL2:c.isWebGL2,shaderID:s,precision:p,instancing:!0===o.isInstancedMesh,supportsVertexTextures:c.vertexTextures,outputEncoding:i(m?m.texture:null,a.gammaOutput),map:!!e.map,mapEncoding:i(e.map,a.gammaInput),matcap:!!e.matcap,matcapEncoding:i(e.matcap,a.gammaInput),envMap:!!e.envMap,envMapMode:e.envMap&&e.envMap.mapping,envMapEncoding:i(e.envMap,a.gammaInput),envMapCubeUV:!!e.envMap&&(e.envMap.mapping===ra||e.envMap.mapping===fa),lightMap:!!e.lightMap,aoMap:!!e.aoMap,emissiveMap:!!e.emissiveMap,emissiveMapEncoding:i(e.emissiveMap,a.gammaInput),bumpMap:!!e.bumpMap,normalMap:!!e.normalMap,objectSpaceNormalMap:e.normalMapType===Se,tangentSpaceNormalMap:e.normalMapType===Me,clearcoatNormalMap:!!e.clearcoatNormalMap,displacementMap:!!e.displacementMap,roughnessMap:!!e.roughnessMap,metalnessMap:!!e.metalnessMap,specularMap:!!e.specularMap,alphaMap:!!e.alphaMap,gradientMap:!!e.gradientMap,sheen:!!e.sheen,combine:e.combine,vertexTangents:e.normalMap&&e.vertexTangents,vertexColors:e.vertexColors,vertexUvs:!!(e.map||e.bumpMap||e.normalMap||e.specularMap||e.alphaMap||e.emissiveMap||e.roughnessMap||e.metalnessMap||e.clearcoatNormalMap),fog:!!n,useFog:e.fog,fogExp2:n&&n.isFogExp2,flatShading:e.flatShading,sizeAttenuation:e.sizeAttenuation,logarithmicDepthBuffer:c.logarithmicDepthBuffer,skinning:e.skinning&&h>0,maxBones:h,useVertexTexture:c.floatVertexTextures,morphTargets:e.morphTargets,morphNormals:e.morphNormals,maxMorphTargets:a.maxMorphTargets,maxMorphNormals:a.maxMorphNormals,numDirLights:b.directional.length,numPointLights:b.point.length,numSpotLights:b.spot.length,numRectAreaLights:b.rectArea.length,numHemiLights:b.hemi.length,numDirLightShadows:b.directionalShadowMap.length,numPointLightShadows:b.pointShadowMap.length,numSpotLightShadows:b.spotShadowMap.length,numClippingPlanes:r,numClipIntersection:f,dithering:e.dithering,shadowMapEnabled:a.shadowMap.enabled&&d.length>0,shadowMapType:a.shadowMap.type,toneMapping:e.toneMapped?a.toneMapping:K,physicallyCorrectLights:a.physicallyCorrectLights,premultipliedAlpha:e.premultipliedAlpha,alphaTest:e.alphaTest,doubleSided:e.side===u,flipSided:e.side===l,depthPacking:void 0!==e.depthPacking&&e.depthPacking}},this.getProgramCode=function(e,c){var b=[];if(c.shaderID?b.push(c.shaderID):(b.push(e.fragmentShader),b.push(e.vertexShader)),void 0!==e.defines)for(var t in e.defines)b.push(t),b.push(e.defines[t]);for(var i=0;i<d.length;i++)b.push(c[d[i]]);return b.push(e.onBeforeCompile.toString()),b.push(a.gammaOutput),b.push(a.gammaFactor),b.join()},this.acquireProgram=function(c,t,d,i){for(var n,r=0,f=b.length;r<f;r++){var o=b[r];if(o.code===i){++(n=o).usedTimes;break}}return void 0===n&&(n=new $d(a,e,i,c,t,d),b.push(n)),n},this.releaseProgram=function(a){if(0==--a.usedTimes){var e=b.indexOf(a);b[e]=b[b.length-1],b.pop(),a.destroy()}},this.programs=b}function ei(){var a=new WeakMap;return{get:function(e){var c=a.get(e);return void 0===c&&(c={},a.set(e,c)),c},remove:function(e){a.delete(e)},update:function(e,c,b){a.get(e)[c]=b},dispose:function(){a=new WeakMap}}}function ci(a,e){return a.groupOrder!==e.groupOrder?a.groupOrder-e.groupOrder:a.renderOrder!==e.renderOrder?a.renderOrder-e.renderOrder:a.program!==e.program?a.program.id-e.program.id:a.material.id!==e.material.id?a.material.id-e.material.id:a.z!==e.z?a.z-e.z:a.id-e.id}function bi(a,e){return a.groupOrder!==e.groupOrder?a.groupOrder-e.groupOrder:a.renderOrder!==e.renderOrder?a.renderOrder-e.renderOrder:a.z!==e.z?e.z-a.z:a.id-e.id}function ti(){var a=[],e=0,c=[],b=[],t={id:-1};function d(c,b,d,i,n,r){var f=a[e];return void 0===f?(f={id:c.id,object:c,geometry:b,material:d,program:d.program||t,groupOrder:i,renderOrder:c.renderOrder,z:n,group:r},a[e]=f):(f.id=c.id,f.object=c,f.geometry=b,f.material=d,f.program=d.program||t,f.groupOrder=i,f.renderOrder=c.renderOrder,f.z=n,f.group=r),e++,f}return{opaque:c,transparent:b,init:function(){e=0,c.length=0,b.length=0},push:function(a,e,t,i,n,r){var f=d(a,e,t,i,n,r);(!0===t.transparent?b:c).push(f)},unshift:function(a,e,t,i,n,r){var f=d(a,e,t,i,n,r);(!0===t.transparent?b:c).unshift(f)},sort:function(){c.length>1&&c.sort(ci),b.length>1&&b.sort(bi)}}}function di(){var a=new WeakMap;function e(c){var b=c.target;b.removeEventListener("dispose",e),a.delete(b)}return{get:function(c,b){var t,d=a.get(c);return void 0===d?(t=new ti,a.set(c,new WeakMap),a.get(c).set(b,t),c.addEventListener("dispose",e)):void 0===(t=d.get(b))&&(t=new ti,d.set(b,t)),t},dispose:function(){a=new WeakMap}}}function ii(){var a={};return{get:function(e){if(void 0!==a[e.id])return a[e.id];var c;switch(e.type){case"DirectionalLight":c={direction:new De,color:new cb,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new Ce};break;case"SpotLight":c={position:new De,direction:new De,color:new cb,distance:0,coneCos:0,penumbraCos:0,decay:0,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new Ce};break;case"PointLight":c={position:new De,color:new cb,distance:0,decay:0,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new Ce,shadowCameraNear:1,shadowCameraFar:1e3};break;case"HemisphereLight":c={direction:new De,skyColor:new cb,groundColor:new cb};break;case"RectAreaLight":c={color:new cb,position:new De,halfWidth:new De,halfHeight:new De}}return a[e.id]=c,c}}}var ni=0;function ri(a,e){return(e.castShadow?1:0)-(a.castShadow?1:0)}function fi(){for(var a=new ii,e={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],point:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},c=0;c<9;c++)e.probe.push(new De);var b=new De,t=new Qe,d=new Qe;return{setup:function(c,i,n){for(var r=0,f=0,o=0,s=0;s<9;s++)e.probe[s].set(0,0,0);var h=0,l=0,u=0,p=0,m=0,g=0,v=0,y=0,x=n.matrixWorldInverse;c.sort(ri),s=0;for(var w=c.length;s<w;s++){var _=c[s],M=_.color,S=_.intensity,T=_.distance,E=_.shadow&&_.shadow.map?_.shadow.map.texture:null;if(_.isAmbientLight)r+=M.r*S,f+=M.g*S,o+=M.b*S;else if(_.isLightProbe)for(var A=0;A<9;A++)e.probe[A].addScaledVector(_.sh.coefficients[A],S);else if(_.isDirectionalLight){if((R=a.get(_)).color.copy(_.color).multiplyScalar(_.intensity),R.direction.setFromMatrixPosition(_.matrixWorld),b.setFromMatrixPosition(_.target.matrixWorld),R.direction.sub(b),R.direction.transformDirection(x),R.shadow=_.castShadow,_.castShadow){var L=_.shadow;R.shadowBias=L.bias,R.shadowRadius=L.radius,R.shadowMapSize=L.mapSize,e.directionalShadowMap[h]=E,e.directionalShadowMatrix[h]=_.shadow.matrix,g++}e.directional[h]=R,h++}else if(_.isSpotLight){if((R=a.get(_)).position.setFromMatrixPosition(_.matrixWorld),R.position.applyMatrix4(x),R.color.copy(M).multiplyScalar(S),R.distance=T,R.direction.setFromMatrixPosition(_.matrixWorld),b.setFromMatrixPosition(_.target.matrixWorld),R.direction.sub(b),R.direction.transformDirection(x),R.coneCos=Math.cos(_.angle),R.penumbraCos=Math.cos(_.angle*(1-_.penumbra)),R.decay=_.decay,R.shadow=_.castShadow,_.castShadow){L=_.shadow;R.shadowBias=L.bias,R.shadowRadius=L.radius,R.shadowMapSize=L.mapSize,e.spotShadowMap[u]=E,e.spotShadowMatrix[u]=_.shadow.matrix,y++}e.spot[u]=R,u++}else if(_.isRectAreaLight){(R=a.get(_)).color.copy(M).multiplyScalar(S),R.position.setFromMatrixPosition(_.matrixWorld),R.position.applyMatrix4(x),d.identity(),t.copy(_.matrixWorld),t.premultiply(x),d.extractRotation(t),R.halfWidth.set(.5*_.width,0,0),R.halfHeight.set(0,.5*_.height,0),R.halfWidth.applyMatrix4(d),R.halfHeight.applyMatrix4(d),e.rectArea[p]=R,p++}else if(_.isPointLight){if((R=a.get(_)).position.setFromMatrixPosition(_.matrixWorld),R.position.applyMatrix4(x),R.color.copy(_.color).multiplyScalar(_.intensity),R.distance=_.distance,R.decay=_.decay,R.shadow=_.castShadow,_.castShadow){L=_.shadow;R.shadowBias=L.bias,R.shadowRadius=L.radius,R.shadowMapSize=L.mapSize,R.shadowCameraNear=L.camera.near,R.shadowCameraFar=L.camera.far,e.pointShadowMap[l]=E,e.pointShadowMatrix[l]=_.shadow.matrix,v++}e.point[l]=R,l++}else if(_.isHemisphereLight){var R;(R=a.get(_)).direction.setFromMatrixPosition(_.matrixWorld),R.direction.transformDirection(x),R.direction.normalize(),R.skyColor.copy(_.color).multiplyScalar(S),R.groundColor.copy(_.groundColor).multiplyScalar(S),e.hemi[m]=R,m++}}e.ambient[0]=r,e.ambient[1]=f,e.ambient[2]=o;var P=e.hash;P.directionalLength===h&&P.pointLength===l&&P.spotLength===u&&P.rectAreaLength===p&&P.hemiLength===m&&P.numDirectionalShadows===g&&P.numPointShadows===v&&P.numSpotShadows===y||(e.directional.length=h,e.spot.length=u,e.rectArea.length=p,e.point.length=l,e.hemi.length=m,e.directionalShadowMap.length=g,e.pointShadowMap.length=v,e.spotShadowMap.length=y,e.directionalShadowMatrix.length=g,e.pointShadowMatrix.length=v,e.spotShadowMatrix.length=y,P.directionalLength=h,P.pointLength=l,P.spotLength=u,P.rectAreaLength=p,P.hemiLength=m,P.numDirectionalShadows=g,P.numPointShadows=v,P.numSpotShadows=y,e.version=ni++)},state:e}}function oi(){var a=new fi,e=[],c=[];return{init:function(){e.length=0,c.length=0},state:{lightsArray:e,shadowsArray:c,lights:a},setupLights:function(b){a.setup(e,c,b)},pushLight:function(a){e.push(a)},pushShadow:function(a){c.push(a)}}}function si(){var a=new WeakMap;function e(c){var b=c.target;b.removeEventListener("dispose",e),a.delete(b)}return{get:function(c,b){var t;return!1===a.has(c)?(t=new oi,a.set(c,new WeakMap),a.get(c).set(b,t),c.addEventListener("dispose",e)):!1===a.get(c).has(b)?(t=new oi,a.get(c).set(b,t)):t=a.get(c).get(b),t},dispose:function(){a=new WeakMap}}}function hi(a){rb.call(this),this.type="MeshDepthMaterial",this.depthPacking=we,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.setValues(a)}function li(a){rb.call(this),this.type="MeshDistanceMaterial",this.referencePosition=new De,this.nearDistance=1,this.farDistance=1e3,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.setValues(a)}hi.prototype=Object.create(rb.prototype),hi.prototype.constructor=hi,hi.prototype.isMeshDepthMaterial=!0,hi.prototype.copy=function(a){return rb.prototype.copy.call(this,a),this.depthPacking=a.depthPacking,this.skinning=a.skinning,this.morphTargets=a.morphTargets,this.map=a.map,this.alphaMap=a.alphaMap,this.displacementMap=a.displacementMap,this.displacementScale=a.displacementScale,this.displacementBias=a.displacementBias,this.wireframe=a.wireframe,this.wireframeLinewidth=a.wireframeLinewidth,this},li.prototype=Object.create(rb.prototype),li.prototype.constructor=li,li.prototype.isMeshDistanceMaterial=!0,li.prototype.copy=function(a){return rb.prototype.copy.call(this,a),this.referencePosition.copy(a.referencePosition),this.nearDistance=a.nearDistance,this.farDistance=a.farDistance,this.skinning=a.skinning,this.morphTargets=a.morphTargets,this.map=a.map,this.alphaMap=a.alphaMap,this.displacementMap=a.displacementMap,this.displacementScale=a.displacementScale,this.displacementBias=a.displacementBias,this};var ui="uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n  float mean = 0.0;\n  float squared_mean = 0.0;\n  \n\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy  ) / resolution ) );\n  for ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {\n    #ifdef HORIZONAL_PASS\n      vec2 distribution = decodeHalfRGBA ( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );\n      mean += distribution.x;\n      squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n    #else\n      float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0,  i )  * radius ) / resolution ) );\n      mean += depth;\n      squared_mean += depth * depth;\n    #endif\n  }\n  mean = mean * HALF_SAMPLE_RATE;\n  squared_mean = squared_mean * HALF_SAMPLE_RATE;\n  float std_dev = pow( squared_mean - mean * mean, 0.5 );\n  gl_FragColor = encodeHalfRGBA( vec2( mean, std_dev ) );\n}",pi="void main() {\n\tgl_Position = vec4( position, 1.0 );\n}";function mi(a,e,c){var b=new wt,t=new Ce,d=new Ce,i=new Ve,n=1,r=2,o=1+(n|r),p=new Array(o),m=new Array(o),g={},y={0:l,1:h,2:u},x=new nt({defines:{SAMPLE_RATE:.25,HALF_SAMPLE_RATE:1/8},uniforms:{shadow_pass:{value:null},resolution:{value:new Ce},radius:{value:4}},vertexShader:pi,fragmentShader:ui}),w=x.clone();w.defines.HORIZONAL_PASS=1;var _=new Rb;_.addAttribute("position",new ob(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));for(var M=new Xb(_,x),S=0;S!==o;++S){var T=0!=(S&n),E=0!=(S&r),A=new hi({depthPacking:_e,morphTargets:T,skinning:E});p[S]=A;var L=new li({morphTargets:T,skinning:E});m[S]=L}var R=this;function P(c,b){var t=e.update(M);x.uniforms.shadow_pass.value=c.map.texture,x.uniforms.resolution.value=c.mapSize,x.uniforms.radius.value=c.radius,a.setRenderTarget(c.mapPass),a.clear(),a.renderBufferDirect(b,null,t,x,M,null),w.uniforms.shadow_pass.value=c.mapPass.texture,w.uniforms.resolution.value=c.mapSize,w.uniforms.radius.value=c.radius,a.setRenderTarget(c.map),a.clear(),a.renderBufferDirect(b,null,t,w,M,null)}function C(e,c,b,t,d,i){var f=e.geometry,o=null,h=p,l=e.customDepthMaterial;if(b.isPointLight&&(h=m,l=e.customDistanceMaterial),l)o=l;else{var u=!1;c.morphTargets&&(f&&f.isBufferGeometry?u=f.morphAttributes&&f.morphAttributes.position&&f.morphAttributes.position.length>0:f&&f.isGeometry&&(u=f.morphTargets&&f.morphTargets.length>0)),e.isSkinnedMesh&&!1===c.skinning&&console.warn("THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:",e);var v=e.isSkinnedMesh&&c.skinning,x=0;u&&(x|=n),v&&(x|=r),o=h[x]}if(a.localClippingEnabled&&!0===c.clipShadows&&0!==c.clippingPlanes.length){var w=o.uuid,_=c.uuid,M=g[w];void 0===M&&(M={},g[w]=M);var S=M[_];void 0===S&&(S=o.clone(),M[_]=S),o=S}return o.visible=c.visible,o.wireframe=c.wireframe,o.side=i===s?null!=c.shadowSide?c.shadowSide:c.side:null!=c.shadowSide?c.shadowSide:y[c.side],o.clipShadows=c.clipShadows,o.clippingPlanes=c.clippingPlanes,o.clipIntersection=c.clipIntersection,o.wireframeLinewidth=c.wireframeLinewidth,o.linewidth=c.linewidth,b.isPointLight&&o.isMeshDistanceMaterial&&(o.referencePosition.setFromMatrixPosition(b.matrixWorld),o.nearDistance=t,o.farDistance=d),o}function O(c,t,d,i,n){if(!1!==c.visible){if(c.layers.test(t.layers)&&(c.isMesh||c.isLine||c.isPoints)&&(c.castShadow||c.receiveShadow&&n===s)&&(!c.frustumCulled||b.intersectsObject(c))){c.modelViewMatrix.multiplyMatrices(d.matrixWorldInverse,c.matrixWorld);var r=e.update(c),f=c.material;if(Array.isArray(f))for(var o=r.groups,h=0,l=o.length;h<l;h++){var u=o[h],p=f[u.materialIndex];if(p&&p.visible){var m=C(c,p,i,d.near,d.far,n);a.renderBufferDirect(d,null,r,m,c,u)}}else if(f.visible){m=C(c,f,i,d.near,d.far,n);a.renderBufferDirect(d,null,r,m,c,null)}}for(var g=c.children,v=0,y=g.length;v<y;v++)O(g[v],t,d,i,n)}}this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=f,this.render=function(e,n,r){if(!1!==R.enabled&&(!1!==R.autoUpdate||!1!==R.needsUpdate)&&0!==e.length){var f=a.getRenderTarget(),o=a.getActiveCubeFace(),h=a.getActiveMipmapLevel(),l=a.state;l.setBlending(v),l.buffers.color.setClear(1,1,1,1),l.buffers.depth.setTest(!0),l.setScissorTest(!1);for(var u=0,p=e.length;u<p;u++){var m=e[u],g=m.shadow;if(void 0!==g){t.copy(g.mapSize);var y=g.getFrameExtents();if(t.multiply(y),d.copy(g.mapSize),(t.x>c||t.y>c)&&(console.warn("THREE.WebGLShadowMap:",m,"has shadow exceeding max texture size, reducing"),t.x>c&&(d.x=Math.floor(c/y.x),t.x=d.x*y.x,g.mapSize.x=d.x),t.y>c&&(d.y=Math.floor(c/y.y),t.y=d.y*y.y,g.mapSize.y=d.y)),null===g.map&&!g.isPointLightShadow&&this.type===s){var x={minFilter:ma,magFilter:ma,format:Ia};g.map=new ke(t.x,t.y,x),g.map.texture.name=m.name+".shadowMap",g.mapPass=new ke(t.x,t.y,x),g.camera.updateProjectionMatrix()}if(null===g.map){x={minFilter:la,magFilter:la,format:Ia};g.map=new ke(t.x,t.y,x),g.map.texture.name=m.name+".shadowMap",g.camera.updateProjectionMatrix()}a.setRenderTarget(g.map),a.clear();for(var w=g.getViewportCount(),_=0;_<w;_++){var M=g.getViewport(_);i.set(d.x*M.x,d.y*M.y,d.x*M.z,d.y*M.w),l.viewport(i),g.updateMatrices(m,r,_),b=g.getFrustum(),O(n,r,g.camera,m,this.type)}g.isPointLightShadow||this.type!==s||P(g,r)}else console.warn("THREE.WebGLShadowMap:",m,"has no shadow.")}R.needsUpdate=!1,a.setRenderTarget(f,o,h)}}}function gi(a,e,c,b){var t=new function(){var e=!1,c=new Ve,b=null,t=new Ve(0,0,0,0);return{setMask:function(c){b===c||e||(a.colorMask(c,c,c,c),b=c)},setLocked:function(a){e=a},setClear:function(e,b,d,i,n){!0===n&&(e*=i,b*=i,d*=i),c.set(e,b,d,i),!1===t.equals(c)&&(a.clearColor(e,b,d,i),t.copy(c))},reset:function(){e=!1,b=null,t.set(-1,0,0,0)}}},d=new function(){var e=!1,c=null,b=null,t=null;return{setTest:function(a){a?da(2929):ia(2929)},setMask:function(b){c===b||e||(a.depthMask(b),c=b)},setFunc:function(e){if(b!==e){if(e)switch(e){case G:a.depthFunc(512);break;case H:a.depthFunc(519);break;case V:a.depthFunc(513);break;case k:a.depthFunc(515);break;case j:a.depthFunc(514);break;case W:a.depthFunc(518);break;case q:a.depthFunc(516);break;case X:a.depthFunc(517);break;default:a.depthFunc(515)}else a.depthFunc(515);b=e}},setLocked:function(a){e=a},setClear:function(e){t!==e&&(a.clearDepth(e),t=e)},reset:function(){e=!1,c=null,b=null,t=null}}},f=new function(){var e=!1,c=null,b=null,t=null,d=null,i=null,n=null,r=null,f=null;return{setTest:function(a){e||(a?da(2960):ia(2960))},setMask:function(b){c===b||e||(a.stencilMask(b),c=b)},setFunc:function(e,c,i){b===e&&t===c&&d===i||(a.stencilFunc(e,c,i),b=e,t=c,d=i)},setOp:function(e,c,b){i===e&&n===c&&r===b||(a.stencilOp(e,c,b),i=e,n=c,r=b)},setLocked:function(a){e=a},setClear:function(e){f!==e&&(a.clearStencil(e),f=e)},reset:function(){e=!1,c=null,b=null,t=null,d=null,i=null,n=null,r=null,f=null}}},o=a.getParameter(34921),s=new Uint8Array(o),h=new Uint8Array(o),p=new Uint8Array(o),m={},g=null,T=null,E=null,A=null,L=null,R=null,P=null,C=null,O=null,I=null,N=!1,D=null,z=null,U=null,B=null,F=null,Y=a.getParameter(35661),Z=!1,J=0,K=a.getParameter(7938);-1!==K.indexOf("WebGL")?(J=parseFloat(/^WebGL\ ([0-9])/.exec(K)[1]),Z=J>=1):-1!==K.indexOf("OpenGL ES")&&(J=parseFloat(/^OpenGL\ ES\ ([0-9])/.exec(K)[1]),Z=J>=2);var Q=null,$={},aa=new Ve,ea=new Ve;function ca(e,c,b){var t=new Uint8Array(4),d=a.createTexture();a.bindTexture(e,d),a.texParameteri(e,10241,9728),a.texParameteri(e,10240,9728);for(var i=0;i<b;i++)a.texImage2D(c+i,0,6408,1,1,0,6408,5121,t);return d}var ba={};function ta(c,t){(s[c]=1,0===h[c]&&(a.enableVertexAttribArray(c),h[c]=1),p[c]!==t)&&((b.isWebGL2?a:e.get("ANGLE_instanced_arrays"))[b.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](c,t),p[c]=t)}function da(e){!0!==m[e]&&(a.enable(e),m[e]=!0)}function ia(e){!1!==m[e]&&(a.disable(e),m[e]=!1)}function na(e,b,t,d,i,n,r,f){if(e!==v){if(E||(da(3042),E=!0),e===M)i=i||b,n=n||t,r=r||d,b===L&&i===C||(a.blendEquationSeparate(c.convert(b),c.convert(i)),L=b,C=i),t===R&&d===P&&n===O&&r===I||(a.blendFuncSeparate(c.convert(t),c.convert(d),c.convert(n),c.convert(r)),R=t,P=d,O=n,I=r),A=e,N=null;else if(e!==A||f!==N){if(L===S&&C===S||(a.blendEquation(32774),L=S,C=S),f)switch(e){case y:a.blendFuncSeparate(1,771,1,771);break;case x:a.blendFunc(1,1);break;case w:a.blendFuncSeparate(0,0,769,771);break;case _:a.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",e)}else switch(e){case y:a.blendFuncSeparate(770,771,1,771);break;case x:a.blendFunc(770,1);break;case w:a.blendFunc(0,769);break;case _:a.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",e)}R=null,P=null,O=null,I=null,A=e,N=f}}else E&&(ia(3042),E=!1)}function ra(e){D!==e&&(e?a.frontFace(2304):a.frontFace(2305),D=e)}function fa(e){e!==i?(da(2884),e!==z&&(e===n?a.cullFace(1029):e===r?a.cullFace(1028):a.cullFace(1032))):ia(2884),z=e}function oa(e,c,b){e?(da(32823),B===c&&F===b||(a.polygonOffset(c,b),B=c,F=b)):ia(32823)}function sa(e){void 0===e&&(e=33984+Y-1),Q!==e&&(a.activeTexture(e),Q=e)}return ba[3553]=ca(3553,3553,1),ba[34067]=ca(34067,34069,6),t.setClear(0,0,0,1),d.setClear(1),f.setClear(0),da(2929),d.setFunc(k),ra(!1),fa(n),da(2884),na(v),{buffers:{color:t,depth:d,stencil:f},initAttributes:function(){for(var a=0,e=s.length;a<e;a++)s[a]=0},enableAttribute:function(a){ta(a,0)},enableAttributeAndDivisor:ta,disableUnusedAttributes:function(){for(var e=0,c=h.length;e!==c;++e)h[e]!==s[e]&&(a.disableVertexAttribArray(e),h[e]=0)},enable:da,disable:ia,getCompressedTextureFormats:function(){if(null===g&&(g=[],e.get("WEBGL_compressed_texture_pvrtc")||e.get("WEBGL_compressed_texture_s3tc")||e.get("WEBGL_compressed_texture_etc1")||e.get("WEBGL_compressed_texture_astc")))for(var c=a.getParameter(34467),b=0;b<c.length;b++)g.push(c[b]);return g},useProgram:function(e){return T!==e&&(a.useProgram(e),T=e,!0)},setBlending:na,setMaterial:function(a,e){a.side===u?ia(2884):da(2884);var c=a.side===l;e&&(c=!c),ra(c),a.blending===y&&!1===a.transparent?na(v):na(a.blending,a.blendEquation,a.blendSrc,a.blendDst,a.blendEquationAlpha,a.blendSrcAlpha,a.blendDstAlpha,a.premultipliedAlpha),d.setFunc(a.depthFunc),d.setTest(a.depthTest),d.setMask(a.depthWrite),t.setMask(a.colorWrite);var b=a.stencilWrite;f.setTest(b),b&&(f.setMask(a.stencilWriteMask),f.setFunc(a.stencilFunc,a.stencilRef,a.stencilFuncMask),f.setOp(a.stencilFail,a.stencilZFail,a.stencilZPass)),oa(a.polygonOffset,a.polygonOffsetFactor,a.polygonOffsetUnits)},setFlipSided:ra,setCullFace:fa,setLineWidth:function(e){e!==U&&(Z&&a.lineWidth(e),U=e)},setPolygonOffset:oa,setScissorTest:function(a){a?da(3089):ia(3089)},activeTexture:sa,bindTexture:function(e,c){null===Q&&sa();var b=$[Q];void 0===b&&(b={type:void 0,texture:void 0},$[Q]=b),b.type===e&&b.texture===c||(a.bindTexture(e,c||ba[e]),b.type=e,b.texture=c)},compressedTexImage2D:function(){try{a.compressedTexImage2D.apply(a,arguments)}catch(a){console.error("THREE.WebGLState:",a)}},texImage2D:function(){try{a.texImage2D.apply(a,arguments)}catch(a){console.error("THREE.WebGLState:",a)}},texImage3D:function(){try{a.texImage3D.apply(a,arguments)}catch(a){console.error("THREE.WebGLState:",a)}},scissor:function(e){!1===aa.equals(e)&&(a.scissor(e.x,e.y,e.z,e.w),aa.copy(e))},viewport:function(e){!1===ea.equals(e)&&(a.viewport(e.x,e.y,e.z,e.w),ea.copy(e))},reset:function(){for(var e=0;e<h.length;e++)1===h[e]&&(a.disableVertexAttribArray(e),h[e]=0);m={},g=null,Q=null,$={},T=null,A=null,D=null,z=null,t.reset(),d.reset(),f.reset()}}}function vi(a,e,c,b,t,d,i){var n,r=new WeakMap,f="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d");function o(a,e){return f?new OffscreenCanvas(a,e):document.createElementNS("http://www.w3.org/1999/xhtml","canvas")}function s(a,e,c,b){var t=1;if((a.width>b||a.height>b)&&(t=b/Math.max(a.width,a.height)),t<1||!0===e){if("undefined"!=typeof HTMLImageElement&&a instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&a instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&a instanceof ImageBitmap){var d=e?Pe.floorPowerOfTwo:Math.floor,i=d(t*a.width),r=d(t*a.height);void 0===n&&(n=o(i,r));var f=c?o(i,r):n;return f.width=i,f.height=r,f.getContext("2d").drawImage(a,0,0,i,r),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+a.width+"x"+a.height+") to ("+i+"x"+r+")."),f}return"data"in a&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+a.width+"x"+a.height+")."),a}return a}function h(a){return Pe.isPowerOfTwo(a.width)&&Pe.isPowerOfTwo(a.height)}function l(a,e){return a.generateMipmaps&&e&&a.minFilter!==la&&a.minFilter!==ma}function u(e,c,t,d){a.generateMipmap(e),b.get(c).__maxMipLevel=Math.log(Math.max(t,d))*Math.LOG2E}function p(a,c){if(!t.isWebGL2)return a;var b=a;return 6403===a&&(5126===c&&(b=33326),5131===c&&(b=33325),5121===c&&(b=33321)),6407===a&&(5126===c&&(b=34837),5131===c&&(b=34843),5121===c&&(b=32849)),6408===a&&(5126===c&&(b=34836),5131===c&&(b=34842),5121===c&&(b=32856)),33325===b||33326===b||34842===b||34836===b?e.get("EXT_color_buffer_float"):34843!==b&&34837!==b||console.warn("THREE.WebGLRenderer: Floating point textures with RGB format not supported. Please use RGBA instead."),b}function m(a){return a===la||a===ua||a===pa?9728:9729}function g(e){var c=e.target;c.removeEventListener("dispose",g),function(e){var c=b.get(e);if(void 0===c.__webglInit)return;a.deleteTexture(c.__webglTexture),b.remove(e)}(c),c.isVideoTexture&&r.delete(c),i.memory.textures--}function v(e){var c=e.target;c.removeEventListener("dispose",v),function(e){var c=b.get(e),t=b.get(e.texture);if(!e)return;void 0!==t.__webglTexture&&a.deleteTexture(t.__webglTexture);e.depthTexture&&e.depthTexture.dispose();if(e.isWebGLRenderTargetCube)for(var d=0;d<6;d++)a.deleteFramebuffer(c.__webglFramebuffer[d]),c.__webglDepthbuffer&&a.deleteRenderbuffer(c.__webglDepthbuffer[d]);else a.deleteFramebuffer(c.__webglFramebuffer),c.__webglDepthbuffer&&a.deleteRenderbuffer(c.__webglDepthbuffer);if(e.isWebGLMultiviewRenderTarget){a.deleteTexture(c.__webglColorTexture),a.deleteTexture(c.__webglDepthStencilTexture),i.memory.textures-=2;d=0;for(var n=c.__webglViewFramebuffers.length;d<n;d++)a.deleteFramebuffer(c.__webglViewFramebuffers[d])}b.remove(e.texture),b.remove(e)}(c),i.memory.textures--}var y=0;function x(a,e){var t=b.get(a);if(a.isVideoTexture&&function(a){var e=i.render.frame;r.get(a)!==e&&(r.set(a,e),a.update())}(a),a.version>0&&t.__version!==a.version){var d=a.image;if(void 0===d)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");else{if(!1!==d.complete)return void T(t,a,e);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}}c.activeTexture(33984+e),c.bindTexture(3553,t.__webglTexture)}function w(e,i){if(6===e.image.length){var n=b.get(e);if(e.version>0&&n.__version!==e.version){S(n,e),c.activeTexture(33984+i),c.bindTexture(34067,n.__webglTexture),a.pixelStorei(37440,e.flipY);for(var r=e&&e.isCompressedTexture,f=e.image[0]&&e.image[0].isDataTexture,o=[],m=0;m<6;m++)o[m]=r||f?f?e.image[m].image:e.image[m]:s(e.image[m],!1,!0,t.maxCubemapSize);var g,v=o[0],y=h(v)||t.isWebGL2,x=d.convert(e.format),w=d.convert(e.type),_=p(x,w);if(M(34067,e,y),r){for(m=0;m<6;m++){g=o[m].mipmaps;for(var T=0;T<g.length;T++){var E=g[T];e.format!==Ia&&e.format!==Oa?c.getCompressedTextureFormats().indexOf(x)>-1?c.compressedTexImage2D(34069+m,T,_,E.width,E.height,0,E.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):c.texImage2D(34069+m,T,_,E.width,E.height,0,x,w,E.data)}}n.__maxMipLevel=g.length-1}else{g=e.mipmaps;for(m=0;m<6;m++)if(f){c.texImage2D(34069+m,0,_,o[m].width,o[m].height,0,x,w,o[m].data);for(T=0;T<g.length;T++){var A=(E=g[T]).image[m].image;c.texImage2D(34069+m,T+1,_,A.width,A.height,0,x,w,A.data)}}else{c.texImage2D(34069+m,0,_,x,w,o[m]);for(T=0;T<g.length;T++){E=g[T];c.texImage2D(34069+m,T+1,_,x,w,E.image[m])}}n.__maxMipLevel=g.length}l(e,y)&&u(34067,e,v.width,v.height),n.__version=e.version,e.onUpdate&&e.onUpdate(e)}else c.activeTexture(33984+i),c.bindTexture(34067,n.__webglTexture)}}function _(a,e){c.activeTexture(33984+e),c.bindTexture(34067,b.get(a).__webglTexture)}function M(c,i,n){var r;if(n?(a.texParameteri(c,10242,d.convert(i.wrapS)),a.texParameteri(c,10243,d.convert(i.wrapT)),32879!==c&&35866!==c||a.texParameteri(c,32882,d.convert(i.wrapR)),a.texParameteri(c,10240,d.convert(i.magFilter)),a.texParameteri(c,10241,d.convert(i.minFilter))):(a.texParameteri(c,10242,33071),a.texParameteri(c,10243,33071),32879!==c&&35866!==c||a.texParameteri(c,32882,33071),i.wrapS===sa&&i.wrapT===sa||console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),a.texParameteri(c,10240,m(i.magFilter)),a.texParameteri(c,10241,m(i.minFilter)),i.minFilter!==la&&i.minFilter!==ma&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),r=e.get("EXT_texture_filter_anisotropic")){if(i.type===Ta&&null===e.get("OES_texture_float_linear"))return;if(i.type===Ea&&null===(t.isWebGL2||e.get("OES_texture_half_float_linear")))return;(i.anisotropy>1||b.get(i).__currentAnisotropy)&&(a.texParameterf(c,r.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(i.anisotropy,t.getMaxAnisotropy())),b.get(i).__currentAnisotropy=i.anisotropy)}}function S(e,c){void 0===e.__webglInit&&(e.__webglInit=!0,c.addEventListener("dispose",g),e.__webglTexture=a.createTexture(),i.memory.textures++)}function T(e,b,i){var n=3553;b.isDataTexture2DArray&&(n=35866),b.isDataTexture3D&&(n=32879),S(e,b),c.activeTexture(33984+i),c.bindTexture(n,e.__webglTexture),a.pixelStorei(37440,b.flipY),a.pixelStorei(37441,b.premultiplyAlpha),a.pixelStorei(3317,b.unpackAlignment);var r=function(a){return!t.isWebGL2&&(a.wrapS!==sa||a.wrapT!==sa||a.minFilter!==la&&a.minFilter!==ma)}(b)&&!1===h(b.image),f=s(b.image,r,!1,t.maxTextureSize),o=h(f)||t.isWebGL2,m=d.convert(b.format),g=d.convert(b.type),v=p(m,g);M(n,b,o);var y,x=b.mipmaps;if(b.isDepthTexture){if(v=6402,b.type===Ta){if(!t.isWebGL2)throw new Error("Float Depth Texture only supported in WebGL2.0");v=36012}else t.isWebGL2&&(v=33189);b.format===za&&6402===v&&b.type!==_a&&b.type!==Sa&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),b.type=_a,g=d.convert(b.type)),b.format===Ua&&(v=34041,b.type!==Pa&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),b.type=Pa,g=d.convert(b.type))),c.texImage2D(3553,0,v,f.width,f.height,0,m,g,null)}else if(b.isDataTexture)if(x.length>0&&o){for(var w=0,_=x.length;w<_;w++)y=x[w],c.texImage2D(3553,w,v,y.width,y.height,0,m,g,y.data);b.generateMipmaps=!1,e.__maxMipLevel=x.length-1}else c.texImage2D(3553,0,v,f.width,f.height,0,m,g,f.data),e.__maxMipLevel=0;else if(b.isCompressedTexture){for(w=0,_=x.length;w<_;w++)y=x[w],b.format!==Ia&&b.format!==Oa?c.getCompressedTextureFormats().indexOf(m)>-1?c.compressedTexImage2D(3553,w,v,y.width,y.height,0,y.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):c.texImage2D(3553,w,v,y.width,y.height,0,m,g,y.data);e.__maxMipLevel=x.length-1}else if(b.isDataTexture2DArray)c.texImage3D(35866,0,v,f.width,f.height,f.depth,0,m,g,f.data),e.__maxMipLevel=0;else if(b.isDataTexture3D)c.texImage3D(32879,0,v,f.width,f.height,f.depth,0,m,g,f.data),e.__maxMipLevel=0;else if(x.length>0&&o){for(w=0,_=x.length;w<_;w++)y=x[w],c.texImage2D(3553,w,v,m,g,y);b.generateMipmaps=!1,e.__maxMipLevel=x.length-1}else c.texImage2D(3553,0,v,m,g,f),e.__maxMipLevel=0;l(b,o)&&u(3553,b,f.width,f.height),e.__version=b.version,b.onUpdate&&b.onUpdate(b)}function E(e,t,i,n){var r=d.convert(t.texture.format),f=d.convert(t.texture.type),o=p(r,f);c.texImage2D(n,0,o,t.width,t.height,0,r,f,null),a.bindFramebuffer(36160,e),a.framebufferTexture2D(36160,i,n,b.get(t.texture).__webglTexture,0),a.bindFramebuffer(36160,null)}function A(e,c,b){if(a.bindRenderbuffer(36161,e),c.depthBuffer&&!c.stencilBuffer){if(b){var t=R(c);a.renderbufferStorageMultisample(36161,t,33189,c.width,c.height)}else a.renderbufferStorage(36161,33189,c.width,c.height);a.framebufferRenderbuffer(36160,36096,36161,e)}else if(c.depthBuffer&&c.stencilBuffer){if(b){t=R(c);a.renderbufferStorageMultisample(36161,t,35056,c.width,c.height)}else a.renderbufferStorage(36161,34041,c.width,c.height);a.framebufferRenderbuffer(36160,33306,36161,e)}else{var i=p(d.convert(c.texture.format),d.convert(c.texture.type));if(b){t=R(c);a.renderbufferStorageMultisample(36161,t,i,c.width,c.height)}else a.renderbufferStorage(36161,i,c.width,c.height)}a.bindRenderbuffer(36161,null)}function L(e){var c=b.get(e),t=!0===e.isWebGLRenderTargetCube;if(e.depthTexture){if(t)throw new Error("target.depthTexture not supported in Cube render targets");!function(e,c){if(c&&c.isWebGLRenderTargetCube)throw new Error("Depth Texture with cube render targets is not supported");if(a.bindFramebuffer(36160,e),!c.depthTexture||!c.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");b.get(c.depthTexture).__webglTexture&&c.depthTexture.image.width===c.width&&c.depthTexture.image.height===c.height||(c.depthTexture.image.width=c.width,c.depthTexture.image.height=c.height,c.depthTexture.needsUpdate=!0),x(c.depthTexture,0);var t=b.get(c.depthTexture).__webglTexture;if(c.depthTexture.format===za)a.framebufferTexture2D(36160,36096,3553,t,0);else{if(c.depthTexture.format!==Ua)throw new Error("Unknown depthTexture format");a.framebufferTexture2D(36160,33306,3553,t,0)}}(c.__webglFramebuffer,e)}else if(t){c.__webglDepthbuffer=[];for(var d=0;d<6;d++)a.bindFramebuffer(36160,c.__webglFramebuffer[d]),c.__webglDepthbuffer[d]=a.createRenderbuffer(),A(c.__webglDepthbuffer[d],e)}else a.bindFramebuffer(36160,c.__webglFramebuffer),c.__webglDepthbuffer=a.createRenderbuffer(),A(c.__webglDepthbuffer,e);a.bindFramebuffer(36160,null)}function R(a){return t.isWebGL2&&a.isWebGLMultisampleRenderTarget?Math.min(t.maxSamples,a.samples):0}var P=!1,C=!1;this.allocateTextureUnit=function(){var a=y;return a>=t.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+a+" texture units while this GPU supports only "+t.maxTextures),y+=1,a},this.resetTextureUnits=function(){y=0},this.setTexture2D=x,this.setTexture2DArray=function(a,e){var t=b.get(a);a.version>0&&t.__version!==a.version?T(t,a,e):(c.activeTexture(33984+e),c.bindTexture(35866,t.__webglTexture))},this.setTexture3D=function(a,e){var t=b.get(a);a.version>0&&t.__version!==a.version?T(t,a,e):(c.activeTexture(33984+e),c.bindTexture(32879,t.__webglTexture))},this.setTextureCube=w,this.setTextureCubeDynamic=_,this.setupRenderTarget=function(n){var r=b.get(n),f=b.get(n.texture);n.addEventListener("dispose",v),f.__webglTexture=a.createTexture(),i.memory.textures++;var o=!0===n.isWebGLRenderTargetCube,s=!0===n.isWebGLMultisampleRenderTarget,m=!0===n.isWebGLMultiviewRenderTarget,g=h(n)||t.isWebGL2;if(o){r.__webglFramebuffer=[];for(var y=0;y<6;y++)r.__webglFramebuffer[y]=a.createFramebuffer()}else if(r.__webglFramebuffer=a.createFramebuffer(),s)if(t.isWebGL2){r.__webglMultisampledFramebuffer=a.createFramebuffer(),r.__webglColorRenderbuffer=a.createRenderbuffer(),a.bindRenderbuffer(36161,r.__webglColorRenderbuffer);var x=p(d.convert(n.texture.format),d.convert(n.texture.type)),w=R(n);a.renderbufferStorageMultisample(36161,w,x,n.width,n.height),a.bindFramebuffer(36160,r.__webglMultisampledFramebuffer),a.framebufferRenderbuffer(36160,36064,36161,r.__webglColorRenderbuffer),a.bindRenderbuffer(36161,null),n.depthBuffer&&(r.__webglDepthRenderbuffer=a.createRenderbuffer(),A(r.__webglDepthRenderbuffer,n,!0)),a.bindFramebuffer(36160,null)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");else if(m){var _=n.width,S=n.height,T=n.numViews;a.bindFramebuffer(36160,r.__webglFramebuffer);var P=e.get("OVR_multiview2");i.memory.textures+=2;var C=a.createTexture();a.bindTexture(35866,C),a.texParameteri(35866,10240,9728),a.texParameteri(35866,10241,9728),a.texImage3D(35866,0,32856,_,S,T,0,6408,5121,null),P.framebufferTextureMultiviewOVR(36160,36064,C,0,0,T);var O=a.createTexture();a.bindTexture(35866,O),a.texParameteri(35866,10240,9728),a.texParameteri(35866,10241,9728),a.texImage3D(35866,0,35056,_,S,T,0,34041,34042,null),P.framebufferTextureMultiviewOVR(36160,33306,O,0,0,T);var I=new Array(T);for(y=0;y<T;++y)I[y]=a.createFramebuffer(),a.bindFramebuffer(36160,I[y]),a.framebufferTextureLayer(36160,36064,C,0,y);r.__webglColorTexture=C,r.__webglDepthStencilTexture=O,r.__webglViewFramebuffers=I,a.bindFramebuffer(36160,null),a.bindTexture(35866,null)}if(o){c.bindTexture(34067,f.__webglTexture),M(34067,n.texture,g);for(y=0;y<6;y++)E(r.__webglFramebuffer[y],n,36064,34069+y);l(n.texture,g)&&u(34067,n.texture,n.width,n.height),c.bindTexture(34067,null)}else m||(c.bindTexture(3553,f.__webglTexture),M(3553,n.texture,g),E(r.__webglFramebuffer,n,36064,3553),l(n.texture,g)&&u(3553,n.texture,n.width,n.height),c.bindTexture(3553,null));n.depthBuffer&&L(n)},this.updateRenderTargetMipmap=function(a){var e=a.texture;if(l(e,h(a)||t.isWebGL2)){var d=a.isWebGLRenderTargetCube?34067:3553,i=b.get(e).__webglTexture;c.bindTexture(d,i),u(d,e,a.width,a.height),c.bindTexture(d,null)}},this.updateMultisampleRenderTarget=function(e){if(e.isWebGLMultisampleRenderTarget)if(t.isWebGL2){var c=b.get(e);a.bindFramebuffer(36008,c.__webglMultisampledFramebuffer),a.bindFramebuffer(36009,c.__webglFramebuffer);var d=e.width,i=e.height,n=16384;e.depthBuffer&&(n|=256),e.stencilBuffer&&(n|=1024),a.blitFramebuffer(0,0,d,i,0,0,d,i,n,9728)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")},this.safeSetTexture2D=function(a,e){a&&a.isWebGLRenderTarget&&(!1===P&&(console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."),P=!0),a=a.texture),x(a,e)},this.safeSetTextureCube=function(a,e){a&&a.isWebGLRenderTargetCube&&(!1===C&&(console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."),C=!0),a=a.texture),a&&a.isCubeTexture||Array.isArray(a.image)&&6===a.image.length?w(a,e):_(a,e)}}function yi(a,e,c){return{convert:function(a){var b;if(a===oa)return 10497;if(a===sa)return 33071;if(a===ha)return 33648;if(a===la)return 9728;if(a===ua)return 9984;if(a===pa)return 9986;if(a===ma)return 9729;if(a===ga)return 9985;if(a===va)return 9987;if(a===ya)return 5121;if(a===Aa)return 32819;if(a===La)return 32820;if(a===Ra)return 33635;if(a===xa)return 5120;if(a===wa)return 5122;if(a===_a)return 5123;if(a===Ma)return 5124;if(a===Sa)return 5125;if(a===Ta)return 5126;if(a===Ea){if(c.isWebGL2)return 5131;if(null!==(b=e.get("OES_texture_half_float")))return b.HALF_FLOAT_OES}if(a===Ca)return 6406;if(a===Oa)return 6407;if(a===Ia)return 6408;if(a===Na)return 6409;if(a===Da)return 6410;if(a===za)return 6402;if(a===Ua)return 34041;if(a===Ba)return 6403;if(a===S)return 32774;if(a===T)return 32778;if(a===E)return 32779;if(a===R)return 0;if(a===P)return 1;if(a===C)return 768;if(a===O)return 769;if(a===I)return 770;if(a===N)return 771;if(a===D)return 772;if(a===z)return 773;if(a===U)return 774;if(a===B)return 775;if(a===F)return 776;if((a===Fa||a===Ga||a===Ha||a===Va)&&null!==(b=e.get("WEBGL_compressed_texture_s3tc"))){if(a===Fa)return b.COMPRESSED_RGB_S3TC_DXT1_EXT;if(a===Ga)return b.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(a===Ha)return b.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(a===Va)return b.COMPRESSED_RGBA_S3TC_DXT5_EXT}if((a===ka||a===ja||a===Wa||a===qa)&&null!==(b=e.get("WEBGL_compressed_texture_pvrtc"))){if(a===ka)return b.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(a===ja)return b.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(a===Wa)return b.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(a===qa)return b.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(a===Xa&&null!==(b=e.get("WEBGL_compressed_texture_etc1")))return b.COMPRESSED_RGB_ETC1_WEBGL;if((a===Ya||a===Za||a===Ja||a===Ka||a===Qa||a===$a||a===ae||a===ee||a===ce||a===be||a===te||a===de||a===ie||a===ne)&&null!==(b=e.get("WEBGL_compressed_texture_astc")))return a;if(a===A||a===L){if(c.isWebGL2){if(a===A)return 32775;if(a===L)return 32776}if(null!==(b=e.get("EXT_blend_minmax"))){if(a===A)return b.MIN_EXT;if(a===L)return b.MAX_EXT}}if(a===Pa){if(c.isWebGL2)return 34042;if(null!==(b=e.get("WEBGL_depth_texture")))return b.UNSIGNED_INT_24_8_WEBGL}return 0}}}function xi(a,e,c,b){ke.call(this,a,e,b),this.depthBuffer=!1,this.stencilBuffer=!1,this.numViews=c}function wi(a,e){var c,b,t,d,i,n,r,f=2,o=a.extensions,s=a.properties,h=0;function l(a){return a.isArrayCamera?a.cameras:(i[0]=a,i)}this.isAvailable=function(){if(void 0===r){var a=o.get("OVR_multiview2");if(r=null!==a&&!1===e.getContextAttributes().antialias){h=e.getParameter(a.MAX_VIEWS_OVR),c=new xi(0,0,f),n=new Ce,d=[],t=[],i=[];for(var b=0;b<h;b++)d[b]=new Qe,t[b]=new Be}}return r},this.attachCamera=function(e){!1!==function(a){if(void 0===a.isArrayCamera)return!0;var e=a.cameras;if(e.length>h)return!1;for(var c=1,b=e.length;c<b;c++)if(e[0].viewport.z!==e[c].viewport.z||e[0].viewport.w!==e[c].viewport.w)return!1;return!0}(e)&&(b=a.getRenderTarget(),function(e){if(b?n.set(b.width,b.height):a.getDrawingBufferSize(n),e.isArrayCamera){var t=e.cameras[0].viewport;c.setSize(t.z,t.w),c.setNumViews(e.cameras.length)}else c.setSize(n.x,n.y),c.setNumViews(f)}(e),a.setRenderTarget(c))},this.detachCamera=function(t){c===a.getRenderTarget()&&(a.setRenderTarget(b),function(a){var b=c,t=b.numViews,d=s.get(b).__webglViewFramebuffers,i=b.width,r=b.height;if(a.isArrayCamera)for(var f=0;f<t;f++){var o=a.cameras[f].viewport,h=o.x,l=o.y,u=h+o.z,p=l+o.w;e.bindFramebuffer(36008,d[f]),e.blitFramebuffer(0,0,i,r,h,l,u,p,16384,9728)}else e.bindFramebuffer(36008,d[0]),e.blitFramebuffer(0,0,i,r,0,0,n.x,n.y,16384,9728)}(t))},this.updateCameraProjectionMatricesUniform=function(a,c){for(var b=l(a),t=0;t<b.length;t++)d[t].copy(b[t].projectionMatrix);c.setValue(e,"projectionMatrices",d)},this.updateCameraViewMatricesUniform=function(a,c){for(var b=l(a),t=0;t<b.length;t++)d[t].copy(b[t].matrixWorldInverse);c.setValue(e,"viewMatrices",d)},this.updateObjectMatricesUniforms=function(a,c,b){for(var i=l(c),n=0;n<i.length;n++)d[n].multiplyMatrices(i[n].matrixWorldInverse,a.matrixWorld),t[n].getNormalMatrix(d[n]);b.setValue(e,"modelViewMatrices",d),b.setValue(e,"normalMatrices",t)}}function _i(){mc.call(this),this.type="Group"}function Mi(a){ft.call(this),this.cameras=a||[]}xi.prototype=Object.assign(Object.create(ke.prototype),{constructor:xi,isWebGLMultiviewRenderTarget:!0,copy:function(a){return ke.prototype.copy.call(this,a),this.numViews=a.numViews,this},setNumViews:function(a){return this.numViews!==a&&(this.numViews=a,this.dispose()),this}}),_i.prototype=Object.assign(Object.create(mc.prototype),{constructor:_i,isGroup:!0}),Mi.prototype=Object.assign(Object.create(ft.prototype),{constructor:Mi,isArrayCamera:!0});var Si,Ti=new De,Ei=new De;function Ai(a,e,c){Ti.setFromMatrixPosition(e.matrixWorld),Ei.setFromMatrixPosition(c.matrixWorld);var b=Ti.distanceTo(Ei),t=e.projectionMatrix.elements,d=c.projectionMatrix.elements,i=t[14]/(t[10]-1),n=t[14]/(t[10]+1),r=(t[9]+1)/t[5],f=(t[9]-1)/t[5],o=(t[8]-1)/t[0],s=(d[8]+1)/d[0],h=i*o,l=i*s,u=b/(-o+s),p=u*-o;e.matrixWorld.decompose(a.position,a.quaternion,a.scale),a.translateX(p),a.translateZ(u),a.matrixWorld.compose(a.position,a.quaternion,a.scale),a.matrixWorldInverse.getInverse(a.matrixWorld);var m=i+u,g=n+u,v=h-p,y=l+(b-p),x=r*n/g*m,w=f*n/g*m;a.projectionMatrix.makePerspective(v,y,x,w,m,g)}function Li(a){var e,c,b=this,t=null,d=null,i=null,n=[],r=new Qe,f=new Qe,o=1,s="local-floor";"undefined"!=typeof window&&"VRFrameData"in window&&(d=new window.VRFrameData,window.addEventListener("vrdisplaypresentchange",w,!1));var h=new Qe,l=new Oe,u=new De,p=new ft;p.viewport=new Ve,p.layers.enable(1);var m=new ft;m.viewport=new Ve,m.layers.enable(2);var g=new Mi([p,m]);function v(){return null!==t&&!0===t.isPresenting}g.layers.enable(1),g.layers.enable(2);var y,x=new Ce;function w(){if(v()){var d=t.getEyeParameters("left");e=2*d.renderWidth*o,c=d.renderHeight*o,y=a.getPixelRatio(),a.getSize(x),a.setDrawingBufferSize(e,c,1),p.viewport.set(0,0,e/2,c),m.viewport.set(e/2,0,e/2,c),T.start(),b.dispatchEvent({type:"sessionstart"})}else b.enabled&&a.setDrawingBufferSize(x.width,x.height,y),T.stop(),b.dispatchEvent({type:"sessionend"})}var _=[];function M(a){for(var e=navigator.getGamepads&&navigator.getGamepads(),c=0,b=0,t=e.length;c<t;c++){var d=e[c];if(d&&("Daydream Controller"===d.id||"Gear VR Controller"===d.id||"Oculus Go Controller"===d.id||"OpenVR Gamepad"===d.id||d.id.startsWith("Oculus Touch")||d.id.startsWith("HTC Vive Focus")||d.id.startsWith("Spatial Controller"))){if(b===a)return d;b++}}}function S(a,b){null!==b&&4===b.length&&a.set(b[0]*e,b[1]*c,b[2]*e,b[3]*c)}this.enabled=!1,this.getController=function(a){var e=n[a];return void 0===e&&((e=new _i).matrixAutoUpdate=!1,e.visible=!1,n[a]=e),e},this.getDevice=function(){return t},this.setDevice=function(a){void 0!==a&&(t=a),T.setContext(a)},this.setFramebufferScaleFactor=function(a){o=a},this.setReferenceSpaceType=function(a){s=a},this.setPoseTarget=function(a){void 0!==a&&(i=a)},this.getCamera=function(a){var e="local-floor"===s?1.6:0;if(!1===v())return a.position.set(0,e,0),a.rotation.set(0,0,0),a;if(t.depthNear=a.near,t.depthFar=a.far,t.getFrameData(d),"local-floor"===s){var c=t.stageParameters;c?r.fromArray(c.sittingToStandingTransform):r.makeTranslation(0,e,0)}var b=d.pose,o=null!==i?i:a;o.matrix.copy(r),o.matrix.decompose(o.position,o.quaternion,o.scale),null!==b.orientation&&(l.fromArray(b.orientation),o.quaternion.multiply(l)),null!==b.position&&(l.setFromRotationMatrix(r),u.fromArray(b.position),u.applyQuaternion(l),o.position.add(u)),o.updateMatrixWorld(),p.near=a.near,m.near=a.near,p.far=a.far,m.far=a.far,p.matrixWorldInverse.fromArray(d.leftViewMatrix),m.matrixWorldInverse.fromArray(d.rightViewMatrix),f.getInverse(r),"local-floor"===s&&(p.matrixWorldInverse.multiply(f),m.matrixWorldInverse.multiply(f));var y=o.parent;null!==y&&(h.getInverse(y.matrixWorld),p.matrixWorldInverse.multiply(h),m.matrixWorldInverse.multiply(h)),p.matrixWorld.getInverse(p.matrixWorldInverse),m.matrixWorld.getInverse(m.matrixWorldInverse),p.projectionMatrix.fromArray(d.leftProjectionMatrix),m.projectionMatrix.fromArray(d.rightProjectionMatrix),Ai(g,p,m);var x=t.getLayers();if(x.length){var w=x[0];S(p.viewport,w.leftBounds),S(m.viewport,w.rightBounds)}return function(){for(var a=0;a<n.length;a++){var e=n[a],c=M(a);if(void 0!==c&&void 0!==c.pose){if(null===c.pose)return;var b=c.pose;!1===b.hasPosition&&e.position.set(.2,-.6,-.05),null!==b.position&&e.position.fromArray(b.position),null!==b.orientation&&e.quaternion.fromArray(b.orientation),e.matrix.compose(e.position,e.quaternion,e.scale),e.matrix.premultiply(r),e.matrix.decompose(e.position,e.quaternion,e.scale),e.matrixWorldNeedsUpdate=!0,e.visible=!0;var t="Daydream Controller"===c.id?0:1;void 0===_[a]&&(_[a]=!1),_[a]!==c.buttons[t].pressed&&(_[a]=c.buttons[t].pressed,!0===_[a]?e.dispatchEvent({type:"selectstart"}):(e.dispatchEvent({type:"selectend"}),e.dispatchEvent({type:"select"})))}else e.visible=!1}}(),g},this.getStandingMatrix=function(){return r},this.isPresenting=v;var T=new Tt;this.setAnimationLoop=function(a){T.setAnimationLoop(a),v()&&T.start()},this.submitFrame=function(){v()&&t.submitFrame()},this.dispose=function(){"undefined"!=typeof window&&window.removeEventListener("vrdisplaypresentchange",w)},this.setFrameOfReferenceType=function(){console.warn("THREE.WebVRManager: setFrameOfReferenceType() has been deprecated.")}}function Ri(a,e){var c=this,b=null,t=null,d="local-floor",i=null,n=[],r=[];function f(){return null!==b&&null!==t}var o=new ft;o.layers.enable(1),o.viewport=new Ve;var s=new ft;s.layers.enable(2),s.viewport=new Ve;var h=new Mi([o,s]);function l(a){for(var e=0;e<n.length;e++)r[e]===a.inputSource&&n[e].dispatchEvent({type:a.type})}function u(){a.setFramebuffer(null),a.setRenderTarget(a.getRenderTarget()),v.stop(),c.dispatchEvent({type:"sessionend"})}function p(a){t=a,v.setContext(b),v.start(),c.dispatchEvent({type:"sessionstart"})}function m(a,e){null===e?a.matrixWorld.copy(a.matrix):a.matrixWorld.multiplyMatrices(e.matrixWorld,a.matrix),a.matrixWorldInverse.getInverse(a.matrixWorld)}h.layers.enable(1),h.layers.enable(2),this.enabled=!1,this.getController=function(a){var e=n[a];return void 0===e&&((e=new _i).matrixAutoUpdate=!1,e.visible=!1,n[a]=e),e},this.setFramebufferScaleFactor=function(){},this.setReferenceSpaceType=function(a){d=a},this.getSession=function(){return b},this.setSession=function(a){null!==(b=a)&&(b.addEventListener("select",l),b.addEventListener("selectstart",l),b.addEventListener("selectend",l),b.addEventListener("end",u),b.updateRenderState({baseLayer:new XRWebGLLayer(b,e)}),b.requestReferenceSpace(d).then(p),r=b.inputSources,b.addEventListener("inputsourceschange",(function(){r=b.inputSources,console.log(r);for(var a=0;a<n.length;a++){n[a].userData.inputSource=r[a]}})))},this.getCamera=function(a){if(f()){var e=a.parent,c=h.cameras;m(h,e);for(var b=0;b<c.length;b++)m(c[b],e);a.matrixWorld.copy(h.matrixWorld);for(var t=a.children,d=(b=0,t.length);b<d;b++)t[b].updateMatrixWorld(!0);return Ai(h,o,s),h}return a},this.isPresenting=f;var g=null;var v=new Tt;v.setAnimationLoop((function(e,c){if(null!==(i=c.getViewerPose(t))){var d=i.views,f=b.renderState.baseLayer;a.setFramebuffer(f.framebuffer);for(var o=0;o<d.length;o++){var s=d[o],l=f.getViewport(s),u=s.transform.inverse.matrix,p=h.cameras[o];p.matrix.fromArray(u).getInverse(p.matrix),p.projectionMatrix.fromArray(s.projectionMatrix),p.viewport.set(l.x,l.y,l.width,l.height),0===o&&h.matrix.copy(p.matrix)}}for(o=0;o<n.length;o++){var m=n[o],v=r[o];if(v){var y=c.getPose(v.targetRaySpace,t);if(null!==y){m.matrix.fromArray(y.transform.matrix),m.matrix.decompose(m.position,m.rotation,m.scale),m.visible=!0;continue}}m.visible=!1}g&&g(e)})),this.setAnimationLoop=function(a){g=a},this.dispose=function(){},this.getStandingMatrix=function(){return console.warn("THREE.WebXRManager: getStandingMatrix() is no longer needed."),new Qe},this.getDevice=function(){console.warn("THREE.WebXRManager: getDevice() has been deprecated.")},this.setDevice=function(){console.warn("THREE.WebXRManager: setDevice() has been deprecated.")},this.setFrameOfReferenceType=function(){console.warn("THREE.WebXRManager: setFrameOfReferenceType() has been deprecated.")},this.submitFrame=function(){}}function Pi(a){var e=void 0!==(a=a||{}).canvas?a.canvas:document.createElementNS("http://www.w3.org/1999/xhtml","canvas"),c=void 0!==a.context?a.context:null,b=void 0!==a.alpha&&a.alpha,t=void 0===a.depth||a.depth,d=void 0===a.stencil||a.stencil,i=void 0!==a.antialias&&a.antialias,n=void 0===a.premultipliedAlpha||a.premultipliedAlpha,r=void 0!==a.preserveDrawingBuffer&&a.preserveDrawingBuffer,f=void 0!==a.powerPreference?a.powerPreference:"default",o=void 0!==a.failIfMajorPerformanceCaveat&&a.failIfMajorPerformanceCaveat,s=null,h=null;this.domElement=e,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.gammaFactor=2,this.gammaInput=!1,this.gammaOutput=!1,this.physicallyCorrectLights=!1,this.toneMapping=Q,this.toneMappingExposure=1,this.toneMappingWhitePoint=1,this.maxMorphTargets=8,this.maxMorphNormals=4;var u,p,m,g,v,y,x,w,_,M,S,T,E,A,L,R,P,C,O=this,I=!1,N=null,D=0,z=0,U=null,B=null,F=-1,G={geometry:null,program:null,wireframe:!1},H=null,V=null,k=new Ve,j=new Ve,W=null,q=e.width,X=e.height,Y=1,Z=new Ve(0,0,q,X),J=new Ve(0,0,q,X),K=!1,$=new wt,aa=new Ot,ea=!1,ca=!1,ba=new Qe,ta=new De;function da(){return null===U?Y:1}try{var ia={alpha:b,depth:t,stencil:d,antialias:i,premultipliedAlpha:n,preserveDrawingBuffer:r,powerPreference:f,failIfMajorPerformanceCaveat:o,xrCompatible:!0};if(e.addEventListener("webglcontextlost",sa,!1),e.addEventListener("webglcontextrestored",ha,!1),null===(u=c||e.getContext("webgl",ia)||e.getContext("experimental-webgl",ia)))throw null!==e.getContext("webgl")?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.");void 0===u.getShaderPrecisionFormat&&(u.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(a){throw console.error("THREE.WebGLRenderer: "+a.message),a}function na(){p=new It(u),!1===(m=new Ct(u,p,a)).isWebGL2&&(p.get("WEBGL_depth_texture"),p.get("OES_texture_float"),p.get("OES_texture_half_float"),p.get("OES_texture_half_float_linear"),p.get("OES_standard_derivatives"),p.get("OES_element_index_uint"),p.get("ANGLE_instanced_arrays")),p.get("OES_texture_float_linear"),C=new yi(u,p,m),(g=new gi(u,p,C,m)).scissor(j.copy(J).multiplyScalar(Y).floor()),g.viewport(k.copy(Z).multiplyScalar(Y).floor()),v=new zt(u),y=new ei,x=new vi(u,p,g,y,m,C,v),w=new Et(u),_=new Nt(u,w,v),M=new Ft(u,_,w,v),L=new Bt(u),S=new ai(O,p,m),T=new di,E=new si,A=new Rt(O,g,M,n),R=new Pt(u,p,v,m),P=new Dt(u,p,v,m),v.programs=S.programs,O.capabilities=m,O.extensions=p,O.properties=y,O.renderLists=T,O.state=g,O.info=v}na();var ra="undefined"!=typeof navigator&&"xr"in navigator&&"supportsSession"in navigator.xr?new Ri(O,u):new Li(O);this.vr=ra;var fa=new wi(O,u),oa=new mi(O,M,m.maxTextureSize);function sa(a){a.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),I=!0}function ha(){console.log("THREE.WebGLRenderer: Context Restored."),I=!1,na()}function la(a){var e=a.target;e.removeEventListener("dispose",la),function(a){ua(a),y.remove(a)}(e)}function ua(a){var e=y.get(a).program;a.program=void 0,void 0!==e&&S.releaseProgram(e)}this.shadowMap=oa,this.getContext=function(){return u},this.getContextAttributes=function(){return u.getContextAttributes()},this.forceContextLoss=function(){var a=p.get("WEBGL_lose_context");a&&a.loseContext()},this.forceContextRestore=function(){var a=p.get("WEBGL_lose_context");a&&a.restoreContext()},this.getPixelRatio=function(){return Y},this.setPixelRatio=function(a){void 0!==a&&(Y=a,this.setSize(q,X,!1))},this.getSize=function(a){return void 0===a&&(console.warn("WebGLRenderer: .getsize() now requires a Vector2 as an argument"),a=new Ce),a.set(q,X)},this.setSize=function(a,c,b){ra.isPresenting()?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(q=a,X=c,e.width=Math.floor(a*Y),e.height=Math.floor(c*Y),!1!==b&&(e.style.width=a+"px",e.style.height=c+"px"),this.setViewport(0,0,a,c))},this.getDrawingBufferSize=function(a){return void 0===a&&(console.warn("WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument"),a=new Ce),a.set(q*Y,X*Y).floor()},this.setDrawingBufferSize=function(a,c,b){q=a,X=c,Y=b,e.width=Math.floor(a*b),e.height=Math.floor(c*b),this.setViewport(0,0,a,c)},this.getCurrentViewport=function(a){return void 0===a&&(console.warn("WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument"),a=new Ve),a.copy(k)},this.getViewport=function(a){return a.copy(Z)},this.setViewport=function(a,e,c,b){a.isVector4?Z.set(a.x,a.y,a.z,a.w):Z.set(a,e,c,b),g.viewport(k.copy(Z).multiplyScalar(Y).floor())},this.getScissor=function(a){return a.copy(J)},this.setScissor=function(a,e,c,b){a.isVector4?J.set(a.x,a.y,a.z,a.w):J.set(a,e,c,b),g.scissor(j.copy(J).multiplyScalar(Y).floor())},this.getScissorTest=function(){return K},this.setScissorTest=function(a){g.setScissorTest(K=a)},this.getClearColor=function(){return A.getClearColor()},this.setClearColor=function(){A.setClearColor.apply(A,arguments)},this.getClearAlpha=function(){return A.getClearAlpha()},this.setClearAlpha=function(){A.setClearAlpha.apply(A,arguments)},this.clear=function(a,e,c){var b=0;(void 0===a||a)&&(b|=16384),(void 0===e||e)&&(b|=256),(void 0===c||c)&&(b|=1024),u.clear(b)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",sa,!1),e.removeEventListener("webglcontextrestored",ha,!1),T.dispose(),E.dispose(),y.dispose(),M.dispose(),ra.dispose(),ma.stop()},this.renderBufferImmediate=function(a,e){g.initAttributes();var c=y.get(a);a.hasPositions&&!c.position&&(c.position=u.createBuffer()),a.hasNormals&&!c.normal&&(c.normal=u.createBuffer()),a.hasUvs&&!c.uv&&(c.uv=u.createBuffer()),a.hasColors&&!c.color&&(c.color=u.createBuffer());var b=e.getAttributes();a.hasPositions&&(u.bindBuffer(34962,c.position),u.bufferData(34962,a.positionArray,35048),g.enableAttribute(b.position),u.vertexAttribPointer(b.position,3,5126,!1,0,0)),a.hasNormals&&(u.bindBuffer(34962,c.normal),u.bufferData(34962,a.normalArray,35048),g.enableAttribute(b.normal),u.vertexAttribPointer(b.normal,3,5126,!1,0,0)),a.hasUvs&&(u.bindBuffer(34962,c.uv),u.bufferData(34962,a.uvArray,35048),g.enableAttribute(b.uv),u.vertexAttribPointer(b.uv,2,5126,!1,0,0)),a.hasColors&&(u.bindBuffer(34962,c.color),u.bufferData(34962,a.colorArray,35048),g.enableAttribute(b.color),u.vertexAttribPointer(b.color,3,5126,!1,0,0)),g.disableUnusedAttributes(),u.drawArrays(4,0,a.count),a.count=0},this.renderBufferDirect=function(a,e,c,b,t,d){var i=t.isMesh&&t.matrixWorld.determinant()<0;g.setMaterial(b,i);var n=_a(a,e,b,t),r=!1;G.geometry===c.id&&G.program===n.id&&G.wireframe===(!0===b.wireframe)||(G.geometry=c.id,G.program=n.id,G.wireframe=!0===b.wireframe,r=!0),t.morphTargetInfluences&&(L.update(t,c,b,n),r=!0);var f,o=c.index,s=c.attributes.position,h=1;!0===b.wireframe&&(o=_.getWireframeAttribute(c),h=2);var l=R;null!==o&&(f=w.get(o),(l=P).setIndex(f)),r&&(!function(a,e,c,b){if(!1===m.isWebGL2&&(a.isInstancedMesh||e.isInstancedBufferGeometry)&&null===p.get("ANGLE_instanced_arrays"))return;g.initAttributes();var t=e.attributes,d=b.getAttributes(),i=c.defaultAttributeValues;for(var n in d){var r=d[n];if(r>=0){var f=t[n];if(void 0!==f){var o=f.normalized,s=f.itemSize;if(void 0===(M=w.get(f)))continue;var h=M.buffer,l=M.type,v=M.bytesPerElement;if(f.isInterleavedBufferAttribute){var y=f.data,x=y.stride,_=f.offset;y&&y.isInstancedInterleavedBuffer?(g.enableAttributeAndDivisor(r,y.meshPerAttribute),void 0===e.maxInstancedCount&&(e.maxInstancedCount=y.meshPerAttribute*y.count)):g.enableAttribute(r),u.bindBuffer(34962,h),u.vertexAttribPointer(r,s,l,o,x*v,_*v)}else f.isInstancedBufferAttribute?(g.enableAttributeAndDivisor(r,f.meshPerAttribute),void 0===e.maxInstancedCount&&(e.maxInstancedCount=f.meshPerAttribute*f.count)):g.enableAttribute(r),u.bindBuffer(34962,h),u.vertexAttribPointer(r,s,l,o,0,0)}else if("instanceMatrix"===n){var M;if(void 0===(M=w.get(a.instanceMatrix)))continue;h=M.buffer,l=M.type;g.enableAttributeAndDivisor(r+0,1),g.enableAttributeAndDivisor(r+1,1),g.enableAttributeAndDivisor(r+2,1),g.enableAttributeAndDivisor(r+3,1),u.bindBuffer(34962,h),u.vertexAttribPointer(r+0,4,l,!1,64,0),u.vertexAttribPointer(r+1,4,l,!1,64,16),u.vertexAttribPointer(r+2,4,l,!1,64,32),u.vertexAttribPointer(r+3,4,l,!1,64,48)}else if(void 0!==i){var S=i[n];if(void 0!==S)switch(S.length){case 2:u.vertexAttrib2fv(r,S);break;case 3:u.vertexAttrib3fv(r,S);break;case 4:u.vertexAttrib4fv(r,S);break;default:u.vertexAttrib1fv(r,S)}}}}g.disableUnusedAttributes()}(t,c,b,n),null!==o&&u.bindBuffer(34963,f.buffer));var v=1/0;null!==o?v=o.count:void 0!==s&&(v=s.count);var y=c.drawRange.start*h,x=c.drawRange.count*h,M=null!==d?d.start*h:0,S=null!==d?d.count*h:1/0,T=Math.max(y,M),E=Math.min(v,y+x,M+S)-1,A=Math.max(0,E-T+1);if(0!==A){if(t.isMesh)if(!0===b.wireframe)g.setLineWidth(b.wireframeLinewidth*da()),l.setMode(1);else switch(t.drawMode){case oe:l.setMode(4);break;case se:l.setMode(5);break;case he:l.setMode(6)}else if(t.isLine){var C=b.linewidth;void 0===C&&(C=1),g.setLineWidth(C*da()),t.isLineSegments?l.setMode(1):t.isLineLoop?l.setMode(2):l.setMode(3)}else t.isPoints?l.setMode(0):t.isSprite&&l.setMode(4);t.isInstancedMesh?l.renderInstances(c,T,A,t.count):c.isInstancedBufferGeometry?l.renderInstances(c,T,A,c.maxInstancedCount):l.render(T,A)}},this.compile=function(a,e){(h=E.get(a,e)).init(),a.traverse((function(a){a.isLight&&(h.pushLight(a),a.castShadow&&h.pushShadow(a))})),h.setupLights(e),a.traverse((function(e){if(e.material)if(Array.isArray(e.material))for(var c=0;c<e.material.length;c++)wa(e.material[c],a.fog,e);else wa(e.material,a.fog,e)}))};var pa=null;var ma=new Tt;function ga(a,e,c,b){if(!1!==a.visible){if(a.layers.test(e.layers))if(a.isGroup)c=a.renderOrder;else if(a.isLOD)!0===a.autoUpdate&&a.update(e);else if(a.isLight)h.pushLight(a),a.castShadow&&h.pushShadow(a);else if(a.isSprite){if(!a.frustumCulled||$.intersectsSprite(a)){b&&ta.setFromMatrixPosition(a.matrixWorld).applyMatrix4(ba);var t=M.update(a);(d=a.material).visible&&s.push(a,t,d,c,ta.z,null)}}else if(a.isImmediateRenderObject)b&&ta.setFromMatrixPosition(a.matrixWorld).applyMatrix4(ba),s.push(a,null,a.material,c,ta.z,null);else if((a.isMesh||a.isLine||a.isPoints)&&(a.isSkinnedMesh&&a.skeleton.frame!==v.render.frame&&(a.skeleton.update(),a.skeleton.frame=v.render.frame),!a.frustumCulled||$.intersectsObject(a))){b&&ta.setFromMatrixPosition(a.matrixWorld).applyMatrix4(ba);t=M.update(a);var d=a.material;if(Array.isArray(d))for(var i=t.groups,n=0,r=i.length;n<r;n++){var f=i[n],o=d[f.materialIndex];o&&o.visible&&s.push(a,t,o,c,ta.z,f)}else d.visible&&s.push(a,t,d,c,ta.z,null)}var l=a.children;for(n=0,r=l.length;n<r;n++)ga(l[n],e,c,b)}}function va(a,e,c,b){for(var t=0,d=a.length;t<d;t++){var i=a[t],n=i.object,r=i.geometry,f=void 0===b?i.material:b,o=i.group;if(c.isArrayCamera)if(V=c,ra.enabled&&fa.isAvailable())xa(n,e,c,r,f,o);else for(var s=c.cameras,l=0,u=s.length;l<u;l++){var p=s[l];n.layers.test(p.layers)&&(g.viewport(k.copy(p.viewport)),h.setupLights(p),xa(n,e,p,r,f,o))}else V=null,xa(n,e,c,r,f,o)}}function xa(a,e,c,b,t,d){if(a.onBeforeRender(O,e,c,b,t,d),h=E.get(e,V||c),a.modelViewMatrix.multiplyMatrices(c.matrixWorldInverse,a.matrixWorld),a.normalMatrix.getNormalMatrix(a.modelViewMatrix),a.isImmediateRenderObject){g.setMaterial(t);var i=_a(c,e.fog,t,a);G.geometry=null,G.program=null,G.wireframe=!1,function(a,e){a.render((function(a){O.renderBufferImmediate(a,e)}))}(a,i)}else O.renderBufferDirect(c,e.fog,b,t,a,d);a.onAfterRender(O,e,c,b,t,d),h=E.get(e,V||c)}function wa(a,e,c){var b=y.get(a),t=h.state.lights,d=h.state.shadowsArray,i=t.state.version,n=S.getParameters(a,t.state,d,e,aa.numPlanes,aa.numIntersection,c),r=S.getProgramCode(a,n),f=b.program,o=!0;if(void 0===f)a.addEventListener("dispose",la);else if(f.code!==r)ua(a);else if(b.lightsStateVersion!==i)b.lightsStateVersion=i,o=!1;else{if(void 0!==n.shaderID)return;o=!1}if(o){if(n.shaderID){var s=St[n.shaderID];b.shader={name:a.type,uniforms:ct(s.uniforms),vertexShader:s.vertexShader,fragmentShader:s.fragmentShader}}else b.shader={name:a.type,uniforms:a.uniforms,vertexShader:a.vertexShader,fragmentShader:a.fragmentShader};a.onBeforeCompile(b.shader,O),r=S.getProgramCode(a,n),f=S.acquireProgram(a,b.shader,n,r),b.program=f,a.program=f}var l=f.getAttributes();if(a.morphTargets){a.numSupportedMorphTargets=0;for(var u=0;u<O.maxMorphTargets;u++)l["morphTarget"+u]>=0&&a.numSupportedMorphTargets++}if(a.morphNormals){a.numSupportedMorphNormals=0;for(u=0;u<O.maxMorphNormals;u++)l["morphNormal"+u]>=0&&a.numSupportedMorphNormals++}var p=b.shader.uniforms;(a.isShaderMaterial||a.isRawShaderMaterial)&&!0!==a.clipping||(b.numClippingPlanes=aa.numPlanes,b.numIntersection=aa.numIntersection,p.clippingPlanes=aa.uniform),b.fog=e,b.needsLights=function(a){return a.isMeshLambertMaterial||a.isMeshPhongMaterial||a.isMeshStandardMaterial||a.isShadowMaterial||a.isShaderMaterial&&!0===a.lights}(a),b.lightsStateVersion=i,b.needsLights&&(p.ambientLightColor.value=t.state.ambient,p.lightProbe.value=t.state.probe,p.directionalLights.value=t.state.directional,p.spotLights.value=t.state.spot,p.rectAreaLights.value=t.state.rectArea,p.pointLights.value=t.state.point,p.hemisphereLights.value=t.state.hemi,p.directionalShadowMap.value=t.state.directionalShadowMap,p.directionalShadowMatrix.value=t.state.directionalShadowMatrix,p.spotShadowMap.value=t.state.spotShadowMap,p.spotShadowMatrix.value=t.state.spotShadowMatrix,p.pointShadowMap.value=t.state.pointShadowMap,p.pointShadowMatrix.value=t.state.pointShadowMatrix);var m=b.program.getUniforms(),g=zd.seqWithValue(m.seq,p);b.uniformsList=g}function _a(a,e,c,b){x.resetTextureUnits();var t=y.get(c),d=h.state.lights;if(ea&&(ca||a!==H)){var i=a===H&&c.id===F;aa.setState(c.clippingPlanes,c.clipIntersection,c.clipShadows,a,t,i)}!1===c.needsUpdate&&(void 0===t.program?c.needsUpdate=!0:c.fog&&t.fog!==e?c.needsUpdate=!0:t.needsLights&&t.lightsStateVersion!==d.state.version?c.needsUpdate=!0:void 0===t.numClippingPlanes||t.numClippingPlanes===aa.numPlanes&&t.numIntersection===aa.numIntersection||(c.needsUpdate=!0)),c.needsUpdate&&(wa(c,e,b),c.needsUpdate=!1);var n,r,f=!1,o=!1,s=!1,p=t.program,v=p.getUniforms(),w=t.shader.uniforms;if(g.useProgram(p.program)&&(f=!0,o=!0,s=!0),c.id!==F&&(F=c.id,o=!0),f||H!==a){if(p.numMultiviewViews>0?fa.updateCameraProjectionMatricesUniform(a,v):v.setValue(u,"projectionMatrix",a.projectionMatrix),m.logarithmicDepthBuffer&&v.setValue(u,"logDepthBufFC",2/(Math.log(a.far+1)/Math.LN2)),H!==a&&(H=a,o=!0,s=!0),c.isShaderMaterial||c.isMeshPhongMaterial||c.isMeshStandardMaterial||c.envMap){var _=v.map.cameraPosition;void 0!==_&&_.setValue(u,ta.setFromMatrixPosition(a.matrixWorld))}(c.isMeshPhongMaterial||c.isMeshLambertMaterial||c.isMeshBasicMaterial||c.isMeshStandardMaterial||c.isShaderMaterial||c.skinning)&&(p.numMultiviewViews>0?fa.updateCameraViewMatricesUniform(a,v):v.setValue(u,"viewMatrix",a.matrixWorldInverse))}if(c.skinning){v.setOptional(u,b,"bindMatrix"),v.setOptional(u,b,"bindMatrixInverse");var M=b.skeleton;if(M){var S=M.bones;if(m.floatVertexTextures){if(void 0===M.boneTexture){var T=Math.sqrt(4*S.length);T=Pe.ceilPowerOfTwo(T),T=Math.max(T,4);var E=new Float32Array(T*T*4);E.set(M.boneMatrices);var A=new ut(E,T,T,Ia,Ta);M.boneMatrices=E,M.boneTexture=A,M.boneTextureSize=T}v.setValue(u,"boneTexture",M.boneTexture,x),v.setValue(u,"boneTextureSize",M.boneTextureSize)}else v.setOptional(u,M,"boneMatrices")}}return(o||t.receiveShadow!==b.receiveShadow)&&(t.receiveShadow=b.receiveShadow,v.setValue(u,"receiveShadow",b.receiveShadow)),o&&(v.setValue(u,"toneMappingExposure",O.toneMappingExposure),v.setValue(u,"toneMappingWhitePoint",O.toneMappingWhitePoint),t.needsLights&&(r=s,(n=w).ambientLightColor.needsUpdate=r,n.lightProbe.needsUpdate=r,n.directionalLights.needsUpdate=r,n.pointLights.needsUpdate=r,n.spotLights.needsUpdate=r,n.rectAreaLights.needsUpdate=r,n.hemisphereLights.needsUpdate=r),e&&c.fog&&function(a,e){a.fogColor.value.copy(e.color),e.isFog?(a.fogNear.value=e.near,a.fogFar.value=e.far):e.isFogExp2&&(a.fogDensity.value=e.density)}(w,e),c.isMeshBasicMaterial?Ma(w,c):c.isMeshLambertMaterial?(Ma(w,c),function(a,e){e.emissiveMap&&(a.emissiveMap.value=e.emissiveMap)}(w,c)):c.isMeshPhongMaterial?(Ma(w,c),c.isMeshToonMaterial?function(a,e){Sa(a,e),e.gradientMap&&(a.gradientMap.value=e.gradientMap)}(w,c):Sa(w,c)):c.isMeshStandardMaterial?(Ma(w,c),c.isMeshPhysicalMaterial?function(a,e){Aa(a,e),a.reflectivity.value=e.reflectivity,a.clearcoat.value=e.clearcoat,a.clearcoatRoughness.value=e.clearcoatRoughness,e.sheen&&a.sheen.value.copy(e.sheen);e.clearcoatNormalMap&&(a.clearcoatNormalScale.value.copy(e.clearcoatNormalScale),a.clearcoatNormalMap.value=e.clearcoatNormalMap,e.side===l&&a.clearcoatNormalScale.value.negate());a.transparency.value=e.transparency}(w,c):Aa(w,c)):c.isMeshMatcapMaterial?(Ma(w,c),function(a,e){e.matcap&&(a.matcap.value=e.matcap);e.bumpMap&&(a.bumpMap.value=e.bumpMap,a.bumpScale.value=e.bumpScale,e.side===l&&(a.bumpScale.value*=-1));e.normalMap&&(a.normalMap.value=e.normalMap,a.normalScale.value.copy(e.normalScale),e.side===l&&a.normalScale.value.negate());e.displacementMap&&(a.displacementMap.value=e.displacementMap,a.displacementScale.value=e.displacementScale,a.displacementBias.value=e.displacementBias)}(w,c)):c.isMeshDepthMaterial?(Ma(w,c),function(a,e){e.displacementMap&&(a.displacementMap.value=e.displacementMap,a.displacementScale.value=e.displacementScale,a.displacementBias.value=e.displacementBias)}(w,c)):c.isMeshDistanceMaterial?(Ma(w,c),function(a,e){e.displacementMap&&(a.displacementMap.value=e.displacementMap,a.displacementScale.value=e.displacementScale,a.displacementBias.value=e.displacementBias);a.referencePosition.value.copy(e.referencePosition),a.nearDistance.value=e.nearDistance,a.farDistance.value=e.farDistance}(w,c)):c.isMeshNormalMaterial?(Ma(w,c),function(a,e){e.bumpMap&&(a.bumpMap.value=e.bumpMap,a.bumpScale.value=e.bumpScale,e.side===l&&(a.bumpScale.value*=-1));e.normalMap&&(a.normalMap.value=e.normalMap,a.normalScale.value.copy(e.normalScale),e.side===l&&a.normalScale.value.negate());e.displacementMap&&(a.displacementMap.value=e.displacementMap,a.displacementScale.value=e.displacementScale,a.displacementBias.value=e.displacementBias)}(w,c)):c.isLineBasicMaterial?(function(a,e){a.diffuse.value.copy(e.color),a.opacity.value=e.opacity}(w,c),c.isLineDashedMaterial&&function(a,e){a.dashSize.value=e.dashSize,a.totalSize.value=e.dashSize+e.gapSize,a.scale.value=e.scale}(w,c)):c.isPointsMaterial?function(a,e){a.diffuse.value.copy(e.color),a.opacity.value=e.opacity,a.size.value=e.size*Y,a.scale.value=.5*X,a.map.value=e.map,null!==e.map&&(!0===e.map.matrixAutoUpdate&&e.map.updateMatrix(),a.uvTransform.value.copy(e.map.matrix))}(w,c):c.isSpriteMaterial?function(a,e){a.diffuse.value.copy(e.color),a.opacity.value=e.opacity,a.rotation.value=e.rotation,a.map.value=e.map,null!==e.map&&(!0===e.map.matrixAutoUpdate&&e.map.updateMatrix(),a.uvTransform.value.copy(e.map.matrix))}(w,c):c.isShadowMaterial&&(w.color.value.copy(c.color),w.opacity.value=c.opacity),void 0!==w.ltc_1&&(w.ltc_1.value=Mt.LTC_1),void 0!==w.ltc_2&&(w.ltc_2.value=Mt.LTC_2),zd.upload(u,t.uniformsList,w,x)),c.isShaderMaterial&&!0===c.uniformsNeedUpdate&&(zd.upload(u,t.uniformsList,w,x),c.uniformsNeedUpdate=!1),c.isSpriteMaterial&&v.setValue(u,"center",b.center),p.numMultiviewViews>0?fa.updateObjectMatricesUniforms(b,a,v):(v.setValue(u,"modelViewMatrix",b.modelViewMatrix),v.setValue(u,"normalMatrix",b.normalMatrix)),v.setValue(u,"modelMatrix",b.matrixWorld),p}function Ma(a,e){var c;a.opacity.value=e.opacity,e.color&&a.diffuse.value.copy(e.color),e.emissive&&a.emissive.value.copy(e.emissive).multiplyScalar(e.emissiveIntensity),e.map&&(a.map.value=e.map),e.alphaMap&&(a.alphaMap.value=e.alphaMap),e.specularMap&&(a.specularMap.value=e.specularMap),e.envMap&&(a.envMap.value=e.envMap,a.flipEnvMap.value=e.envMap.isCubeTexture?-1:1,a.reflectivity.value=e.reflectivity,a.refractionRatio.value=e.refractionRatio,a.maxMipLevel.value=y.get(e.envMap).__maxMipLevel),e.lightMap&&(a.lightMap.value=e.lightMap,a.lightMapIntensity.value=e.lightMapIntensity),e.aoMap&&(a.aoMap.value=e.aoMap,a.aoMapIntensity.value=e.aoMapIntensity),e.map?c=e.map:e.specularMap?c=e.specularMap:e.displacementMap?c=e.displacementMap:e.normalMap?c=e.normalMap:e.bumpMap?c=e.bumpMap:e.roughnessMap?c=e.roughnessMap:e.metalnessMap?c=e.metalnessMap:e.alphaMap?c=e.alphaMap:e.emissiveMap&&(c=e.emissiveMap),void 0!==c&&(c.isWebGLRenderTarget&&(c=c.texture),!0===c.matrixAutoUpdate&&c.updateMatrix(),a.uvTransform.value.copy(c.matrix))}function Sa(a,e){a.specular.value.copy(e.specular),a.shininess.value=Math.max(e.shininess,1e-4),e.emissiveMap&&(a.emissiveMap.value=e.emissiveMap),e.bumpMap&&(a.bumpMap.value=e.bumpMap,a.bumpScale.value=e.bumpScale,e.side===l&&(a.bumpScale.value*=-1)),e.normalMap&&(a.normalMap.value=e.normalMap,a.normalScale.value.copy(e.normalScale),e.side===l&&a.normalScale.value.negate()),e.displacementMap&&(a.displacementMap.value=e.displacementMap,a.displacementScale.value=e.displacementScale,a.displacementBias.value=e.displacementBias)}function Aa(a,e){a.roughness.value=e.roughness,a.metalness.value=e.metalness,e.roughnessMap&&(a.roughnessMap.value=e.roughnessMap),e.metalnessMap&&(a.metalnessMap.value=e.metalnessMap),e.emissiveMap&&(a.emissiveMap.value=e.emissiveMap),e.bumpMap&&(a.bumpMap.value=e.bumpMap,a.bumpScale.value=e.bumpScale,e.side===l&&(a.bumpScale.value*=-1)),e.normalMap&&(a.normalMap.value=e.normalMap,a.normalScale.value.copy(e.normalScale),e.side===l&&a.normalScale.value.negate()),e.displacementMap&&(a.displacementMap.value=e.displacementMap,a.displacementScale.value=e.displacementScale,a.displacementBias.value=e.displacementBias),e.envMap&&(a.envMapIntensity.value=e.envMapIntensity)}ma.setAnimationLoop((function(a){ra.isPresenting()||pa&&pa(a)})),"undefined"!=typeof window&&ma.setContext(window),this.setAnimationLoop=function(a){pa=a,ra.setAnimationLoop(a),ma.start()},this.render=function(a,e){var c,b;if(void 0!==arguments[2]&&(console.warn("THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead."),c=arguments[2]),void 0!==arguments[3]&&(console.warn("THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead."),b=arguments[3]),e&&e.isCamera){if(!I){G.geometry=null,G.program=null,G.wireframe=!1,F=-1,H=null,!0===a.autoUpdate&&a.updateMatrixWorld(),null===e.parent&&e.updateMatrixWorld(),ra.enabled&&(e=ra.getCamera(e)),(h=E.get(a,e)).init(),a.onBeforeRender(O,a,e,c||U),ba.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),$.setFromMatrix(ba),ca=this.localClippingEnabled,ea=aa.init(this.clippingPlanes,ca,e),(s=T.get(a,e)).init(),ga(a,e,0,O.sortObjects),!0===O.sortObjects&&s.sort(),ea&&aa.beginShadows();var t=h.state.shadowsArray;oa.render(t,a,e),h.setupLights(e),ea&&aa.endShadows(),this.info.autoReset&&this.info.reset(),void 0!==c&&this.setRenderTarget(c),ra.enabled&&fa.isAvailable()&&fa.attachCamera(e),A.render(s,a,e,b);var d=s.opaque,i=s.transparent;if(a.overrideMaterial){var n=a.overrideMaterial;d.length&&va(d,a,e,n),i.length&&va(i,a,e,n)}else d.length&&va(d,a,e),i.length&&va(i,a,e);a.onAfterRender(O,a,e),null!==U&&(x.updateRenderTargetMipmap(U),x.updateMultisampleRenderTarget(U)),g.buffers.depth.setTest(!0),g.buffers.depth.setMask(!0),g.buffers.color.setMask(!0),g.setPolygonOffset(!1),ra.enabled&&(fa.isAvailable()&&fa.detachCamera(e),ra.submitFrame()),s=null,h=null}}else console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.")},this.setFramebuffer=function(a){N!==a&&u.bindFramebuffer(36160,a),N=a},this.getActiveCubeFace=function(){return D},this.getActiveMipmapLevel=function(){return z},this.getRenderTarget=function(){return U},this.setRenderTarget=function(a,e,c){U=a,D=e,z=c,a&&void 0===y.get(a).__webglFramebuffer&&x.setupRenderTarget(a);var b=N,t=!1;if(a){var d=y.get(a).__webglFramebuffer;a.isWebGLRenderTargetCube?(b=d[e||0],t=!0):b=a.isWebGLMultisampleRenderTarget?y.get(a).__webglMultisampledFramebuffer:d,k.copy(a.viewport),j.copy(a.scissor),W=a.scissorTest}else k.copy(Z).multiplyScalar(Y).floor(),j.copy(J).multiplyScalar(Y).floor(),W=K;if(B!==b&&(u.bindFramebuffer(36160,b),B=b),g.viewport(k),g.scissor(j),g.setScissorTest(W),t){var i=y.get(a.texture);u.framebufferTexture2D(36160,36064,34069+(e||0),i.__webglTexture,c||0)}},this.readRenderTargetPixels=function(a,e,c,b,t,d,i){if(a&&a.isWebGLRenderTarget){var n=y.get(a).__webglFramebuffer;if(a.isWebGLRenderTargetCube&&void 0!==i&&(n=n[i]),n){var r=!1;n!==B&&(u.bindFramebuffer(36160,n),r=!0);try{var f=a.texture,o=f.format,s=f.type;if(o!==Ia&&C.convert(o)!==u.getParameter(35739))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");if(!(s===ya||C.convert(s)===u.getParameter(35738)||s===Ta&&(m.isWebGL2||p.get("OES_texture_float")||p.get("WEBGL_color_buffer_float"))||s===Ea&&(m.isWebGL2?p.get("EXT_color_buffer_float"):p.get("EXT_color_buffer_half_float"))))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");36053===u.checkFramebufferStatus(36160)?e>=0&&e<=a.width-b&&c>=0&&c<=a.height-t&&u.readPixels(e,c,b,t,C.convert(o),C.convert(s),d):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{r&&u.bindFramebuffer(36160,B)}}}else console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.")},this.copyFramebufferToTexture=function(a,e,c){var b=e.image.width,t=e.image.height,d=C.convert(e.format);x.setTexture2D(e,0),u.copyTexImage2D(3553,c||0,d,a.x,a.y,b,t,0)},this.copyTextureToTexture=function(a,e,c,b){var t=e.image.width,d=e.image.height,i=C.convert(c.format),n=C.convert(c.type);x.setTexture2D(c,0),e.isDataTexture?u.texSubImage2D(3553,b||0,a.x,a.y,t,d,i,n,e.image.data):u.texSubImage2D(3553,b||0,a.x,a.y,i,n,e.image)},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}function Ci(a,e){this.name="",this.color=new cb(a),this.density=void 0!==e?e:25e-5}function Oi(a,e,c){this.name="",this.color=new cb(a),this.near=void 0!==e?e:1,this.far=void 0!==c?c:1e3}function Ii(a,e){this.array=a,this.stride=e,this.count=void 0!==a?a.length/e:0,this.dynamic=!1,this.updateRange={offset:0,count:-1},this.version=0}function Ni(a,e,c,b){this.data=a,this.itemSize=e,this.offset=c,this.normalized=!0===b}function Di(a){rb.call(this),this.type="SpriteMaterial",this.color=new cb(16777215),this.map=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.setValues(a)}Object.assign(Li.prototype,Ae.prototype),Object.assign(Ri.prototype,Ae.prototype),Object.assign(Ci.prototype,{isFogExp2:!0,clone:function(){return new Ci(this.color,this.density)},toJSON:function(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}),Object.assign(Oi.prototype,{isFog:!0,clone:function(){return new Oi(this.color,this.near,this.far)},toJSON:function(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}),Object.defineProperty(Ii.prototype,"needsUpdate",{set:function(a){!0===a&&this.version++}}),Object.assign(Ii.prototype,{isInterleavedBuffer:!0,onUploadCallback:function(){},setDynamic:function(a){return this.dynamic=a,this},copy:function(a){return this.array=new a.array.constructor(a.array),this.count=a.count,this.stride=a.stride,this.dynamic=a.dynamic,this},copyAt:function(a,e,c){a*=this.stride,c*=e.stride;for(var b=0,t=this.stride;b<t;b++)this.array[a+b]=e.array[c+b];return this},set:function(a,e){return void 0===e&&(e=0),this.array.set(a,e),this},clone:function(){return(new this.constructor).copy(this)},onUpload:function(a){return this.onUploadCallback=a,this}}),Object.defineProperties(Ni.prototype,{count:{get:function(){return this.data.count}},array:{get:function(){return this.data.array}}}),Object.assign(Ni.prototype,{isInterleavedBufferAttribute:!0,setX:function(a,e){return this.data.array[a*this.data.stride+this.offset]=e,this},setY:function(a,e){return this.data.array[a*this.data.stride+this.offset+1]=e,this},setZ:function(a,e){return this.data.array[a*this.data.stride+this.offset+2]=e,this},setW:function(a,e){return this.data.array[a*this.data.stride+this.offset+3]=e,this},getX:function(a){return this.data.array[a*this.data.stride+this.offset]},getY:function(a){return this.data.array[a*this.data.stride+this.offset+1]},getZ:function(a){return this.data.array[a*this.data.stride+this.offset+2]},getW:function(a){return this.data.array[a*this.data.stride+this.offset+3]},setXY:function(a,e,c){return a=a*this.data.stride+this.offset,this.data.array[a+0]=e,this.data.array[a+1]=c,this},setXYZ:function(a,e,c,b){return a=a*this.data.stride+this.offset,this.data.array[a+0]=e,this.data.array[a+1]=c,this.data.array[a+2]=b,this},setXYZW:function(a,e,c,b,t){return a=a*this.data.stride+this.offset,this.data.array[a+0]=e,this.data.array[a+1]=c,this.data.array[a+2]=b,this.data.array[a+3]=t,this}}),Di.prototype=Object.create(rb.prototype),Di.prototype.constructor=Di,Di.prototype.isSpriteMaterial=!0,Di.prototype.copy=function(a){return rb.prototype.copy.call(this,a),this.color.copy(a.color),this.map=a.map,this.rotation=a.rotation,this.sizeAttenuation=a.sizeAttenuation,this};var zi=new De,Ui=new De,Bi=new De,Fi=new Ce,Gi=new Ce,Hi=new Qe,Vi=new De,ki=new De,ji=new De,Wi=new Ce,qi=new Ce,Xi=new Ce;function Yi(a){if(mc.call(this),this.type="Sprite",void 0===Si){Si=new Rb;var e=new Ii(new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),5);Si.setIndex([0,1,2,0,2,3]),Si.addAttribute("position",new Ni(e,3,0,!1)),Si.addAttribute("uv",new Ni(e,2,3,!1))}this.geometry=Si,this.material=void 0!==a?a:new Di,this.center=new Ce(.5,.5)}function Zi(a,e,c,b,t,d){Fi.subVectors(a,c).addScalar(.5).multiply(b),void 0!==t?(Gi.x=d*Fi.x-t*Fi.y,Gi.y=t*Fi.x+d*Fi.y):Gi.copy(Fi),a.copy(e),a.x+=Gi.x,a.y+=Gi.y,a.applyMatrix4(Hi)}Yi.prototype=Object.assign(Object.create(mc.prototype),{constructor:Yi,isSprite:!0,raycast:function(a,e){null===a.camera&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),Ui.setFromMatrixScale(this.matrixWorld),Hi.copy(a.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(a.camera.matrixWorldInverse,this.matrixWorld),Bi.setFromMatrixPosition(this.modelViewMatrix),a.camera.isPerspectiveCamera&&!1===this.material.sizeAttenuation&&Ui.multiplyScalar(-Bi.z);var c,b,t=this.material.rotation;0!==t&&(b=Math.cos(t),c=Math.sin(t));var d=this.center;Zi(Vi.set(-.5,-.5,0),Bi,d,Ui,c,b),Zi(ki.set(.5,-.5,0),Bi,d,Ui,c,b),Zi(ji.set(.5,.5,0),Bi,d,Ui,c,b),Wi.set(0,0),qi.set(1,0),Xi.set(1,1);var i=a.ray.intersectTriangle(Vi,ki,ji,!1,zi);if(null!==i||(Zi(ki.set(-.5,.5,0),Bi,d,Ui,c,b),qi.set(0,1),null!==(i=a.ray.intersectTriangle(Vi,ji,ki,!1,zi)))){var n=a.ray.origin.distanceTo(zi);n<a.near||n>a.far||e.push({distance:n,point:zi.clone(),uv:Qc.getUV(zi,Vi,ki,ji,Wi,qi,Xi,new Ce),face:null,object:this})}},clone:function(){return new this.constructor(this.material).copy(this)},copy:function(a){return mc.prototype.copy.call(this,a),void 0!==a.center&&this.center.copy(a.center),this}});var Ji=new De,Ki=new De;function Qi(){mc.call(this),this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]}}),this.autoUpdate=!0}function $i(a,e){a&&a.isGeometry&&console.error("THREE.SkinnedMesh no longer supports THREE.Geometry. Use THREE.BufferGeometry instead."),Xb.call(this,a,e),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new Qe,this.bindMatrixInverse=new Qe}Qi.prototype=Object.assign(Object.create(mc.prototype),{constructor:Qi,isLOD:!0,copy:function(a){mc.prototype.copy.call(this,a,!1);for(var e=a.levels,c=0,b=e.length;c<b;c++){var t=e[c];this.addLevel(t.object.clone(),t.distance)}return this},addLevel:function(a,e){void 0===e&&(e=0),e=Math.abs(e);for(var c=this.levels,b=0;b<c.length&&!(e<c[b].distance);b++);return c.splice(b,0,{distance:e,object:a}),this.add(a),this},getObjectForDistance:function(a){for(var e=this.levels,c=1,b=e.length;c<b&&!(a<e[c].distance);c++);return e[c-1].object},raycast:function(a,e){Ji.setFromMatrixPosition(this.matrixWorld);var c=a.ray.origin.distanceTo(Ji);this.getObjectForDistance(c).raycast(a,e)},update:function(a){var e=this.levels;if(e.length>1){Ji.setFromMatrixPosition(a.matrixWorld),Ki.setFromMatrixPosition(this.matrixWorld);var c=Ji.distanceTo(Ki);e[0].object.visible=!0;for(var b=1,t=e.length;b<t&&c>=e[b].distance;b++)e[b-1].object.visible=!1,e[b].object.visible=!0;for(;b<t;b++)e[b].object.visible=!1}},toJSON:function(a){var e=mc.prototype.toJSON.call(this,a);e.object.levels=[];for(var c=this.levels,b=0,t=c.length;b<t;b++){var d=c[b];e.object.levels.push({object:d.object.uuid,distance:d.distance})}return e}}),$i.prototype=Object.assign(Object.create(Xb.prototype),{constructor:$i,isSkinnedMesh:!0,bind:function(a,e){this.skeleton=a,void 0===e&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),e=this.matrixWorld),this.bindMatrix.copy(e),this.bindMatrixInverse.getInverse(e)},pose:function(){this.skeleton.pose()},normalizeSkinWeights:function(){for(var a=new Ve,e=this.geometry.attributes.skinWeight,c=0,b=e.count;c<b;c++){a.x=e.getX(c),a.y=e.getY(c),a.z=e.getZ(c),a.w=e.getW(c);var t=1/a.manhattanLength();t!==1/0?a.multiplyScalar(t):a.set(1,0,0,0),e.setXYZW(c,a.x,a.y,a.z,a.w)}},updateMatrixWorld:function(a){Xb.prototype.updateMatrixWorld.call(this,a),"attached"===this.bindMode?this.bindMatrixInverse.getInverse(this.matrixWorld):"detached"===this.bindMode?this.bindMatrixInverse.getInverse(this.bindMatrix):console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)},clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}});var an=new Qe,en=new Qe;function cn(a,e){if(a=a||[],this.bones=a.slice(0),this.boneMatrices=new Float32Array(16*this.bones.length),this.frame=-1,void 0===e)this.calculateInverses();else if(this.bones.length===e.length)this.boneInverses=e.slice(0);else{console.warn("THREE.Skeleton boneInverses is the wrong length."),this.boneInverses=[];for(var c=0,b=this.bones.length;c<b;c++)this.boneInverses.push(new Qe)}}function bn(){mc.call(this),this.type="Bone"}function tn(a,e,c){Xb.call(this,a,e),this.instanceMatrix=new ob(new Float32Array(16*c),16),this.count=c}function dn(a){rb.call(this),this.type="LineBasicMaterial",this.color=new cb(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.setValues(a)}Object.assign(cn.prototype,{calculateInverses:function(){this.boneInverses=[];for(var a=0,e=this.bones.length;a<e;a++){var c=new Qe;this.bones[a]&&c.getInverse(this.bones[a].matrixWorld),this.boneInverses.push(c)}},pose:function(){var a,e,c;for(e=0,c=this.bones.length;e<c;e++)(a=this.bones[e])&&a.matrixWorld.getInverse(this.boneInverses[e]);for(e=0,c=this.bones.length;e<c;e++)(a=this.bones[e])&&(a.parent&&a.parent.isBone?(a.matrix.getInverse(a.parent.matrixWorld),a.matrix.multiply(a.matrixWorld)):a.matrix.copy(a.matrixWorld),a.matrix.decompose(a.position,a.quaternion,a.scale))},update:function(){for(var a=this.bones,e=this.boneInverses,c=this.boneMatrices,b=this.boneTexture,t=0,d=a.length;t<d;t++){var i=a[t]?a[t].matrixWorld:en;an.multiplyMatrices(i,e[t]),an.toArray(c,16*t)}void 0!==b&&(b.needsUpdate=!0)},clone:function(){return new cn(this.bones,this.boneInverses)},getBoneByName:function(a){for(var e=0,c=this.bones.length;e<c;e++){var b=this.bones[e];if(b.name===a)return b}}}),bn.prototype=Object.assign(Object.create(mc.prototype),{constructor:bn,isBone:!0}),tn.prototype=Object.assign(Object.create(Xb.prototype),{constructor:tn,isInstancedMesh:!0,raycast:function(){},setMatrixAt:function(a,e){e.toArray(this.instanceMatrix.array,16*a)},updateMorphTargets:function(){}}),dn.prototype=Object.create(rb.prototype),dn.prototype.constructor=dn,dn.prototype.isLineBasicMaterial=!0,dn.prototype.copy=function(a){return rb.prototype.copy.call(this,a),this.color.copy(a.color),this.linewidth=a.linewidth,this.linecap=a.linecap,this.linejoin=a.linejoin,this};var nn=new De,rn=new De,fn=new Qe,on=new Hc,sn=new Ic;function hn(a,e,c){1===c&&console.error("THREE.Line: parameter THREE.LinePieces no longer supported. Use THREE.LineSegments instead."),mc.call(this),this.type="Line",this.geometry=void 0!==a?a:new Rb,this.material=void 0!==e?e:new dn({color:16777215*Math.random()})}hn.prototype=Object.assign(Object.create(mc.prototype),{constructor:hn,isLine:!0,computeLineDistances:function(){var a=this.geometry;if(a.isBufferGeometry)if(null===a.index){for(var e=a.attributes.position,c=[0],b=1,t=e.count;b<t;b++)nn.fromBufferAttribute(e,b-1),rn.fromBufferAttribute(e,b),c[b]=c[b-1],c[b]+=nn.distanceTo(rn);a.addAttribute("lineDistance",new vb(c,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else if(a.isGeometry){var d=a.vertices;(c=a.lineDistances)[0]=0;for(b=1,t=d.length;b<t;b++)c[b]=c[b-1],c[b]+=d[b-1].distanceTo(d[b])}return this},raycast:function(a,e){var c=a.linePrecision,b=this.geometry,t=this.matrixWorld;if(null===b.boundingSphere&&b.computeBoundingSphere(),sn.copy(b.boundingSphere),sn.applyMatrix4(t),sn.radius+=c,!1!==a.ray.intersectsSphere(sn)){fn.getInverse(t),on.copy(a.ray).applyMatrix4(fn);var d=c/((this.scale.x+this.scale.y+this.scale.z)/3),i=d*d,n=new De,r=new De,f=new De,o=new De,s=this&&this.isLineSegments?2:1;if(b.isBufferGeometry){var h=b.index,l=b.attributes.position.array;if(null!==h)for(var u=h.array,p=0,m=u.length-1;p<m;p+=s){var g=u[p],v=u[p+1];if(n.fromArray(l,3*g),r.fromArray(l,3*v),!(on.distanceSqToSegment(n,r,o,f)>i))o.applyMatrix4(this.matrixWorld),(w=a.ray.origin.distanceTo(o))<a.near||w>a.far||e.push({distance:w,point:f.clone().applyMatrix4(this.matrixWorld),index:p,face:null,faceIndex:null,object:this})}else for(p=0,m=l.length/3-1;p<m;p+=s){if(n.fromArray(l,3*p),r.fromArray(l,3*p+3),!(on.distanceSqToSegment(n,r,o,f)>i))o.applyMatrix4(this.matrixWorld),(w=a.ray.origin.distanceTo(o))<a.near||w>a.far||e.push({distance:w,point:f.clone().applyMatrix4(this.matrixWorld),index:p,face:null,faceIndex:null,object:this})}}else if(b.isGeometry){var y=b.vertices,x=y.length;for(p=0;p<x-1;p+=s){var w;if(!(on.distanceSqToSegment(y[p],y[p+1],o,f)>i))o.applyMatrix4(this.matrixWorld),(w=a.ray.origin.distanceTo(o))<a.near||w>a.far||e.push({distance:w,point:f.clone().applyMatrix4(this.matrixWorld),index:p,face:null,faceIndex:null,object:this})}}}},clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}});var ln=new De,un=new De;function pn(a,e){hn.call(this,a,e),this.type="LineSegments"}function mn(a,e){hn.call(this,a,e),this.type="LineLoop"}function gn(a){rb.call(this),this.type="PointsMaterial",this.color=new cb(16777215),this.map=null,this.size=1,this.sizeAttenuation=!0,this.morphTargets=!1,this.setValues(a)}pn.prototype=Object.assign(Object.create(hn.prototype),{constructor:pn,isLineSegments:!0,computeLineDistances:function(){var a=this.geometry;if(a.isBufferGeometry)if(null===a.index){for(var e=a.attributes.position,c=[],b=0,t=e.count;b<t;b+=2)ln.fromBufferAttribute(e,b),un.fromBufferAttribute(e,b+1),c[b]=0===b?0:c[b-1],c[b+1]=c[b]+ln.distanceTo(un);a.addAttribute("lineDistance",new vb(c,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else if(a.isGeometry){var d=a.vertices;for(c=a.lineDistances,b=0,t=d.length;b<t;b+=2)ln.copy(d[b]),un.copy(d[b+1]),c[b]=0===b?0:c[b-1],c[b+1]=c[b]+ln.distanceTo(un)}return this}}),mn.prototype=Object.assign(Object.create(hn.prototype),{constructor:mn,isLineLoop:!0}),gn.prototype=Object.create(rb.prototype),gn.prototype.constructor=gn,gn.prototype.isPointsMaterial=!0,gn.prototype.copy=function(a){return rb.prototype.copy.call(this,a),this.color.copy(a.color),this.map=a.map,this.size=a.size,this.sizeAttenuation=a.sizeAttenuation,this.morphTargets=a.morphTargets,this};var vn=new Qe,yn=new Hc,xn=new Ic,wn=new De;function _n(a,e){mc.call(this),this.type="Points",this.geometry=void 0!==a?a:new Rb,this.material=void 0!==e?e:new gn({color:16777215*Math.random()}),this.updateMorphTargets()}function Mn(a,e,c,b,t,d,i){var n=yn.distanceSqToPoint(a);if(n<c){var r=new De;yn.closestPointToPoint(a,r),r.applyMatrix4(b);var f=t.ray.origin.distanceTo(r);if(f<t.near||f>t.far)return;d.push({distance:f,distanceToRay:Math.sqrt(n),point:r,index:e,face:null,object:i})}}function Sn(a,e,c,b,t,d,i,n,r){He.call(this,a,e,c,b,t,d,i,n,r),this.format=void 0!==i?i:Oa,this.minFilter=void 0!==d?d:ma,this.magFilter=void 0!==t?t:ma,this.generateMipmaps=!1}function Tn(a,e,c,b,t,d,i,n,r,f,o,s){He.call(this,null,d,i,n,r,f,b,t,o,s),this.image={width:e,height:c},this.mipmaps=a,this.flipY=!1,this.generateMipmaps=!1}function En(a,e,c,b,t,d,i,n,r){He.call(this,a,e,c,b,t,d,i,n,r),this.needsUpdate=!0}function An(a,e,c,b,t,d,i,n,r,f){if((f=void 0!==f?f:za)!==za&&f!==Ua)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===c&&f===za&&(c=_a),void 0===c&&f===Ua&&(c=Pa),He.call(this,null,b,t,d,i,n,f,c,r),this.image={width:a,height:e},this.magFilter=void 0!==i?i:la,this.minFilter=void 0!==n?n:la,this.flipY=!1,this.generateMipmaps=!1}function Ln(a){Rb.call(this),this.type="WireframeGeometry";var e,c,b,t,d,i,n,r,f,o,s=[],h=[0,0],l={},u=["a","b","c"];if(a&&a.isGeometry){var p=a.faces;for(e=0,b=p.length;e<b;e++){var m=p[e];for(c=0;c<3;c++)n=m[u[c]],r=m[u[(c+1)%3]],h[0]=Math.min(n,r),h[1]=Math.max(n,r),void 0===l[f=h[0]+","+h[1]]&&(l[f]={index1:h[0],index2:h[1]})}for(f in l)i=l[f],o=a.vertices[i.index1],s.push(o.x,o.y,o.z),o=a.vertices[i.index2],s.push(o.x,o.y,o.z)}else if(a&&a.isBufferGeometry){var g,v,y,x,w,_,M;if(o=new De,null!==a.index){for(g=a.attributes.position,v=a.index,0===(y=a.groups).length&&(y=[{start:0,count:v.count,materialIndex:0}]),t=0,d=y.length;t<d;++t)for(e=w=(x=y[t]).start,b=w+x.count;e<b;e+=3)for(c=0;c<3;c++)n=v.getX(e+c),r=v.getX(e+(c+1)%3),h[0]=Math.min(n,r),h[1]=Math.max(n,r),void 0===l[f=h[0]+","+h[1]]&&(l[f]={index1:h[0],index2:h[1]});for(f in l)i=l[f],o.fromBufferAttribute(g,i.index1),s.push(o.x,o.y,o.z),o.fromBufferAttribute(g,i.index2),s.push(o.x,o.y,o.z)}else for(e=0,b=(g=a.attributes.position).count/3;e<b;e++)for(c=0;c<3;c++)_=3*e+c,o.fromBufferAttribute(g,_),s.push(o.x,o.y,o.z),M=3*e+(c+1)%3,o.fromBufferAttribute(g,M),s.push(o.x,o.y,o.z)}this.addAttribute("position",new vb(s,3))}function Rn(a,e,c){at.call(this),this.type="ParametricGeometry",this.parameters={func:a,slices:e,stacks:c},this.fromBufferGeometry(new Pn(a,e,c)),this.mergeVertices()}function Pn(a,e,c){Rb.call(this),this.type="ParametricBufferGeometry",this.parameters={func:a,slices:e,stacks:c};var b,t,d=[],i=[],n=[],r=[],f=new De,o=new De,s=new De,h=new De,l=new De;a.length<3&&console.error("THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.");var u=e+1;for(b=0;b<=c;b++){var p=b/c;for(t=0;t<=e;t++){var m=t/e;a(m,p,o),i.push(o.x,o.y,o.z),m-1e-5>=0?(a(m-1e-5,p,s),h.subVectors(o,s)):(a(m+1e-5,p,s),h.subVectors(s,o)),p-1e-5>=0?(a(m,p-1e-5,s),l.subVectors(o,s)):(a(m,p+1e-5,s),l.subVectors(s,o)),f.crossVectors(h,l).normalize(),n.push(f.x,f.y,f.z),r.push(m,p)}}for(b=0;b<c;b++)for(t=0;t<e;t++){var g=b*u+t,v=b*u+t+1,y=(b+1)*u+t+1,x=(b+1)*u+t;d.push(g,v,x),d.push(v,y,x)}this.setIndex(d),this.addAttribute("position",new vb(i,3)),this.addAttribute("normal",new vb(n,3)),this.addAttribute("uv",new vb(r,2))}function Cn(a,e,c,b){at.call(this),this.type="PolyhedronGeometry",this.parameters={vertices:a,indices:e,radius:c,detail:b},this.fromBufferGeometry(new On(a,e,c,b)),this.mergeVertices()}function On(a,e,c,b){Rb.call(this),this.type="PolyhedronBufferGeometry",this.parameters={vertices:a,indices:e,radius:c,detail:b},c=c||1;var t=[],d=[];function i(a,e,c,b){var t,d,i=Math.pow(2,b),r=[];for(t=0;t<=i;t++){r[t]=[];var f=a.clone().lerp(c,t/i),o=e.clone().lerp(c,t/i),s=i-t;for(d=0;d<=s;d++)r[t][d]=0===d&&t===i?f:f.clone().lerp(o,d/s)}for(t=0;t<i;t++)for(d=0;d<2*(i-t)-1;d++){var h=Math.floor(d/2);d%2==0?(n(r[t][h+1]),n(r[t+1][h]),n(r[t][h])):(n(r[t][h+1]),n(r[t+1][h+1]),n(r[t+1][h]))}}function n(a){t.push(a.x,a.y,a.z)}function r(e,c){var b=3*e;c.x=a[b+0],c.y=a[b+1],c.z=a[b+2]}function f(a,e,c,b){b<0&&1===a.x&&(d[e]=a.x-1),0===c.x&&0===c.z&&(d[e]=b/2/Math.PI+.5)}function o(a){return Math.atan2(a.z,-a.x)}!function(a){for(var c=new De,b=new De,t=new De,d=0;d<e.length;d+=3)r(e[d+0],c),r(e[d+1],b),r(e[d+2],t),i(c,b,t,a)}(b=b||0),function(a){for(var e=new De,c=0;c<t.length;c+=3)e.x=t[c+0],e.y=t[c+1],e.z=t[c+2],e.normalize().multiplyScalar(a),t[c+0]=e.x,t[c+1]=e.y,t[c+2]=e.z}(c),function(){for(var a=new De,e=0;e<t.length;e+=3){a.x=t[e+0],a.y=t[e+1],a.z=t[e+2];var c=o(a)/2/Math.PI+.5,b=(i=a,Math.atan2(-i.y,Math.sqrt(i.x*i.x+i.z*i.z))/Math.PI+.5);d.push(c,1-b)}var i;(function(){for(var a=new De,e=new De,c=new De,b=new De,i=new Ce,n=new Ce,r=new Ce,s=0,h=0;s<t.length;s+=9,h+=6){a.set(t[s+0],t[s+1],t[s+2]),e.set(t[s+3],t[s+4],t[s+5]),c.set(t[s+6],t[s+7],t[s+8]),i.set(d[h+0],d[h+1]),n.set(d[h+2],d[h+3]),r.set(d[h+4],d[h+5]),b.copy(a).add(e).add(c).divideScalar(3);var l=o(b);f(i,h+0,a,l),f(n,h+2,e,l),f(r,h+4,c,l)}})(),function(){for(var a=0;a<d.length;a+=6){var e=d[a+0],c=d[a+2],b=d[a+4],t=Math.max(e,c,b),i=Math.min(e,c,b);t>.9&&i<.1&&(e<.2&&(d[a+0]+=1),c<.2&&(d[a+2]+=1),b<.2&&(d[a+4]+=1))}}()}(),this.addAttribute("position",new vb(t,3)),this.addAttribute("normal",new vb(t.slice(),3)),this.addAttribute("uv",new vb(d,2)),0===b?this.computeVertexNormals():this.normalizeNormals()}function In(a,e){at.call(this),this.type="TetrahedronGeometry",this.parameters={radius:a,detail:e},this.fromBufferGeometry(new Nn(a,e)),this.mergeVertices()}function Nn(a,e){On.call(this,[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],a,e),this.type="TetrahedronBufferGeometry",this.parameters={radius:a,detail:e}}function Dn(a,e){at.call(this),this.type="OctahedronGeometry",this.parameters={radius:a,detail:e},this.fromBufferGeometry(new zn(a,e)),this.mergeVertices()}function zn(a,e){On.call(this,[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],a,e),this.type="OctahedronBufferGeometry",this.parameters={radius:a,detail:e}}function Un(a,e){at.call(this),this.type="IcosahedronGeometry",this.parameters={radius:a,detail:e},this.fromBufferGeometry(new Bn(a,e)),this.mergeVertices()}function Bn(a,e){var c=(1+Math.sqrt(5))/2,b=[-1,c,0,1,c,0,-1,-c,0,1,-c,0,0,-1,c,0,1,c,0,-1,-c,0,1,-c,c,0,-1,c,0,1,-c,0,-1,-c,0,1];On.call(this,b,[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],a,e),this.type="IcosahedronBufferGeometry",this.parameters={radius:a,detail:e}}function Fn(a,e){at.call(this),this.type="DodecahedronGeometry",this.parameters={radius:a,detail:e},this.fromBufferGeometry(new Gn(a,e)),this.mergeVertices()}function Gn(a,e){var c=(1+Math.sqrt(5))/2,b=1/c,t=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-b,-c,0,-b,c,0,b,-c,0,b,c,-b,-c,0,-b,c,0,b,-c,0,b,c,0,-c,0,-b,c,0,-b,-c,0,b,c,0,b];On.call(this,t,[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],a,e),this.type="DodecahedronBufferGeometry",this.parameters={radius:a,detail:e}}function Hn(a,e,c,b,t,d){at.call(this),this.type="TubeGeometry",this.parameters={path:a,tubularSegments:e,radius:c,radialSegments:b,closed:t},void 0!==d&&console.warn("THREE.TubeGeometry: taper has been removed.");var i=new Vn(a,e,c,b,t);this.tangents=i.tangents,this.normals=i.normals,this.binormals=i.binormals,this.fromBufferGeometry(i),this.mergeVertices()}function Vn(a,e,c,b,t){Rb.call(this),this.type="TubeBufferGeometry",this.parameters={path:a,tubularSegments:e,radius:c,radialSegments:b,closed:t},e=e||64,c=c||1,b=b||8,t=t||!1;var d=a.computeFrenetFrames(e,t);this.tangents=d.tangents,this.normals=d.normals,this.binormals=d.binormals;var i,n,r=new De,f=new De,o=new Ce,s=new De,h=[],l=[],u=[],p=[];function m(t){s=a.getPointAt(t/e,s);var i=d.normals[t],o=d.binormals[t];for(n=0;n<=b;n++){var u=n/b*Math.PI*2,p=Math.sin(u),m=-Math.cos(u);f.x=m*i.x+p*o.x,f.y=m*i.y+p*o.y,f.z=m*i.z+p*o.z,f.normalize(),l.push(f.x,f.y,f.z),r.x=s.x+c*f.x,r.y=s.y+c*f.y,r.z=s.z+c*f.z,h.push(r.x,r.y,r.z)}}!function(){for(i=0;i<e;i++)m(i);m(!1===t?e:0),function(){for(i=0;i<=e;i++)for(n=0;n<=b;n++)o.x=i/e,o.y=n/b,u.push(o.x,o.y)}(),function(){for(n=1;n<=e;n++)for(i=1;i<=b;i++){var a=(b+1)*(n-1)+(i-1),c=(b+1)*n+(i-1),t=(b+1)*n+i,d=(b+1)*(n-1)+i;p.push(a,c,d),p.push(c,t,d)}}()}(),this.setIndex(p),this.addAttribute("position",new vb(h,3)),this.addAttribute("normal",new vb(l,3)),this.addAttribute("uv",new vb(u,2))}function kn(a,e,c,b,t,d,i){at.call(this),this.type="TorusKnotGeometry",this.parameters={radius:a,tube:e,tubularSegments:c,radialSegments:b,p:t,q:d},void 0!==i&&console.warn("THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead."),this.fromBufferGeometry(new jn(a,e,c,b,t,d)),this.mergeVertices()}function jn(a,e,c,b,t,d){Rb.call(this),this.type="TorusKnotBufferGeometry",this.parameters={radius:a,tube:e,tubularSegments:c,radialSegments:b,p:t,q:d},a=a||1,e=e||.4,c=Math.floor(c)||64,b=Math.floor(b)||8,t=t||2,d=d||3;var i,n,r=[],f=[],o=[],s=[],h=new De,l=new De,u=new De,p=new De,m=new De,g=new De,v=new De;for(i=0;i<=c;++i){var y=i/c*t*Math.PI*2;for(A(y,t,d,a,u),A(y+.01,t,d,a,p),g.subVectors(p,u),v.addVectors(p,u),m.crossVectors(g,v),v.crossVectors(m,g),m.normalize(),v.normalize(),n=0;n<=b;++n){var x=n/b*Math.PI*2,w=-e*Math.cos(x),_=e*Math.sin(x);h.x=u.x+(w*v.x+_*m.x),h.y=u.y+(w*v.y+_*m.y),h.z=u.z+(w*v.z+_*m.z),f.push(h.x,h.y,h.z),l.subVectors(h,u).normalize(),o.push(l.x,l.y,l.z),s.push(i/c),s.push(n/b)}}for(n=1;n<=c;n++)for(i=1;i<=b;i++){var M=(b+1)*(n-1)+(i-1),S=(b+1)*n+(i-1),T=(b+1)*n+i,E=(b+1)*(n-1)+i;r.push(M,S,E),r.push(S,T,E)}function A(a,e,c,b,t){var d=Math.cos(a),i=Math.sin(a),n=c/e*a,r=Math.cos(n);t.x=b*(2+r)*.5*d,t.y=b*(2+r)*i*.5,t.z=b*Math.sin(n)*.5}this.setIndex(r),this.addAttribute("position",new vb(f,3)),this.addAttribute("normal",new vb(o,3)),this.addAttribute("uv",new vb(s,2))}function Wn(a,e,c,b,t){at.call(this),this.type="TorusGeometry",this.parameters={radius:a,tube:e,radialSegments:c,tubularSegments:b,arc:t},this.fromBufferGeometry(new qn(a,e,c,b,t)),this.mergeVertices()}function qn(a,e,c,b,t){Rb.call(this),this.type="TorusBufferGeometry",this.parameters={radius:a,tube:e,radialSegments:c,tubularSegments:b,arc:t},a=a||1,e=e||.4,c=Math.floor(c)||8,b=Math.floor(b)||6,t=t||2*Math.PI;var d,i,n=[],r=[],f=[],o=[],s=new De,h=new De,l=new De;for(d=0;d<=c;d++)for(i=0;i<=b;i++){var u=i/b*t,p=d/c*Math.PI*2;h.x=(a+e*Math.cos(p))*Math.cos(u),h.y=(a+e*Math.cos(p))*Math.sin(u),h.z=e*Math.sin(p),r.push(h.x,h.y,h.z),s.x=a*Math.cos(u),s.y=a*Math.sin(u),l.subVectors(h,s).normalize(),f.push(l.x,l.y,l.z),o.push(i/b),o.push(d/c)}for(d=1;d<=c;d++)for(i=1;i<=b;i++){var m=(b+1)*d+i-1,g=(b+1)*(d-1)+i-1,v=(b+1)*(d-1)+i,y=(b+1)*d+i;n.push(m,g,y),n.push(g,v,y)}this.setIndex(n),this.addAttribute("position",new vb(r,3)),this.addAttribute("normal",new vb(f,3)),this.addAttribute("uv",new vb(o,2))}_n.prototype=Object.assign(Object.create(mc.prototype),{constructor:_n,isPoints:!0,raycast:function(a,e){var c=this.geometry,b=this.matrixWorld,t=a.params.Points.threshold;if(null===c.boundingSphere&&c.computeBoundingSphere(),xn.copy(c.boundingSphere),xn.applyMatrix4(b),xn.radius+=t,!1!==a.ray.intersectsSphere(xn)){vn.getInverse(b),yn.copy(a.ray).applyMatrix4(vn);var d=t/((this.scale.x+this.scale.y+this.scale.z)/3),i=d*d;if(c.isBufferGeometry){var n=c.index,r=c.attributes.position.array;if(null!==n)for(var f=n.array,o=0,s=f.length;o<s;o++){var h=f[o];wn.fromArray(r,3*h),Mn(wn,h,i,b,a,e,this)}else{o=0;for(var l=r.length/3;o<l;o++)wn.fromArray(r,3*o),Mn(wn,o,i,b,a,e,this)}}else{var u=c.vertices;for(o=0,l=u.length;o<l;o++)Mn(u[o],o,i,b,a,e,this)}}},updateMorphTargets:function(){var a,e,c,b=this.geometry;if(b.isBufferGeometry){var t=b.morphAttributes,d=Object.keys(t);if(d.length>0){var i=t[d[0]];if(void 0!==i)for(this.morphTargetInfluences=[],this.morphTargetDictionary={},a=0,e=i.length;a<e;a++)c=i[a].name||String(a),this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=a}}else{var n=b.morphTargets;void 0!==n&&n.length>0&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}},clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}}),Sn.prototype=Object.assign(Object.create(He.prototype),{constructor:Sn,isVideoTexture:!0,update:function(){var a=this.image;a.readyState>=a.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}),Tn.prototype=Object.create(He.prototype),Tn.prototype.constructor=Tn,Tn.prototype.isCompressedTexture=!0,En.prototype=Object.create(He.prototype),En.prototype.constructor=En,En.prototype.isCanvasTexture=!0,An.prototype=Object.create(He.prototype),An.prototype.constructor=An,An.prototype.isDepthTexture=!0,Ln.prototype=Object.create(Rb.prototype),Ln.prototype.constructor=Ln,Rn.prototype=Object.create(at.prototype),Rn.prototype.constructor=Rn,Pn.prototype=Object.create(Rb.prototype),Pn.prototype.constructor=Pn,Cn.prototype=Object.create(at.prototype),Cn.prototype.constructor=Cn,On.prototype=Object.create(Rb.prototype),On.prototype.constructor=On,In.prototype=Object.create(at.prototype),In.prototype.constructor=In,Nn.prototype=Object.create(On.prototype),Nn.prototype.constructor=Nn,Dn.prototype=Object.create(at.prototype),Dn.prototype.constructor=Dn,zn.prototype=Object.create(On.prototype),zn.prototype.constructor=zn,Un.prototype=Object.create(at.prototype),Un.prototype.constructor=Un,Bn.prototype=Object.create(On.prototype),Bn.prototype.constructor=Bn,Fn.prototype=Object.create(at.prototype),Fn.prototype.constructor=Fn,Gn.prototype=Object.create(On.prototype),Gn.prototype.constructor=Gn,Hn.prototype=Object.create(at.prototype),Hn.prototype.constructor=Hn,Vn.prototype=Object.create(Rb.prototype),Vn.prototype.constructor=Vn,Vn.prototype.toJSON=function(){var a=Rb.prototype.toJSON.call(this);return a.path=this.parameters.path.toJSON(),a},kn.prototype=Object.create(at.prototype),kn.prototype.constructor=kn,jn.prototype=Object.create(Rb.prototype),jn.prototype.constructor=jn,Wn.prototype=Object.create(at.prototype),Wn.prototype.constructor=Wn,qn.prototype=Object.create(Rb.prototype),qn.prototype.constructor=qn;var Xn=function(a,e,c){c=c||2;var b,t,d,i,n,r,f,o=e&&e.length,s=o?e[0]*c:a.length,h=Yn(a,0,s,c,!0),l=[];if(!h||h.next===h.prev)return l;if(o&&(h=function(a,e,c,b){var t,d,i,n,r,f=[];for(t=0,d=e.length;t<d;t++)i=e[t]*b,n=t<d-1?e[t+1]*b:a.length,(r=Yn(a,i,n,b,!1))===r.next&&(r.steiner=!0),f.push(tr(r));for(f.sort(er),t=0;t<f.length;t++)cr(f[t],c),c=Zn(c,c.next);return c}(a,e,h,c)),a.length>80*c){b=d=a[0],t=i=a[1];for(var u=c;u<s;u+=c)(n=a[u])<b&&(b=n),(r=a[u+1])<t&&(t=r),n>d&&(d=n),r>i&&(i=r);f=0!==(f=Math.max(d-b,i-t))?1/f:0}return Jn(h,l,c,b,t,f),l};function Yn(a,e,c,b,t){var d,i;if(t===function(a,e,c,b){for(var t=0,d=e,i=c-b;d<c;d+=b)t+=(a[i]-a[d])*(a[d+1]+a[i+1]),i=d;return t}(a,e,c,b)>0)for(d=e;d<c;d+=b)i=hr(d,a[d],a[d+1],i);else for(d=c-b;d>=e;d-=b)i=hr(d,a[d],a[d+1],i);return i&&rr(i,i.next)&&(lr(i),i=i.next),i}function Zn(a,e){if(!a)return a;e||(e=a);var c,b=a;do{if(c=!1,b.steiner||!rr(b,b.next)&&0!==nr(b.prev,b,b.next))b=b.next;else{if(lr(b),(b=e=b.prev)===b.next)break;c=!0}}while(c||b!==e);return e}function Jn(a,e,c,b,t,d,i){if(a){!i&&d&&function(a,e,c,b){var t=a;do{null===t.z&&(t.z=br(t.x,t.y,e,c,b)),t.prevZ=t.prev,t.nextZ=t.next,t=t.next}while(t!==a);t.prevZ.nextZ=null,t.prevZ=null,function(a){var e,c,b,t,d,i,n,r,f=1;do{for(c=a,a=null,d=null,i=0;c;){for(i++,b=c,n=0,e=0;e<f&&(n++,b=b.nextZ);e++);for(r=f;n>0||r>0&&b;)0!==n&&(0===r||!b||c.z<=b.z)?(t=c,c=c.nextZ,n--):(t=b,b=b.nextZ,r--),d?d.nextZ=t:a=t,t.prevZ=d,d=t;c=b}d.nextZ=null,f*=2}while(i>1)}(t)}(a,b,t,d);for(var n,r,f=a;a.prev!==a.next;)if(n=a.prev,r=a.next,d?Qn(a,b,t,d):Kn(a))e.push(n.i/c),e.push(a.i/c),e.push(r.i/c),lr(a),a=r.next,f=r.next;else if((a=r)===f){i?1===i?Jn(a=$n(a,e,c),e,c,b,t,d,2):2===i&&ar(a,e,c,b,t,d):Jn(Zn(a),e,c,b,t,d,1);break}}}function Kn(a){var e=a.prev,c=a,b=a.next;if(nr(e,c,b)>=0)return!1;for(var t=a.next.next;t!==a.prev;){if(dr(e.x,e.y,c.x,c.y,b.x,b.y,t.x,t.y)&&nr(t.prev,t,t.next)>=0)return!1;t=t.next}return!0}function Qn(a,e,c,b){var t=a.prev,d=a,i=a.next;if(nr(t,d,i)>=0)return!1;for(var n=t.x<d.x?t.x<i.x?t.x:i.x:d.x<i.x?d.x:i.x,r=t.y<d.y?t.y<i.y?t.y:i.y:d.y<i.y?d.y:i.y,f=t.x>d.x?t.x>i.x?t.x:i.x:d.x>i.x?d.x:i.x,o=t.y>d.y?t.y>i.y?t.y:i.y:d.y>i.y?d.y:i.y,s=br(n,r,e,c,b),h=br(f,o,e,c,b),l=a.prevZ,u=a.nextZ;l&&l.z>=s&&u&&u.z<=h;){if(l!==a.prev&&l!==a.next&&dr(t.x,t.y,d.x,d.y,i.x,i.y,l.x,l.y)&&nr(l.prev,l,l.next)>=0)return!1;if(l=l.prevZ,u!==a.prev&&u!==a.next&&dr(t.x,t.y,d.x,d.y,i.x,i.y,u.x,u.y)&&nr(u.prev,u,u.next)>=0)return!1;u=u.nextZ}for(;l&&l.z>=s;){if(l!==a.prev&&l!==a.next&&dr(t.x,t.y,d.x,d.y,i.x,i.y,l.x,l.y)&&nr(l.prev,l,l.next)>=0)return!1;l=l.prevZ}for(;u&&u.z<=h;){if(u!==a.prev&&u!==a.next&&dr(t.x,t.y,d.x,d.y,i.x,i.y,u.x,u.y)&&nr(u.prev,u,u.next)>=0)return!1;u=u.nextZ}return!0}function $n(a,e,c){var b=a;do{var t=b.prev,d=b.next.next;!rr(t,d)&&fr(t,b,b.next,d)&&or(t,d)&&or(d,t)&&(e.push(t.i/c),e.push(b.i/c),e.push(d.i/c),lr(b),lr(b.next),b=a=d),b=b.next}while(b!==a);return b}function ar(a,e,c,b,t,d){var i=a;do{for(var n=i.next.next;n!==i.prev;){if(i.i!==n.i&&ir(i,n)){var r=sr(i,n);return i=Zn(i,i.next),r=Zn(r,r.next),Jn(i,e,c,b,t,d),void Jn(r,e,c,b,t,d)}n=n.next}i=i.next}while(i!==a)}function er(a,e){return a.x-e.x}function cr(a,e){if(e=function(a,e){var c,b=e,t=a.x,d=a.y,i=-1/0;do{if(d<=b.y&&d>=b.next.y&&b.next.y!==b.y){var n=b.x+(d-b.y)*(b.next.x-b.x)/(b.next.y-b.y);if(n<=t&&n>i){if(i=n,n===t){if(d===b.y)return b;if(d===b.next.y)return b.next}c=b.x<b.next.x?b:b.next}}b=b.next}while(b!==e);if(!c)return null;if(t===i)return c.prev;var r,f=c,o=c.x,s=c.y,h=1/0;b=c.next;for(;b!==f;)t>=b.x&&b.x>=o&&t!==b.x&&dr(d<s?t:i,d,o,s,d<s?i:t,d,b.x,b.y)&&((r=Math.abs(d-b.y)/(t-b.x))<h||r===h&&b.x>c.x)&&or(b,a)&&(c=b,h=r),b=b.next;return c}(a,e)){var c=sr(e,a);Zn(c,c.next)}}function br(a,e,c,b,t){return(a=1431655765&((a=858993459&((a=252645135&((a=16711935&((a=32767*(a-c)*t)|a<<8))|a<<4))|a<<2))|a<<1))|(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=32767*(e-b)*t)|e<<8))|e<<4))|e<<2))|e<<1))<<1}function tr(a){var e=a,c=a;do{(e.x<c.x||e.x===c.x&&e.y<c.y)&&(c=e),e=e.next}while(e!==a);return c}function dr(a,e,c,b,t,d,i,n){return(t-i)*(e-n)-(a-i)*(d-n)>=0&&(a-i)*(b-n)-(c-i)*(e-n)>=0&&(c-i)*(d-n)-(t-i)*(b-n)>=0}function ir(a,e){return a.next.i!==e.i&&a.prev.i!==e.i&&!function(a,e){var c=a;do{if(c.i!==a.i&&c.next.i!==a.i&&c.i!==e.i&&c.next.i!==e.i&&fr(c,c.next,a,e))return!0;c=c.next}while(c!==a);return!1}(a,e)&&or(a,e)&&or(e,a)&&function(a,e){var c=a,b=!1,t=(a.x+e.x)/2,d=(a.y+e.y)/2;do{c.y>d!=c.next.y>d&&c.next.y!==c.y&&t<(c.next.x-c.x)*(d-c.y)/(c.next.y-c.y)+c.x&&(b=!b),c=c.next}while(c!==a);return b}(a,e)}function nr(a,e,c){return(e.y-a.y)*(c.x-e.x)-(e.x-a.x)*(c.y-e.y)}function rr(a,e){return a.x===e.x&&a.y===e.y}function fr(a,e,c,b){return!!(rr(a,c)&&rr(e,b)||rr(a,b)&&rr(c,e))||nr(a,e,c)>0!=nr(a,e,b)>0&&nr(c,b,a)>0!=nr(c,b,e)>0}function or(a,e){return nr(a.prev,a,a.next)<0?nr(a,e,a.next)>=0&&nr(a,a.prev,e)>=0:nr(a,e,a.prev)<0||nr(a,a.next,e)<0}function sr(a,e){var c=new ur(a.i,a.x,a.y),b=new ur(e.i,e.x,e.y),t=a.next,d=e.prev;return a.next=e,e.prev=a,c.next=t,t.prev=c,b.next=c,c.prev=b,d.next=b,b.prev=d,b}function hr(a,e,c,b){var t=new ur(a,e,c);return b?(t.next=b.next,t.prev=b,b.next.prev=t,b.next=t):(t.prev=t,t.next=t),t}function lr(a){a.next.prev=a.prev,a.prev.next=a.next,a.prevZ&&(a.prevZ.nextZ=a.nextZ),a.nextZ&&(a.nextZ.prevZ=a.prevZ)}function ur(a,e,c){this.i=a,this.x=e,this.y=c,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}var pr={area:function(a){for(var e=a.length,c=0,b=e-1,t=0;t<e;b=t++)c+=a[b].x*a[t].y-a[t].x*a[b].y;return.5*c},isClockWise:function(a){return pr.area(a)<0},triangulateShape:function(a,e){var c=[],b=[],t=[];mr(a),gr(c,a);var d=a.length;e.forEach(mr);for(var i=0;i<e.length;i++)b.push(d),d+=e[i].length,gr(c,e[i]);var n=Xn(c,b);for(i=0;i<n.length;i+=3)t.push(n.slice(i,i+3));return t}};function mr(a){var e=a.length;e>2&&a[e-1].equals(a[0])&&a.pop()}function gr(a,e){for(var c=0;c<e.length;c++)a.push(e[c].x),a.push(e[c].y)}function vr(a,e){at.call(this),this.type="ExtrudeGeometry",this.parameters={shapes:a,options:e},this.fromBufferGeometry(new yr(a,e)),this.mergeVertices()}function yr(a,e){Rb.call(this),this.type="ExtrudeBufferGeometry",this.parameters={shapes:a,options:e},a=Array.isArray(a)?a:[a];for(var c=this,b=[],t=[],d=0,i=a.length;d<i;d++){n(a[d])}function n(a){var d=[],i=void 0!==e.curveSegments?e.curveSegments:12,n=void 0!==e.steps?e.steps:1,r=void 0!==e.depth?e.depth:100,f=void 0===e.bevelEnabled||e.bevelEnabled,o=void 0!==e.bevelThickness?e.bevelThickness:6,s=void 0!==e.bevelSize?e.bevelSize:o-2,h=void 0!==e.bevelOffset?e.bevelOffset:0,l=void 0!==e.bevelSegments?e.bevelSegments:3,u=e.extrudePath,p=void 0!==e.UVGenerator?e.UVGenerator:xr;void 0!==e.amount&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),r=e.amount);var m,g,v,y,x,w,_,M,S=!1;u&&(m=u.getSpacedPoints(n),S=!0,f=!1,g=u.computeFrenetFrames(n,!1),v=new De,y=new De,x=new De),f||(l=0,o=0,s=0,h=0);var T=a.extractPoints(i),E=T.shape,A=T.holes;if(!pr.isClockWise(E))for(E=E.reverse(),_=0,M=A.length;_<M;_++)w=A[_],pr.isClockWise(w)&&(A[_]=w.reverse());var L=pr.triangulateShape(E,A),R=E;for(_=0,M=A.length;_<M;_++)w=A[_],E=E.concat(w);function P(a,e,c){return e||console.error("THREE.ExtrudeGeometry: vec does not exist"),e.clone().multiplyScalar(c).add(a)}var C,O,I,N,D,z,U=E.length,B=L.length;function F(a,e,c){var b,t,d,i=a.x-e.x,n=a.y-e.y,r=c.x-a.x,f=c.y-a.y,o=i*i+n*n,s=i*f-n*r;if(Math.abs(s)>Number.EPSILON){var h=Math.sqrt(o),l=Math.sqrt(r*r+f*f),u=e.x-n/h,p=e.y+i/h,m=((c.x-f/l-u)*f-(c.y+r/l-p)*r)/(i*f-n*r),g=(b=u+i*m-a.x)*b+(t=p+n*m-a.y)*t;if(g<=2)return new Ce(b,t);d=Math.sqrt(g/2)}else{var v=!1;i>Number.EPSILON?r>Number.EPSILON&&(v=!0):i<-Number.EPSILON?r<-Number.EPSILON&&(v=!0):Math.sign(n)===Math.sign(f)&&(v=!0),v?(b=-n,t=i,d=Math.sqrt(o)):(b=i,t=n,d=Math.sqrt(o/2))}return new Ce(b/d,t/d)}for(var G=[],H=0,V=R.length,k=V-1,j=H+1;H<V;H++,k++,j++)k===V&&(k=0),j===V&&(j=0),G[H]=F(R[H],R[k],R[j]);var W,q,X=[],Y=G.concat();for(_=0,M=A.length;_<M;_++){for(w=A[_],W=[],H=0,k=(V=w.length)-1,j=H+1;H<V;H++,k++,j++)k===V&&(k=0),j===V&&(j=0),W[H]=F(w[H],w[k],w[j]);X.push(W),Y=Y.concat(W)}for(C=0;C<l;C++){for(I=C/l,N=o*Math.cos(I*Math.PI/2),O=s*Math.sin(I*Math.PI/2)+h,H=0,V=R.length;H<V;H++)J((D=P(R[H],G[H],O)).x,D.y,-N);for(_=0,M=A.length;_<M;_++)for(w=A[_],W=X[_],H=0,V=w.length;H<V;H++)J((D=P(w[H],W[H],O)).x,D.y,-N)}for(O=s+h,H=0;H<U;H++)D=f?P(E[H],Y[H],O):E[H],S?(y.copy(g.normals[0]).multiplyScalar(D.x),v.copy(g.binormals[0]).multiplyScalar(D.y),x.copy(m[0]).add(y).add(v),J(x.x,x.y,x.z)):J(D.x,D.y,0);for(q=1;q<=n;q++)for(H=0;H<U;H++)D=f?P(E[H],Y[H],O):E[H],S?(y.copy(g.normals[q]).multiplyScalar(D.x),v.copy(g.binormals[q]).multiplyScalar(D.y),x.copy(m[q]).add(y).add(v),J(x.x,x.y,x.z)):J(D.x,D.y,r/n*q);for(C=l-1;C>=0;C--){for(I=C/l,N=o*Math.cos(I*Math.PI/2),O=s*Math.sin(I*Math.PI/2)+h,H=0,V=R.length;H<V;H++)J((D=P(R[H],G[H],O)).x,D.y,r+N);for(_=0,M=A.length;_<M;_++)for(w=A[_],W=X[_],H=0,V=w.length;H<V;H++)D=P(w[H],W[H],O),S?J(D.x,D.y+m[n-1].y,m[n-1].x+N):J(D.x,D.y,r+N)}function Z(a,e){var c,b;for(H=a.length;--H>=0;){c=H,(b=H-1)<0&&(b=a.length-1);var t=0,d=n+2*l;for(t=0;t<d;t++){var i=U*t,r=U*(t+1);Q(e+c+i,e+b+i,e+b+r,e+c+r)}}}function J(a,e,c){d.push(a),d.push(e),d.push(c)}function K(a,e,t){$(a),$(e),$(t);var d=b.length/3,i=p.generateTopUV(c,b,d-3,d-2,d-1);aa(i[0]),aa(i[1]),aa(i[2])}function Q(a,e,t,d){$(a),$(e),$(d),$(e),$(t),$(d);var i=b.length/3,n=p.generateSideWallUV(c,b,i-6,i-3,i-2,i-1);aa(n[0]),aa(n[1]),aa(n[3]),aa(n[1]),aa(n[2]),aa(n[3])}function $(a){b.push(d[3*a+0]),b.push(d[3*a+1]),b.push(d[3*a+2])}function aa(a){t.push(a.x),t.push(a.y)}!function(){var a=b.length/3;if(f){var e=0,t=U*e;for(H=0;H<B;H++)K((z=L[H])[2]+t,z[1]+t,z[0]+t);for(t=U*(e=n+2*l),H=0;H<B;H++)K((z=L[H])[0]+t,z[1]+t,z[2]+t)}else{for(H=0;H<B;H++)K((z=L[H])[2],z[1],z[0]);for(H=0;H<B;H++)K((z=L[H])[0]+U*n,z[1]+U*n,z[2]+U*n)}c.addGroup(a,b.length/3-a,0)}(),function(){var a=b.length/3,e=0;for(Z(R,e),e+=R.length,_=0,M=A.length;_<M;_++)Z(w=A[_],e),e+=w.length;c.addGroup(a,b.length/3-a,1)}()}this.addAttribute("position",new vb(b,3)),this.addAttribute("uv",new vb(t,2)),this.computeVertexNormals()}vr.prototype=Object.create(at.prototype),vr.prototype.constructor=vr,vr.prototype.toJSON=function(){var a=at.prototype.toJSON.call(this);return wr(this.parameters.shapes,this.parameters.options,a)},yr.prototype=Object.create(Rb.prototype),yr.prototype.constructor=yr,yr.prototype.toJSON=function(){var a=Rb.prototype.toJSON.call(this);return wr(this.parameters.shapes,this.parameters.options,a)};var xr={generateTopUV:function(a,e,c,b,t){var d=e[3*c],i=e[3*c+1],n=e[3*b],r=e[3*b+1],f=e[3*t],o=e[3*t+1];return[new Ce(d,i),new Ce(n,r),new Ce(f,o)]},generateSideWallUV:function(a,e,c,b,t,d){var i=e[3*c],n=e[3*c+1],r=e[3*c+2],f=e[3*b],o=e[3*b+1],s=e[3*b+2],h=e[3*t],l=e[3*t+1],u=e[3*t+2],p=e[3*d],m=e[3*d+1],g=e[3*d+2];return Math.abs(n-o)<.01?[new Ce(i,1-r),new Ce(f,1-s),new Ce(h,1-u),new Ce(p,1-g)]:[new Ce(n,1-r),new Ce(o,1-s),new Ce(l,1-u),new Ce(m,1-g)]}};function wr(a,e,c){if(c.shapes=[],Array.isArray(a))for(var b=0,t=a.length;b<t;b++){var d=a[b];c.shapes.push(d.uuid)}else c.shapes.push(a.uuid);return void 0!==e.extrudePath&&(c.options.extrudePath=e.extrudePath.toJSON()),c}function _r(a,e){at.call(this),this.type="TextGeometry",this.parameters={text:a,parameters:e},this.fromBufferGeometry(new Mr(a,e)),this.mergeVertices()}function Mr(a,e){var c=(e=e||{}).font;if(!c||!c.isFont)return console.error("THREE.TextGeometry: font parameter is not an instance of THREE.Font."),new at;var b=c.generateShapes(a,e.size);e.depth=void 0!==e.height?e.height:50,void 0===e.bevelThickness&&(e.bevelThickness=10),void 0===e.bevelSize&&(e.bevelSize=8),void 0===e.bevelEnabled&&(e.bevelEnabled=!1),yr.call(this,b,e),this.type="TextBufferGeometry"}function Sr(a,e,c,b,t,d,i){at.call(this),this.type="SphereGeometry",this.parameters={radius:a,widthSegments:e,heightSegments:c,phiStart:b,phiLength:t,thetaStart:d,thetaLength:i},this.fromBufferGeometry(new Tr(a,e,c,b,t,d,i)),this.mergeVertices()}function Tr(a,e,c,b,t,d,i){Rb.call(this),this.type="SphereBufferGeometry",this.parameters={radius:a,widthSegments:e,heightSegments:c,phiStart:b,phiLength:t,thetaStart:d,thetaLength:i},a=a||1,e=Math.max(3,Math.floor(e)||8),c=Math.max(2,Math.floor(c)||6),b=void 0!==b?b:0,t=void 0!==t?t:2*Math.PI,d=void 0!==d?d:0,i=void 0!==i?i:Math.PI;var n,r,f=Math.min(d+i,Math.PI),o=0,s=[],h=new De,l=new De,u=[],p=[],m=[],g=[];for(r=0;r<=c;r++){var v=[],y=r/c,x=0;for(0==r&&0==d?x=.5/e:r==c&&f==Math.PI&&(x=-.5/e),n=0;n<=e;n++){var w=n/e;h.x=-a*Math.cos(b+w*t)*Math.sin(d+y*i),h.y=a*Math.cos(d+y*i),h.z=a*Math.sin(b+w*t)*Math.sin(d+y*i),p.push(h.x,h.y,h.z),l.copy(h).normalize(),m.push(l.x,l.y,l.z),g.push(w+x,1-y),v.push(o++)}s.push(v)}for(r=0;r<c;r++)for(n=0;n<e;n++){var _=s[r][n+1],M=s[r][n],S=s[r+1][n],T=s[r+1][n+1];(0!==r||d>0)&&u.push(_,M,T),(r!==c-1||f<Math.PI)&&u.push(M,S,T)}this.setIndex(u),this.addAttribute("position",new vb(p,3)),this.addAttribute("normal",new vb(m,3)),this.addAttribute("uv",new vb(g,2))}function Er(a,e,c,b,t,d){at.call(this),this.type="RingGeometry",this.parameters={innerRadius:a,outerRadius:e,thetaSegments:c,phiSegments:b,thetaStart:t,thetaLength:d},this.fromBufferGeometry(new Ar(a,e,c,b,t,d)),this.mergeVertices()}function Ar(a,e,c,b,t,d){Rb.call(this),this.type="RingBufferGeometry",this.parameters={innerRadius:a,outerRadius:e,thetaSegments:c,phiSegments:b,thetaStart:t,thetaLength:d},a=a||.5,e=e||1,t=void 0!==t?t:0,d=void 0!==d?d:2*Math.PI,c=void 0!==c?Math.max(3,c):8;var i,n,r,f=[],o=[],s=[],h=[],l=a,u=(e-a)/(b=void 0!==b?Math.max(1,b):1),p=new De,m=new Ce;for(n=0;n<=b;n++){for(r=0;r<=c;r++)i=t+r/c*d,p.x=l*Math.cos(i),p.y=l*Math.sin(i),o.push(p.x,p.y,p.z),s.push(0,0,1),m.x=(p.x/e+1)/2,m.y=(p.y/e+1)/2,h.push(m.x,m.y);l+=u}for(n=0;n<b;n++){var g=n*(c+1);for(r=0;r<c;r++){var v=i=r+g,y=i+c+1,x=i+c+2,w=i+1;f.push(v,y,w),f.push(y,x,w)}}this.setIndex(f),this.addAttribute("position",new vb(o,3)),this.addAttribute("normal",new vb(s,3)),this.addAttribute("uv",new vb(h,2))}function Lr(a,e,c,b){at.call(this),this.type="LatheGeometry",this.parameters={points:a,segments:e,phiStart:c,phiLength:b},this.fromBufferGeometry(new Rr(a,e,c,b)),this.mergeVertices()}function Rr(a,e,c,b){Rb.call(this),this.type="LatheBufferGeometry",this.parameters={points:a,segments:e,phiStart:c,phiLength:b},e=Math.floor(e)||12,c=c||0,b=b||2*Math.PI,b=Pe.clamp(b,0,2*Math.PI);var t,d,i,n=[],r=[],f=[],o=1/e,s=new De,h=new Ce;for(d=0;d<=e;d++){var l=c+d*o*b,u=Math.sin(l),p=Math.cos(l);for(i=0;i<=a.length-1;i++)s.x=a[i].x*u,s.y=a[i].y,s.z=a[i].x*p,r.push(s.x,s.y,s.z),h.x=d/e,h.y=i/(a.length-1),f.push(h.x,h.y)}for(d=0;d<e;d++)for(i=0;i<a.length-1;i++){var m=t=i+d*a.length,g=t+a.length,v=t+a.length+1,y=t+1;n.push(m,g,y),n.push(g,v,y)}if(this.setIndex(n),this.addAttribute("position",new vb(r,3)),this.addAttribute("uv",new vb(f,2)),this.computeVertexNormals(),b===2*Math.PI){var x=this.attributes.normal.array,w=new De,_=new De,M=new De;for(t=e*a.length*3,d=0,i=0;d<a.length;d++,i+=3)w.x=x[i+0],w.y=x[i+1],w.z=x[i+2],_.x=x[t+i+0],_.y=x[t+i+1],_.z=x[t+i+2],M.addVectors(w,_).normalize(),x[i+0]=x[t+i+0]=M.x,x[i+1]=x[t+i+1]=M.y,x[i+2]=x[t+i+2]=M.z}}function Pr(a,e){at.call(this),this.type="ShapeGeometry","object"==typeof e&&(console.warn("THREE.ShapeGeometry: Options parameter has been removed."),e=e.curveSegments),this.parameters={shapes:a,curveSegments:e},this.fromBufferGeometry(new Cr(a,e)),this.mergeVertices()}function Cr(a,e){Rb.call(this),this.type="ShapeBufferGeometry",this.parameters={shapes:a,curveSegments:e},e=e||12;var c=[],b=[],t=[],d=[],i=0,n=0;if(!1===Array.isArray(a))f(a);else for(var r=0;r<a.length;r++)f(a[r]),this.addGroup(i,n,r),i+=n,n=0;function f(a){var i,r,f,o=b.length/3,s=a.extractPoints(e),h=s.shape,l=s.holes;for(!1===pr.isClockWise(h)&&(h=h.reverse()),i=0,r=l.length;i<r;i++)f=l[i],!0===pr.isClockWise(f)&&(l[i]=f.reverse());var u=pr.triangulateShape(h,l);for(i=0,r=l.length;i<r;i++)f=l[i],h=h.concat(f);for(i=0,r=h.length;i<r;i++){var p=h[i];b.push(p.x,p.y,0),t.push(0,0,1),d.push(p.x,p.y)}for(i=0,r=u.length;i<r;i++){var m=u[i],g=m[0]+o,v=m[1]+o,y=m[2]+o;c.push(g,v,y),n+=3}}this.setIndex(c),this.addAttribute("position",new vb(b,3)),this.addAttribute("normal",new vb(t,3)),this.addAttribute("uv",new vb(d,2))}function Or(a,e){if(e.shapes=[],Array.isArray(a))for(var c=0,b=a.length;c<b;c++){var t=a[c];e.shapes.push(t.uuid)}else e.shapes.push(a.uuid);return e}function Ir(a,e){Rb.call(this),this.type="EdgesGeometry",this.parameters={thresholdAngle:e},e=void 0!==e?e:1;var c,b,t,d,i=[],n=Math.cos(Pe.DEG2RAD*e),r=[0,0],f={},o=["a","b","c"];a.isBufferGeometry?(d=new at).fromBufferGeometry(a):d=a.clone(),d.mergeVertices(),d.computeFaceNormals();for(var s=d.vertices,h=d.faces,l=0,u=h.length;l<u;l++)for(var p=h[l],m=0;m<3;m++)c=p[o[m]],b=p[o[(m+1)%3]],r[0]=Math.min(c,b),r[1]=Math.max(c,b),void 0===f[t=r[0]+","+r[1]]?f[t]={index1:r[0],index2:r[1],face1:l,face2:void 0}:f[t].face2=l;for(t in f){var g=f[t];if(void 0===g.face2||h[g.face1].normal.dot(h[g.face2].normal)<=n){var v=s[g.index1];i.push(v.x,v.y,v.z),v=s[g.index2],i.push(v.x,v.y,v.z)}}this.addAttribute("position",new vb(i,3))}function Nr(a,e,c,b,t,d,i,n){at.call(this),this.type="CylinderGeometry",this.parameters={radiusTop:a,radiusBottom:e,height:c,radialSegments:b,heightSegments:t,openEnded:d,thetaStart:i,thetaLength:n},this.fromBufferGeometry(new Dr(a,e,c,b,t,d,i,n)),this.mergeVertices()}function Dr(a,e,c,b,t,d,i,n){Rb.call(this),this.type="CylinderBufferGeometry",this.parameters={radiusTop:a,radiusBottom:e,height:c,radialSegments:b,heightSegments:t,openEnded:d,thetaStart:i,thetaLength:n};var r=this;a=void 0!==a?a:1,e=void 0!==e?e:1,c=c||1,b=Math.floor(b)||8,t=Math.floor(t)||1,d=void 0!==d&&d,i=void 0!==i?i:0,n=void 0!==n?n:2*Math.PI;var f=[],o=[],s=[],h=[],l=0,u=[],p=c/2,m=0;function g(c){var t,d,u,g=new Ce,v=new De,y=0,x=!0===c?a:e,w=!0===c?1:-1;for(d=l,t=1;t<=b;t++)o.push(0,p*w,0),s.push(0,w,0),h.push(.5,.5),l++;for(u=l,t=0;t<=b;t++){var _=t/b*n+i,M=Math.cos(_),S=Math.sin(_);v.x=x*S,v.y=p*w,v.z=x*M,o.push(v.x,v.y,v.z),s.push(0,w,0),g.x=.5*M+.5,g.y=.5*S*w+.5,h.push(g.x,g.y),l++}for(t=0;t<b;t++){var T=d+t,E=u+t;!0===c?f.push(E,E+1,T):f.push(E+1,E,T),y+=3}r.addGroup(m,y,!0===c?1:2),m+=y}!function(){var d,g,v=new De,y=new De,x=0,w=(e-a)/c;for(g=0;g<=t;g++){var _=[],M=g/t,S=M*(e-a)+a;for(d=0;d<=b;d++){var T=d/b,E=T*n+i,A=Math.sin(E),L=Math.cos(E);y.x=S*A,y.y=-M*c+p,y.z=S*L,o.push(y.x,y.y,y.z),v.set(A,w,L).normalize(),s.push(v.x,v.y,v.z),h.push(T,1-M),_.push(l++)}u.push(_)}for(d=0;d<b;d++)for(g=0;g<t;g++){var R=u[g][d],P=u[g+1][d],C=u[g+1][d+1],O=u[g][d+1];f.push(R,P,O),f.push(P,C,O),x+=6}r.addGroup(m,x,0),m+=x}(),!1===d&&(a>0&&g(!0),e>0&&g(!1)),this.setIndex(f),this.addAttribute("position",new vb(o,3)),this.addAttribute("normal",new vb(s,3)),this.addAttribute("uv",new vb(h,2))}function zr(a,e,c,b,t,d,i){Nr.call(this,0,a,e,c,b,t,d,i),this.type="ConeGeometry",this.parameters={radius:a,height:e,radialSegments:c,heightSegments:b,openEnded:t,thetaStart:d,thetaLength:i}}function Ur(a,e,c,b,t,d,i){Dr.call(this,0,a,e,c,b,t,d,i),this.type="ConeBufferGeometry",this.parameters={radius:a,height:e,radialSegments:c,heightSegments:b,openEnded:t,thetaStart:d,thetaLength:i}}function Br(a,e,c,b){at.call(this),this.type="CircleGeometry",this.parameters={radius:a,segments:e,thetaStart:c,thetaLength:b},this.fromBufferGeometry(new Fr(a,e,c,b)),this.mergeVertices()}function Fr(a,e,c,b){Rb.call(this),this.type="CircleBufferGeometry",this.parameters={radius:a,segments:e,thetaStart:c,thetaLength:b},a=a||1,e=void 0!==e?Math.max(3,e):8,c=void 0!==c?c:0,b=void 0!==b?b:2*Math.PI;var t,d,i=[],n=[],r=[],f=[],o=new De,s=new Ce;for(n.push(0,0,0),r.push(0,0,1),f.push(.5,.5),d=0,t=3;d<=e;d++,t+=3){var h=c+d/e*b;o.x=a*Math.cos(h),o.y=a*Math.sin(h),n.push(o.x,o.y,o.z),r.push(0,0,1),s.x=(n[t]/a+1)/2,s.y=(n[t+1]/a+1)/2,f.push(s.x,s.y)}for(t=1;t<=e;t++)i.push(t,t+1,0);this.setIndex(i),this.addAttribute("position",new vb(n,3)),this.addAttribute("normal",new vb(r,3)),this.addAttribute("uv",new vb(f,2))}_r.prototype=Object.create(at.prototype),_r.prototype.constructor=_r,Mr.prototype=Object.create(yr.prototype),Mr.prototype.constructor=Mr,Sr.prototype=Object.create(at.prototype),Sr.prototype.constructor=Sr,Tr.prototype=Object.create(Rb.prototype),Tr.prototype.constructor=Tr,Er.prototype=Object.create(at.prototype),Er.prototype.constructor=Er,Ar.prototype=Object.create(Rb.prototype),Ar.prototype.constructor=Ar,Lr.prototype=Object.create(at.prototype),Lr.prototype.constructor=Lr,Rr.prototype=Object.create(Rb.prototype),Rr.prototype.constructor=Rr,Pr.prototype=Object.create(at.prototype),Pr.prototype.constructor=Pr,Pr.prototype.toJSON=function(){var a=at.prototype.toJSON.call(this);return Or(this.parameters.shapes,a)},Cr.prototype=Object.create(Rb.prototype),Cr.prototype.constructor=Cr,Cr.prototype.toJSON=function(){var a=Rb.prototype.toJSON.call(this);return Or(this.parameters.shapes,a)},Ir.prototype=Object.create(Rb.prototype),Ir.prototype.constructor=Ir,Nr.prototype=Object.create(at.prototype),Nr.prototype.constructor=Nr,Dr.prototype=Object.create(Rb.prototype),Dr.prototype.constructor=Dr,zr.prototype=Object.create(Nr.prototype),zr.prototype.constructor=zr,Ur.prototype=Object.create(Dr.prototype),Ur.prototype.constructor=Ur,Br.prototype=Object.create(at.prototype),Br.prototype.constructor=Br,Fr.prototype=Object.create(Rb.prototype),Fr.prototype.constructor=Fr;var Gr=Object.freeze({WireframeGeometry:Ln,ParametricGeometry:Rn,ParametricBufferGeometry:Pn,TetrahedronGeometry:In,TetrahedronBufferGeometry:Nn,OctahedronGeometry:Dn,OctahedronBufferGeometry:zn,IcosahedronGeometry:Un,IcosahedronBufferGeometry:Bn,DodecahedronGeometry:Fn,DodecahedronBufferGeometry:Gn,PolyhedronGeometry:Cn,PolyhedronBufferGeometry:On,TubeGeometry:Hn,TubeBufferGeometry:Vn,TorusKnotGeometry:kn,TorusKnotBufferGeometry:jn,TorusGeometry:Wn,TorusBufferGeometry:qn,TextGeometry:_r,TextBufferGeometry:Mr,SphereGeometry:Sr,SphereBufferGeometry:Tr,RingGeometry:Er,RingBufferGeometry:Ar,PlaneGeometry:At,PlaneBufferGeometry:Lt,LatheGeometry:Lr,LatheBufferGeometry:Rr,ShapeGeometry:Pr,ShapeBufferGeometry:Cr,ExtrudeGeometry:vr,ExtrudeBufferGeometry:yr,EdgesGeometry:Ir,ConeGeometry:zr,ConeBufferGeometry:Ur,CylinderGeometry:Nr,CylinderBufferGeometry:Dr,CircleGeometry:Br,CircleBufferGeometry:Fr,BoxGeometry:class extends at{constructor(a,e,c,b,t,d){super(),this.type="BoxGeometry",this.parameters={width:a,height:e,depth:c,widthSegments:b,heightSegments:t,depthSegments:d},this.fromBufferGeometry(new et(a,e,c,b,t,d)),this.mergeVertices()}},BoxBufferGeometry:et});function Hr(a){rb.call(this),this.type="ShadowMaterial",this.color=new cb(0),this.transparent=!0,this.setValues(a)}function Vr(a){nt.call(this,a),this.type="RawShaderMaterial"}function kr(a){rb.call(this),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new cb(16777215),this.roughness=.5,this.metalness=.5,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new cb(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Me,this.normalScale=new Ce(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(a)}function jr(a){kr.call(this),this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.reflectivity=.5,this.clearcoat=0,this.clearcoatRoughness=0,this.sheen=null,this.clearcoatNormalScale=new Ce(1,1),this.clearcoatNormalMap=null,this.transparency=0,this.setValues(a)}function Wr(a){rb.call(this),this.type="MeshPhongMaterial",this.color=new cb(16777215),this.specular=new cb(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new cb(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Me,this.normalScale=new Ce(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Y,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(a)}function qr(a){Wr.call(this),this.defines={TOON:""},this.type="MeshToonMaterial",this.gradientMap=null,this.setValues(a)}function Xr(a){rb.call(this),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Me,this.normalScale=new Ce(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(a)}function Yr(a){rb.call(this),this.type="MeshLambertMaterial",this.color=new cb(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new cb(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Y,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(a)}function Zr(a){rb.call(this),this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new cb(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Me,this.normalScale=new Ce(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(a)}function Jr(a){dn.call(this),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(a)}Hr.prototype=Object.create(rb.prototype),Hr.prototype.constructor=Hr,Hr.prototype.isShadowMaterial=!0,Hr.prototype.copy=function(a){return rb.prototype.copy.call(this,a),this.color.copy(a.color),this},Vr.prototype=Object.create(nt.prototype),Vr.prototype.constructor=Vr,Vr.prototype.isRawShaderMaterial=!0,kr.prototype=Object.create(rb.prototype),kr.prototype.constructor=kr,kr.prototype.isMeshStandardMaterial=!0,kr.prototype.copy=function(a){return rb.prototype.copy.call(this,a),this.defines={STANDARD:""},this.color.copy(a.color),this.roughness=a.roughness,this.metalness=a.metalness,this.map=a.map,this.lightMap=a.lightMap,this.lightMapIntensity=a.lightMapIntensity,this.aoMap=a.aoMap,this.aoMapIntensity=a.aoMapIntensity,this.emissive.copy(a.emissive),this.emissiveMap=a.emissiveMap,this.emissiveIntensity=a.emissiveIntensity,this.bumpMap=a.bumpMap,this.bumpScale=a.bumpScale,this.normalMap=a.normalMap,this.normalMapType=a.normalMapType,this.normalScale.copy(a.normalScale),this.displacementMap=a.displacementMap,this.displacementScale=a.displacementScale,this.displacementBias=a.displacementBias,this.roughnessMap=a.roughnessMap,this.metalnessMap=a.metalnessMap,this.alphaMap=a.alphaMap,this.envMap=a.envMap,this.envMapIntensity=a.envMapIntensity,this.refractionRatio=a.refractionRatio,this.wireframe=a.wireframe,this.wireframeLinewidth=a.wireframeLinewidth,this.wireframeLinecap=a.wireframeLinecap,this.wireframeLinejoin=a.wireframeLinejoin,this.skinning=a.skinning,this.morphTargets=a.morphTargets,this.morphNormals=a.morphNormals,this},jr.prototype=Object.create(kr.prototype),jr.prototype.constructor=jr,jr.prototype.isMeshPhysicalMaterial=!0,jr.prototype.copy=function(a){return kr.prototype.copy.call(this,a),this.defines={STANDARD:"",PHYSICAL:""},this.reflectivity=a.reflectivity,this.clearcoat=a.clearcoat,this.clearcoatRoughness=a.clearcoatRoughness,a.sheen?this.sheen=(this.sheen||new cb).copy(a.sheen):this.sheen=null,this.clearcoatNormalMap=a.clearcoatNormalMap,this.clearcoatNormalScale.copy(a.clearcoatNormalScale),this.transparency=a.transparency,this},Wr.prototype=Object.create(rb.prototype),Wr.prototype.constructor=Wr,Wr.prototype.isMeshPhongMaterial=!0,Wr.prototype.copy=function(a){return rb.prototype.copy.call(this,a),this.color.copy(a.color),this.specular.copy(a.specular),this.shininess=a.shininess,this.map=a.map,this.lightMap=a.lightMap,this.lightMapIntensity=a.lightMapIntensity,this.aoMap=a.aoMap,this.aoMapIntensity=a.aoMapIntensity,this.emissive.copy(a.emissive),this.emissiveMap=a.emissiveMap,this.emissiveIntensity=a.emissiveIntensity,this.bumpMap=a.bumpMap,this.bumpScale=a.bumpScale,this.normalMap=a.normalMap,this.normalMapType=a.normalMapType,this.normalScale.copy(a.normalScale),this.displacementMap=a.displacementMap,this.displacementScale=a.displacementScale,this.displacementBias=a.displacementBias,this.specularMap=a.specularMap,this.alphaMap=a.alphaMap,this.envMap=a.envMap,this.combine=a.combine,this.reflectivity=a.reflectivity,this.refractionRatio=a.refractionRatio,this.wireframe=a.wireframe,this.wireframeLinewidth=a.wireframeLinewidth,this.wireframeLinecap=a.wireframeLinecap,this.wireframeLinejoin=a.wireframeLinejoin,this.skinning=a.skinning,this.morphTargets=a.morphTargets,this.morphNormals=a.morphNormals,this},qr.prototype=Object.create(Wr.prototype),qr.prototype.constructor=qr,qr.prototype.isMeshToonMaterial=!0,qr.prototype.copy=function(a){return Wr.prototype.copy.call(this,a),this.gradientMap=a.gradientMap,this},Xr.prototype=Object.create(rb.prototype),Xr.prototype.constructor=Xr,Xr.prototype.isMeshNormalMaterial=!0,Xr.prototype.copy=function(a){return rb.prototype.copy.call(this,a),this.bumpMap=a.bumpMap,this.bumpScale=a.bumpScale,this.normalMap=a.normalMap,this.normalMapType=a.normalMapType,this.normalScale.copy(a.normalScale),this.displacementMap=a.displacementMap,this.displacementScale=a.displacementScale,this.displacementBias=a.displacementBias,this.wireframe=a.wireframe,this.wireframeLinewidth=a.wireframeLinewidth,this.skinning=a.skinning,this.morphTargets=a.morphTargets,this.morphNormals=a.morphNormals,this},Yr.prototype=Object.create(rb.prototype),Yr.prototype.constructor=Yr,Yr.prototype.isMeshLambertMaterial=!0,Yr.prototype.copy=function(a){return rb.prototype.copy.call(this,a),this.color.copy(a.color),this.map=a.map,this.lightMap=a.lightMap,this.lightMapIntensity=a.lightMapIntensity,this.aoMap=a.aoMap,this.aoMapIntensity=a.aoMapIntensity,this.emissive.copy(a.emissive),this.emissiveMap=a.emissiveMap,this.emissiveIntensity=a.emissiveIntensity,this.specularMap=a.specularMap,this.alphaMap=a.alphaMap,this.envMap=a.envMap,this.combine=a.combine,this.reflectivity=a.reflectivity,this.refractionRatio=a.refractionRatio,this.wireframe=a.wireframe,this.wireframeLinewidth=a.wireframeLinewidth,this.wireframeLinecap=a.wireframeLinecap,this.wireframeLinejoin=a.wireframeLinejoin,this.skinning=a.skinning,this.morphTargets=a.morphTargets,this.morphNormals=a.morphNormals,this},Zr.prototype=Object.create(rb.prototype),Zr.prototype.constructor=Zr,Zr.prototype.isMeshMatcapMaterial=!0,Zr.prototype.copy=function(a){return rb.prototype.copy.call(this,a),this.defines={MATCAP:""},this.color.copy(a.color),this.matcap=a.matcap,this.map=a.map,this.bumpMap=a.bumpMap,this.bumpScale=a.bumpScale,this.normalMap=a.normalMap,this.normalMapType=a.normalMapType,this.normalScale.copy(a.normalScale),this.displacementMap=a.displacementMap,this.displacementScale=a.displacementScale,this.displacementBias=a.displacementBias,this.alphaMap=a.alphaMap,this.skinning=a.skinning,this.morphTargets=a.morphTargets,this.morphNormals=a.morphNormals,this},Jr.prototype=Object.create(dn.prototype),Jr.prototype.constructor=Jr,Jr.prototype.isLineDashedMaterial=!0,Jr.prototype.copy=function(a){return dn.prototype.copy.call(this,a),this.scale=a.scale,this.dashSize=a.dashSize,this.gapSize=a.gapSize,this};var Kr=Object.freeze({ShadowMaterial:Hr,SpriteMaterial:Di,RawShaderMaterial:Vr,ShaderMaterial:nt,PointsMaterial:gn,MeshPhysicalMaterial:jr,MeshStandardMaterial:kr,MeshPhongMaterial:Wr,MeshToonMaterial:qr,MeshNormalMaterial:Xr,MeshLambertMaterial:Yr,MeshDepthMaterial:hi,MeshDistanceMaterial:li,MeshBasicMaterial:fb,MeshMatcapMaterial:Zr,LineDashedMaterial:Jr,LineBasicMaterial:dn,Material:rb}),Qr={arraySlice:function(a,e,c){return Qr.isTypedArray(a)?new a.constructor(a.subarray(e,void 0!==c?c:a.length)):a.slice(e,c)},convertArray:function(a,e,c){return!a||!c&&a.constructor===e?a:"number"==typeof e.BYTES_PER_ELEMENT?new e(a):Array.prototype.slice.call(a)},isTypedArray:function(a){return ArrayBuffer.isView(a)&&!(a instanceof DataView)},getKeyframeOrder:function(a){for(var e=a.length,c=new Array(e),b=0;b!==e;++b)c[b]=b;return c.sort((function(e,c){return a[e]-a[c]})),c},sortedArray:function(a,e,c){for(var b=a.length,t=new a.constructor(b),d=0,i=0;i!==b;++d)for(var n=c[d]*e,r=0;r!==e;++r)t[i++]=a[n+r];return t},flattenJSON:function(a,e,c,b){for(var t=1,d=a[0];void 0!==d&&void 0===d[b];)d=a[t++];if(void 0!==d){var i=d[b];if(void 0!==i)if(Array.isArray(i))do{void 0!==(i=d[b])&&(e.push(d.time),c.push.apply(c,i)),d=a[t++]}while(void 0!==d);else if(void 0!==i.toArray)do{void 0!==(i=d[b])&&(e.push(d.time),i.toArray(c,c.length)),d=a[t++]}while(void 0!==d);else do{void 0!==(i=d[b])&&(e.push(d.time),c.push(i)),d=a[t++]}while(void 0!==d)}}};function $r(a,e,c,b){this.parameterPositions=a,this._cachedIndex=0,this.resultBuffer=void 0!==b?b:new e.constructor(c),this.sampleValues=e,this.valueSize=c}function af(a,e,c,b){$r.call(this,a,e,c,b),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0}function ef(a,e,c,b){$r.call(this,a,e,c,b)}function cf(a,e,c,b){$r.call(this,a,e,c,b)}function bf(a,e,c,b){if(void 0===a)throw new Error("THREE.KeyframeTrack: track name is undefined");if(void 0===e||0===e.length)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+a);this.name=a,this.times=Qr.convertArray(e,this.TimeBufferType),this.values=Qr.convertArray(c,this.ValueBufferType),this.setInterpolation(b||this.DefaultInterpolation)}function tf(a,e,c){bf.call(this,a,e,c)}function df(a,e,c,b){bf.call(this,a,e,c,b)}function nf(a,e,c,b){bf.call(this,a,e,c,b)}function rf(a,e,c,b){$r.call(this,a,e,c,b)}function ff(a,e,c,b){bf.call(this,a,e,c,b)}function of(a,e,c,b){bf.call(this,a,e,c,b)}function sf(a,e,c,b){bf.call(this,a,e,c,b)}function hf(a,e,c){this.name=a,this.tracks=c,this.duration=void 0!==e?e:-1,this.uuid=Pe.generateUUID(),this.duration<0&&this.resetDuration()}function lf(a){if(void 0===a.type)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");var e=function(a){switch(a.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return nf;case"vector":case"vector2":case"vector3":case"vector4":return sf;case"color":return df;case"quaternion":return ff;case"bool":case"boolean":return tf;case"string":return of}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+a)}(a.type);if(void 0===a.times){var c=[],b=[];Qr.flattenJSON(a.keys,c,b,"value"),a.times=c,a.values=b}return void 0!==e.parse?e.parse(a):new e(a.name,a.times,a.values,a.interpolation)}Object.assign($r.prototype,{evaluate:function(a){var e=this.parameterPositions,c=this._cachedIndex,b=e[c],t=e[c-1];a:{e:{var d;c:{b:if(!(a<b)){for(var i=c+2;;){if(void 0===b){if(a<t)break b;return c=e.length,this._cachedIndex=c,this.afterEnd_(c-1,a,t)}if(c===i)break;if(t=b,a<(b=e[++c]))break e}d=e.length;break c}if(a>=t)break a;var n=e[1];a<n&&(c=2,t=n);for(i=c-2;;){if(void 0===t)return this._cachedIndex=0,this.beforeStart_(0,a,b);if(c===i)break;if(b=t,a>=(t=e[--c-1]))break e}d=c,c=0}for(;c<d;){var r=c+d>>>1;a<e[r]?d=r:c=r+1}if(b=e[c],void 0===(t=e[c-1]))return this._cachedIndex=0,this.beforeStart_(0,a,b);if(void 0===b)return c=e.length,this._cachedIndex=c,this.afterEnd_(c-1,t,a)}this._cachedIndex=c,this.intervalChanged_(c,t,b)}return this.interpolate_(c,t,a,b)},settings:null,DefaultSettings_:{},getSettings_:function(){return this.settings||this.DefaultSettings_},copySampleValue_:function(a){for(var e=this.resultBuffer,c=this.sampleValues,b=this.valueSize,t=a*b,d=0;d!==b;++d)e[d]=c[t+d];return e},interpolate_:function(){throw new Error("call to abstract method")},intervalChanged_:function(){}}),
//!\ DECLARE ALIAS AFTER assign prototype !
Object.assign($r.prototype,{beforeStart_:$r.prototype.copySampleValue_,afterEnd_:$r.prototype.copySampleValue_}),af.prototype=Object.assign(Object.create($r.prototype),{constructor:af,DefaultSettings_:{endingStart:fe,endingEnd:fe},intervalChanged_:function(a,e,c){var b=this.parameterPositions,t=a-2,d=a+1,i=b[t],n=b[d];if(void 0===i)switch(this.getSettings_().endingStart){case 2401:t=a,i=2*e-c;break;case 2402:i=e+b[t=b.length-2]-b[t+1];break;default:t=a,i=c}if(void 0===n)switch(this.getSettings_().endingEnd){case 2401:d=a,n=2*c-e;break;case 2402:d=1,n=c+b[1]-b[0];break;default:d=a-1,n=e}var r=.5*(c-e),f=this.valueSize;this._weightPrev=r/(e-i),this._weightNext=r/(n-c),this._offsetPrev=t*f,this._offsetNext=d*f},interpolate_:function(a,e,c,b){for(var t=this.resultBuffer,d=this.sampleValues,i=this.valueSize,n=a*i,r=n-i,f=this._offsetPrev,o=this._offsetNext,s=this._weightPrev,h=this._weightNext,l=(c-e)/(b-e),u=l*l,p=u*l,m=-s*p+2*s*u-s*l,g=(1+s)*p+(-1.5-2*s)*u+(-.5+s)*l+1,v=(-1-h)*p+(1.5+h)*u+.5*l,y=h*p-h*u,x=0;x!==i;++x)t[x]=m*d[f+x]+g*d[r+x]+v*d[n+x]+y*d[o+x];return t}}),ef.prototype=Object.assign(Object.create($r.prototype),{constructor:ef,interpolate_:function(a,e,c,b){for(var t=this.resultBuffer,d=this.sampleValues,i=this.valueSize,n=a*i,r=n-i,f=(c-e)/(b-e),o=1-f,s=0;s!==i;++s)t[s]=d[r+s]*o+d[n+s]*f;return t}}),cf.prototype=Object.assign(Object.create($r.prototype),{constructor:cf,interpolate_:function(a){return this.copySampleValue_(a-1)}}),Object.assign(bf,{toJSON:function(a){var e,c=a.constructor;if(void 0!==c.toJSON)e=c.toJSON(a);else{e={name:a.name,times:Qr.convertArray(a.times,Array),values:Qr.convertArray(a.values,Array)};var b=a.getInterpolation();b!==a.DefaultInterpolation&&(e.interpolation=b)}return e.type=a.ValueTypeName,e}}),Object.assign(bf.prototype,{constructor:bf,TimeBufferType:Float32Array,ValueBufferType:Float32Array,DefaultInterpolation:2301,InterpolantFactoryMethodDiscrete:function(a){return new cf(this.times,this.values,this.getValueSize(),a)},InterpolantFactoryMethodLinear:function(a){return new ef(this.times,this.values,this.getValueSize(),a)},InterpolantFactoryMethodSmooth:function(a){return new af(this.times,this.values,this.getValueSize(),a)},setInterpolation:function(a){var e;switch(a){case 2300:e=this.InterpolantFactoryMethodDiscrete;break;case 2301:e=this.InterpolantFactoryMethodLinear;break;case 2302:e=this.InterpolantFactoryMethodSmooth}if(void 0===e){var c="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(a===this.DefaultInterpolation)throw new Error(c);this.setInterpolation(this.DefaultInterpolation)}return console.warn("THREE.KeyframeTrack:",c),this}return this.createInterpolant=e,this},getInterpolation:function(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return 2300;case this.InterpolantFactoryMethodLinear:return 2301;case this.InterpolantFactoryMethodSmooth:return 2302}},getValueSize:function(){return this.values.length/this.times.length},shift:function(a){if(0!==a)for(var e=this.times,c=0,b=e.length;c!==b;++c)e[c]+=a;return this},scale:function(a){if(1!==a)for(var e=this.times,c=0,b=e.length;c!==b;++c)e[c]*=a;return this},trim:function(a,e){for(var c=this.times,b=c.length,t=0,d=b-1;t!==b&&c[t]<a;)++t;for(;-1!==d&&c[d]>e;)--d;if(++d,0!==t||d!==b){t>=d&&(t=(d=Math.max(d,1))-1);var i=this.getValueSize();this.times=Qr.arraySlice(c,t,d),this.values=Qr.arraySlice(this.values,t*i,d*i)}return this},validate:function(){var a=!0,e=this.getValueSize();e-Math.floor(e)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),a=!1);var c=this.times,b=this.values,t=c.length;0===t&&(console.error("THREE.KeyframeTrack: Track is empty.",this),a=!1);for(var d=null,i=0;i!==t;i++){var n=c[i];if("number"==typeof n&&isNaN(n)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,i,n),a=!1;break}if(null!==d&&d>n){console.error("THREE.KeyframeTrack: Out of order keys.",this,i,n,d),a=!1;break}d=n}if(void 0!==b&&Qr.isTypedArray(b)){i=0;for(var r=b.length;i!==r;++i){var f=b[i];if(isNaN(f)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,i,f),a=!1;break}}}return a},optimize:function(){for(var a=this.times,e=this.values,c=this.getValueSize(),b=2302===this.getInterpolation(),t=1,d=a.length-1,i=1;i<d;++i){var n=!1,r=a[i];if(r!==a[i+1]&&(1!==i||r!==r[0]))if(b)n=!0;else for(var f=i*c,o=f-c,s=f+c,h=0;h!==c;++h){var l=e[f+h];if(l!==e[o+h]||l!==e[s+h]){n=!0;break}}if(n){if(i!==t){a[t]=a[i];var u=i*c,p=t*c;for(h=0;h!==c;++h)e[p+h]=e[u+h]}++t}}if(d>0){a[t]=a[d];for(u=d*c,p=t*c,h=0;h!==c;++h)e[p+h]=e[u+h];++t}return t!==a.length&&(this.times=Qr.arraySlice(a,0,t),this.values=Qr.arraySlice(e,0,t*c)),this},clone:function(){var a=Qr.arraySlice(this.times,0),e=Qr.arraySlice(this.values,0),c=new(0,this.constructor)(this.name,a,e);return c.createInterpolant=this.createInterpolant,c}}),tf.prototype=Object.assign(Object.create(bf.prototype),{constructor:tf,ValueTypeName:"bool",ValueBufferType:Array,DefaultInterpolation:2300,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0}),df.prototype=Object.assign(Object.create(bf.prototype),{constructor:df,ValueTypeName:"color"}),nf.prototype=Object.assign(Object.create(bf.prototype),{constructor:nf,ValueTypeName:"number"}),rf.prototype=Object.assign(Object.create($r.prototype),{constructor:rf,interpolate_:function(a,e,c,b){for(var t=this.resultBuffer,d=this.sampleValues,i=this.valueSize,n=a*i,r=(c-e)/(b-e),f=n+i;n!==f;n+=4)Oe.slerpFlat(t,0,d,n-i,d,n,r);return t}}),ff.prototype=Object.assign(Object.create(bf.prototype),{constructor:ff,ValueTypeName:"quaternion",DefaultInterpolation:2301,InterpolantFactoryMethodLinear:function(a){return new rf(this.times,this.values,this.getValueSize(),a)},InterpolantFactoryMethodSmooth:void 0}),of.prototype=Object.assign(Object.create(bf.prototype),{constructor:of,ValueTypeName:"string",ValueBufferType:Array,DefaultInterpolation:2300,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0}),sf.prototype=Object.assign(Object.create(bf.prototype),{constructor:sf,ValueTypeName:"vector"}),Object.assign(hf,{parse:function(a){for(var e=[],c=a.tracks,b=1/(a.fps||1),t=0,d=c.length;t!==d;++t)e.push(lf(c[t]).scale(b));return new hf(a.name,a.duration,e)},toJSON:function(a){for(var e=[],c=a.tracks,b={name:a.name,duration:a.duration,tracks:e,uuid:a.uuid},t=0,d=c.length;t!==d;++t)e.push(bf.toJSON(c[t]));return b},CreateFromMorphTargetSequence:function(a,e,c,b){for(var t=e.length,d=[],i=0;i<t;i++){var n=[],r=[];n.push((i+t-1)%t,i,(i+1)%t),r.push(0,1,0);var f=Qr.getKeyframeOrder(n);n=Qr.sortedArray(n,1,f),r=Qr.sortedArray(r,1,f),b||0!==n[0]||(n.push(t),r.push(r[0])),d.push(new nf(".morphTargetInfluences["+e[i].name+"]",n,r).scale(1/c))}return new hf(a,-1,d)},findByName:function(a,e){var c=a;if(!Array.isArray(a)){var b=a;c=b.geometry&&b.geometry.animations||b.animations}for(var t=0;t<c.length;t++)if(c[t].name===e)return c[t];return null},CreateClipsFromMorphTargetSequences:function(a,e,c){for(var b={},t=/^([\w-]*?)([\d]+)$/,d=0,i=a.length;d<i;d++){var n=a[d],r=n.name.match(t);if(r&&r.length>1){var f=b[s=r[1]];f||(b[s]=f=[]),f.push(n)}}var o=[];for(var s in b)o.push(hf.CreateFromMorphTargetSequence(s,b[s],e,c));return o},parseAnimation:function(a,e){if(!a)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;for(var c=function(a,e,c,b,t){if(0!==c.length){var d=[],i=[];Qr.flattenJSON(c,d,i,b),0!==d.length&&t.push(new a(e,d,i))}},b=[],t=a.name||"default",d=a.length||-1,i=a.fps||30,n=a.hierarchy||[],r=0;r<n.length;r++){var f=n[r].keys;if(f&&0!==f.length)if(f[0].morphTargets){for(var o={},s=0;s<f.length;s++)if(f[s].morphTargets)for(var h=0;h<f[s].morphTargets.length;h++)o[f[s].morphTargets[h]]=-1;for(var l in o){var u=[],p=[];for(h=0;h!==f[s].morphTargets.length;++h){var m=f[s];u.push(m.time),p.push(m.morphTarget===l?1:0)}b.push(new nf(".morphTargetInfluence["+l+"]",u,p))}d=o.length*(i||1)}else{var g=".bones["+e[r].name+"]";c(sf,g+".position",f,"pos",b),c(ff,g+".quaternion",f,"rot",b),c(sf,g+".scale",f,"scl",b)}}return 0===b.length?null:new hf(t,d,b)}}),Object.assign(hf.prototype,{resetDuration:function(){for(var a=0,e=0,c=this.tracks.length;e!==c;++e){var b=this.tracks[e];a=Math.max(a,b.times[b.times.length-1])}return this.duration=a,this},trim:function(){for(var a=0;a<this.tracks.length;a++)this.tracks[a].trim(0,this.duration);return this},validate:function(){for(var a=!0,e=0;e<this.tracks.length;e++)a=a&&this.tracks[e].validate();return a},optimize:function(){for(var a=0;a<this.tracks.length;a++)this.tracks[a].optimize();return this},clone:function(){for(var a=[],e=0;e<this.tracks.length;e++)a.push(this.tracks[e].clone());return new hf(this.name,this.duration,a)}});var uf={enabled:!1,files:{},add:function(a,e){!1!==this.enabled&&(this.files[a]=e)},get:function(a){if(!1!==this.enabled)return this.files[a]},remove:function(a){delete this.files[a]},clear:function(){this.files={}}};function pf(a,e,c){var b=this,t=!1,d=0,i=0,n=void 0,r=[];this.onStart=void 0,this.onLoad=a,this.onProgress=e,this.onError=c,this.itemStart=function(a){i++,!1===t&&void 0!==b.onStart&&b.onStart(a,d,i),t=!0},this.itemEnd=function(a){d++,void 0!==b.onProgress&&b.onProgress(a,d,i),d===i&&(t=!1,void 0!==b.onLoad&&b.onLoad())},this.itemError=function(a){void 0!==b.onError&&b.onError(a)},this.resolveURL=function(a){return n?n(a):a},this.setURLModifier=function(a){return n=a,this},this.addHandler=function(a,e){return r.push(a,e),this},this.removeHandler=function(a){var e=r.indexOf(a);return-1!==e&&r.splice(e,2),this},this.getHandler=function(a){for(var e=0,c=r.length;e<c;e+=2){var b=r[e],t=r[e+1];if(b.test(a))return t}return null}}var mf=new pf;function gf(a){this.manager=void 0!==a?a:mf,this.crossOrigin="anonymous",this.path="",this.resourcePath=""}Object.assign(gf.prototype,{load:function(){},parse:function(){},setCrossOrigin:function(a){return this.crossOrigin=a,this},setPath:function(a){return this.path=a,this},setResourcePath:function(a){return this.resourcePath=a,this}});var vf={};function yf(a){gf.call(this,a)}function xf(a){gf.call(this,a)}function wf(a){gf.call(this,a)}function _f(a){gf.call(this,a)}function Mf(a){gf.call(this,a)}function Sf(a){gf.call(this,a)}function Tf(a){gf.call(this,a)}function Ef(){this.type="Curve",this.arcLengthDivisions=200}function Af(a,e,c,b,t,d,i,n){Ef.call(this),this.type="EllipseCurve",this.aX=a||0,this.aY=e||0,this.xRadius=c||1,this.yRadius=b||1,this.aStartAngle=t||0,this.aEndAngle=d||2*Math.PI,this.aClockwise=i||!1,this.aRotation=n||0}function Lf(a,e,c,b,t,d){Af.call(this,a,e,c,c,b,t,d),this.type="ArcCurve"}function Rf(){var a=0,e=0,c=0,b=0;function t(t,d,i,n){a=t,e=i,c=-3*t+3*d-2*i-n,b=2*t-2*d+i+n}return{initCatmullRom:function(a,e,c,b,d){t(e,c,d*(c-a),d*(b-e))},initNonuniformCatmullRom:function(a,e,c,b,d,i,n){var r=(e-a)/d-(c-a)/(d+i)+(c-e)/i,f=(c-e)/i-(b-e)/(i+n)+(b-c)/n;t(e,c,r*=i,f*=i)},calc:function(t){var d=t*t;return a+e*t+c*d+b*(d*t)}}}yf.prototype=Object.assign(Object.create(gf.prototype),{constructor:yf,load:function(a,e,c,b){void 0===a&&(a=""),void 0!==this.path&&(a=this.path+a),a=this.manager.resolveURL(a);var t=this,d=uf.get(a);if(void 0!==d)return t.manager.itemStart(a),setTimeout((function(){e&&e(d),t.manager.itemEnd(a)}),0),d;if(void 0===vf[a]){var i=a.match(/^data:(.*?)(;base64)?,(.*)$/);if(i){var n=i[1],r=!!i[2],f=i[3];f=decodeURIComponent(f),r&&(f=atob(f));try{var o,s=(this.responseType||"").toLowerCase();switch(s){case"arraybuffer":case"blob":for(var h=new Uint8Array(f.length),l=0;l<f.length;l++)h[l]=f.charCodeAt(l);o="blob"===s?new Blob([h.buffer],{type:n}):h.buffer;break;case"document":var u=new DOMParser;o=u.parseFromString(f,n);break;case"json":o=JSON.parse(f);break;default:o=f}setTimeout((function(){e&&e(o),t.manager.itemEnd(a)}),0)}catch(e){setTimeout((function(){b&&b(e),t.manager.itemError(a),t.manager.itemEnd(a)}),0)}}else{vf[a]=[],vf[a].push({onLoad:e,onProgress:c,onError:b});var p=new XMLHttpRequest;for(var m in p.open("GET",a,!0),p.addEventListener("load",(function(e){var c=this.response;uf.add(a,c);var b=vf[a];if(delete vf[a],200===this.status||0===this.status){0===this.status&&console.warn("THREE.FileLoader: HTTP Status 0 received.");for(var d=0,i=b.length;d<i;d++){(n=b[d]).onLoad&&n.onLoad(c)}t.manager.itemEnd(a)}else{for(d=0,i=b.length;d<i;d++){var n;(n=b[d]).onError&&n.onError(e)}t.manager.itemError(a),t.manager.itemEnd(a)}}),!1),p.addEventListener("progress",(function(e){for(var c=vf[a],b=0,t=c.length;b<t;b++){var d=c[b];d.onProgress&&d.onProgress(e)}}),!1),p.addEventListener("error",(function(e){var c=vf[a];delete vf[a];for(var b=0,d=c.length;b<d;b++){var i=c[b];i.onError&&i.onError(e)}t.manager.itemError(a),t.manager.itemEnd(a)}),!1),p.addEventListener("abort",(function(e){var c=vf[a];delete vf[a];for(var b=0,d=c.length;b<d;b++){var i=c[b];i.onError&&i.onError(e)}t.manager.itemError(a),t.manager.itemEnd(a)}),!1),void 0!==this.responseType&&(p.responseType=this.responseType),void 0!==this.withCredentials&&(p.withCredentials=this.withCredentials),p.overrideMimeType&&p.overrideMimeType(void 0!==this.mimeType?this.mimeType:"text/plain"),this.requestHeader)p.setRequestHeader(m,this.requestHeader[m]);p.send(null)}return t.manager.itemStart(a),p}vf[a].push({onLoad:e,onProgress:c,onError:b})},setResponseType:function(a){return this.responseType=a,this},setWithCredentials:function(a){return this.withCredentials=a,this},setMimeType:function(a){return this.mimeType=a,this},setRequestHeader:function(a){return this.requestHeader=a,this}}),xf.prototype=Object.assign(Object.create(gf.prototype),{constructor:xf,load:function(a,e,c,b){var t=this,d=new yf(t.manager);d.setPath(t.path),d.load(a,(function(a){e(t.parse(JSON.parse(a)))}),c,b)},parse:function(a){for(var e=[],c=0;c<a.length;c++){var b=hf.parse(a[c]);e.push(b)}return e}}),wf.prototype=Object.assign(Object.create(gf.prototype),{constructor:wf,load:function(a,e,c,b){var t=this,d=[],i=new Tn;i.image=d;var n=new yf(this.manager);function r(r){n.load(a[r],(function(a){var c=t.parse(a,!0);d[r]={width:c.width,height:c.height,format:c.format,mipmaps:c.mipmaps},6===(f+=1)&&(1===c.mipmapCount&&(i.minFilter=ma),i.format=c.format,i.needsUpdate=!0,e&&e(i))}),c,b)}if(n.setPath(this.path),n.setResponseType("arraybuffer"),Array.isArray(a))for(var f=0,o=0,s=a.length;o<s;++o)r(o);else n.load(a,(function(a){var c=t.parse(a,!0);if(c.isCubemap)for(var b=c.mipmaps.length/c.mipmapCount,n=0;n<b;n++){d[n]={mipmaps:[]};for(var r=0;r<c.mipmapCount;r++)d[n].mipmaps.push(c.mipmaps[n*c.mipmapCount+r]),d[n].format=c.format,d[n].width=c.width,d[n].height=c.height}else i.image.width=c.width,i.image.height=c.height,i.mipmaps=c.mipmaps;1===c.mipmapCount&&(i.minFilter=ma),i.format=c.format,i.needsUpdate=!0,e&&e(i)}),c,b);return i}}),_f.prototype=Object.assign(Object.create(gf.prototype),{constructor:_f,load:function(a,e,c,b){var t=this,d=new ut,i=new yf(this.manager);return i.setResponseType("arraybuffer"),i.setPath(this.path),i.load(a,(function(a){var c=t.parse(a);c&&(void 0!==c.image?d.image=c.image:void 0!==c.data&&(d.image.width=c.width,d.image.height=c.height,d.image.data=c.data),d.wrapS=void 0!==c.wrapS?c.wrapS:sa,d.wrapT=void 0!==c.wrapT?c.wrapT:sa,d.magFilter=void 0!==c.magFilter?c.magFilter:ma,d.minFilter=void 0!==c.minFilter?c.minFilter:va,d.anisotropy=void 0!==c.anisotropy?c.anisotropy:1,void 0!==c.format&&(d.format=c.format),void 0!==c.type&&(d.type=c.type),void 0!==c.mipmaps&&(d.mipmaps=c.mipmaps),1===c.mipmapCount&&(d.minFilter=ma),d.needsUpdate=!0,e&&e(d,c))}),c,b),d}}),Mf.prototype=Object.assign(Object.create(gf.prototype),{constructor:Mf,load:function(a,e,c,b){void 0!==this.path&&(a=this.path+a),a=this.manager.resolveURL(a);var t=this,d=uf.get(a);if(void 0!==d)return t.manager.itemStart(a),setTimeout((function(){e&&e(d),t.manager.itemEnd(a)}),0),d;var i=document.createElementNS("http://www.w3.org/1999/xhtml","img");function n(){i.removeEventListener("load",n,!1),i.removeEventListener("error",r,!1),uf.add(a,this),e&&e(this),t.manager.itemEnd(a)}function r(e){i.removeEventListener("load",n,!1),i.removeEventListener("error",r,!1),b&&b(e),t.manager.itemError(a),t.manager.itemEnd(a)}return i.addEventListener("load",n,!1),i.addEventListener("error",r,!1),"data:"!==a.substr(0,5)&&void 0!==this.crossOrigin&&(i.crossOrigin=this.crossOrigin),t.manager.itemStart(a),i.src=a,i}}),Sf.prototype=Object.assign(Object.create(gf.prototype),{constructor:Sf,load:function(a,e,c,b){var t=new Gt,d=new Mf(this.manager);d.setCrossOrigin(this.crossOrigin),d.setPath(this.path);var i=0;function n(c){d.load(a[c],(function(a){t.images[c]=a,6===++i&&(t.needsUpdate=!0,e&&e(t))}),void 0,b)}for(var r=0;r<a.length;++r)n(r);return t}}),Tf.prototype=Object.assign(Object.create(gf.prototype),{constructor:Tf,load:function(a,e,c,b){var t=new He,d=new Mf(this.manager);return d.setCrossOrigin(this.crossOrigin),d.setPath(this.path),d.load(a,(function(c){t.image=c;var b=a.search(/\.jpe?g($|\?)/i)>0||0===a.search(/^data\:image\/jpeg/);t.format=b?Oa:Ia,t.needsUpdate=!0,void 0!==e&&e(t)}),c,b),t}}),Object.assign(Ef.prototype,{getPoint:function(){return console.warn("THREE.Curve: .getPoint() not implemented."),null},getPointAt:function(a,e){var c=this.getUtoTmapping(a);return this.getPoint(c,e)},getPoints:function(a){void 0===a&&(a=5);for(var e=[],c=0;c<=a;c++)e.push(this.getPoint(c/a));return e},getSpacedPoints:function(a){void 0===a&&(a=5);for(var e=[],c=0;c<=a;c++)e.push(this.getPointAt(c/a));return e},getLength:function(){var a=this.getLengths();return a[a.length-1]},getLengths:function(a){if(void 0===a&&(a=this.arcLengthDivisions),this.cacheArcLengths&&this.cacheArcLengths.length===a+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var e,c,b=[],t=this.getPoint(0),d=0;for(b.push(0),c=1;c<=a;c++)d+=(e=this.getPoint(c/a)).distanceTo(t),b.push(d),t=e;return this.cacheArcLengths=b,b},updateArcLengths:function(){this.needsUpdate=!0,this.getLengths()},getUtoTmapping:function(a,e){var c,b=this.getLengths(),t=0,d=b.length;c=e||a*b[d-1];for(var i,n=0,r=d-1;n<=r;)if((i=b[t=Math.floor(n+(r-n)/2)]-c)<0)n=t+1;else{if(!(i>0)){r=t;break}r=t-1}if(b[t=r]===c)return t/(d-1);var f=b[t];return(t+(c-f)/(b[t+1]-f))/(d-1)},getTangent:function(a){var e=a-1e-4,c=a+1e-4;e<0&&(e=0),c>1&&(c=1);var b=this.getPoint(e);return this.getPoint(c).clone().sub(b).normalize()},getTangentAt:function(a){var e=this.getUtoTmapping(a);return this.getTangent(e)},computeFrenetFrames:function(a,e){var c,b,t,d=new De,i=[],n=[],r=[],f=new De,o=new Qe;for(c=0;c<=a;c++)b=c/a,i[c]=this.getTangentAt(b),i[c].normalize();n[0]=new De,r[0]=new De;var s=Number.MAX_VALUE,h=Math.abs(i[0].x),l=Math.abs(i[0].y),u=Math.abs(i[0].z);for(h<=s&&(s=h,d.set(1,0,0)),l<=s&&(s=l,d.set(0,1,0)),u<=s&&d.set(0,0,1),f.crossVectors(i[0],d).normalize(),n[0].crossVectors(i[0],f),r[0].crossVectors(i[0],n[0]),c=1;c<=a;c++)n[c]=n[c-1].clone(),r[c]=r[c-1].clone(),f.crossVectors(i[c-1],i[c]),f.length()>Number.EPSILON&&(f.normalize(),t=Math.acos(Pe.clamp(i[c-1].dot(i[c]),-1,1)),n[c].applyMatrix4(o.makeRotationAxis(f,t))),r[c].crossVectors(i[c],n[c]);if(!0===e)for(t=Math.acos(Pe.clamp(n[0].dot(n[a]),-1,1)),t/=a,i[0].dot(f.crossVectors(n[0],n[a]))>0&&(t=-t),c=1;c<=a;c++)n[c].applyMatrix4(o.makeRotationAxis(i[c],t*c)),r[c].crossVectors(i[c],n[c]);return{tangents:i,normals:n,binormals:r}},clone:function(){return(new this.constructor).copy(this)},copy:function(a){return this.arcLengthDivisions=a.arcLengthDivisions,this},toJSON:function(){var a={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return a.arcLengthDivisions=this.arcLengthDivisions,a.type=this.type,a},fromJSON:function(a){return this.arcLengthDivisions=a.arcLengthDivisions,this}}),Af.prototype=Object.create(Ef.prototype),Af.prototype.constructor=Af,Af.prototype.isEllipseCurve=!0,Af.prototype.getPoint=function(a,e){for(var c=e||new Ce,b=2*Math.PI,t=this.aEndAngle-this.aStartAngle,d=Math.abs(t)<Number.EPSILON;t<0;)t+=b;for(;t>b;)t-=b;t<Number.EPSILON&&(t=d?0:b),!0!==this.aClockwise||d||(t===b?t=-b:t-=b);var i=this.aStartAngle+a*t,n=this.aX+this.xRadius*Math.cos(i),r=this.aY+this.yRadius*Math.sin(i);if(0!==this.aRotation){var f=Math.cos(this.aRotation),o=Math.sin(this.aRotation),s=n-this.aX,h=r-this.aY;n=s*f-h*o+this.aX,r=s*o+h*f+this.aY}return c.set(n,r)},Af.prototype.copy=function(a){return Ef.prototype.copy.call(this,a),this.aX=a.aX,this.aY=a.aY,this.xRadius=a.xRadius,this.yRadius=a.yRadius,this.aStartAngle=a.aStartAngle,this.aEndAngle=a.aEndAngle,this.aClockwise=a.aClockwise,this.aRotation=a.aRotation,this},Af.prototype.toJSON=function(){var a=Ef.prototype.toJSON.call(this);return a.aX=this.aX,a.aY=this.aY,a.xRadius=this.xRadius,a.yRadius=this.yRadius,a.aStartAngle=this.aStartAngle,a.aEndAngle=this.aEndAngle,a.aClockwise=this.aClockwise,a.aRotation=this.aRotation,a},Af.prototype.fromJSON=function(a){return Ef.prototype.fromJSON.call(this,a),this.aX=a.aX,this.aY=a.aY,this.xRadius=a.xRadius,this.yRadius=a.yRadius,this.aStartAngle=a.aStartAngle,this.aEndAngle=a.aEndAngle,this.aClockwise=a.aClockwise,this.aRotation=a.aRotation,this},Lf.prototype=Object.create(Af.prototype),Lf.prototype.constructor=Lf,Lf.prototype.isArcCurve=!0;var Pf=new De,Cf=new Rf,Of=new Rf,If=new Rf;function Nf(a,e,c,b){Ef.call(this),this.type="CatmullRomCurve3",this.points=a||[],this.closed=e||!1,this.curveType=c||"centripetal",this.tension=b||.5}function Df(a,e,c,b,t){var d=.5*(b-e),i=.5*(t-c),n=a*a;return(2*c-2*b+d+i)*(a*n)+(-3*c+3*b-2*d-i)*n+d*a+c}function zf(a,e,c,b){return function(a,e){var c=1-a;return c*c*e}(a,e)+function(a,e){return 2*(1-a)*a*e}(a,c)+function(a,e){return a*a*e}(a,b)}function Uf(a,e,c,b,t){return function(a,e){var c=1-a;return c*c*c*e}(a,e)+function(a,e){var c=1-a;return 3*c*c*a*e}(a,c)+function(a,e){return 3*(1-a)*a*a*e}(a,b)+function(a,e){return a*a*a*e}(a,t)}function Bf(a,e,c,b){Ef.call(this),this.type="CubicBezierCurve",this.v0=a||new Ce,this.v1=e||new Ce,this.v2=c||new Ce,this.v3=b||new Ce}function Ff(a,e,c,b){Ef.call(this),this.type="CubicBezierCurve3",this.v0=a||new De,this.v1=e||new De,this.v2=c||new De,this.v3=b||new De}function Gf(a,e){Ef.call(this),this.type="LineCurve",this.v1=a||new Ce,this.v2=e||new Ce}function Hf(a,e){Ef.call(this),this.type="LineCurve3",this.v1=a||new De,this.v2=e||new De}function Vf(a,e,c){Ef.call(this),this.type="QuadraticBezierCurve",this.v0=a||new Ce,this.v1=e||new Ce,this.v2=c||new Ce}function kf(a,e,c){Ef.call(this),this.type="QuadraticBezierCurve3",this.v0=a||new De,this.v1=e||new De,this.v2=c||new De}function jf(a){Ef.call(this),this.type="SplineCurve",this.points=a||[]}Nf.prototype=Object.create(Ef.prototype),Nf.prototype.constructor=Nf,Nf.prototype.isCatmullRomCurve3=!0,Nf.prototype.getPoint=function(a,e){var c,b,t,d,i=e||new De,n=this.points,r=n.length,f=(r-(this.closed?0:1))*a,o=Math.floor(f),s=f-o;if(this.closed?o+=o>0?0:(Math.floor(Math.abs(o)/r)+1)*r:0===s&&o===r-1&&(o=r-2,s=1),this.closed||o>0?c=n[(o-1)%r]:(Pf.subVectors(n[0],n[1]).add(n[0]),c=Pf),b=n[o%r],t=n[(o+1)%r],this.closed||o+2<r?d=n[(o+2)%r]:(Pf.subVectors(n[r-1],n[r-2]).add(n[r-1]),d=Pf),"centripetal"===this.curveType||"chordal"===this.curveType){var h="chordal"===this.curveType?.5:.25,l=Math.pow(c.distanceToSquared(b),h),u=Math.pow(b.distanceToSquared(t),h),p=Math.pow(t.distanceToSquared(d),h);u<1e-4&&(u=1),l<1e-4&&(l=u),p<1e-4&&(p=u),Cf.initNonuniformCatmullRom(c.x,b.x,t.x,d.x,l,u,p),Of.initNonuniformCatmullRom(c.y,b.y,t.y,d.y,l,u,p),If.initNonuniformCatmullRom(c.z,b.z,t.z,d.z,l,u,p)}else"catmullrom"===this.curveType&&(Cf.initCatmullRom(c.x,b.x,t.x,d.x,this.tension),Of.initCatmullRom(c.y,b.y,t.y,d.y,this.tension),If.initCatmullRom(c.z,b.z,t.z,d.z,this.tension));return i.set(Cf.calc(s),Of.calc(s),If.calc(s)),i},Nf.prototype.copy=function(a){Ef.prototype.copy.call(this,a),this.points=[];for(var e=0,c=a.points.length;e<c;e++){var b=a.points[e];this.points.push(b.clone())}return this.closed=a.closed,this.curveType=a.curveType,this.tension=a.tension,this},Nf.prototype.toJSON=function(){var a=Ef.prototype.toJSON.call(this);a.points=[];for(var e=0,c=this.points.length;e<c;e++){var b=this.points[e];a.points.push(b.toArray())}return a.closed=this.closed,a.curveType=this.curveType,a.tension=this.tension,a},Nf.prototype.fromJSON=function(a){Ef.prototype.fromJSON.call(this,a),this.points=[];for(var e=0,c=a.points.length;e<c;e++){var b=a.points[e];this.points.push((new De).fromArray(b))}return this.closed=a.closed,this.curveType=a.curveType,this.tension=a.tension,this},Bf.prototype=Object.create(Ef.prototype),Bf.prototype.constructor=Bf,Bf.prototype.isCubicBezierCurve=!0,Bf.prototype.getPoint=function(a,e){var c=e||new Ce,b=this.v0,t=this.v1,d=this.v2,i=this.v3;return c.set(Uf(a,b.x,t.x,d.x,i.x),Uf(a,b.y,t.y,d.y,i.y)),c},Bf.prototype.copy=function(a){return Ef.prototype.copy.call(this,a),this.v0.copy(a.v0),this.v1.copy(a.v1),this.v2.copy(a.v2),this.v3.copy(a.v3),this},Bf.prototype.toJSON=function(){var a=Ef.prototype.toJSON.call(this);return a.v0=this.v0.toArray(),a.v1=this.v1.toArray(),a.v2=this.v2.toArray(),a.v3=this.v3.toArray(),a},Bf.prototype.fromJSON=function(a){return Ef.prototype.fromJSON.call(this,a),this.v0.fromArray(a.v0),this.v1.fromArray(a.v1),this.v2.fromArray(a.v2),this.v3.fromArray(a.v3),this},Ff.prototype=Object.create(Ef.prototype),Ff.prototype.constructor=Ff,Ff.prototype.isCubicBezierCurve3=!0,Ff.prototype.getPoint=function(a,e){var c=e||new De,b=this.v0,t=this.v1,d=this.v2,i=this.v3;return c.set(Uf(a,b.x,t.x,d.x,i.x),Uf(a,b.y,t.y,d.y,i.y),Uf(a,b.z,t.z,d.z,i.z)),c},Ff.prototype.copy=function(a){return Ef.prototype.copy.call(this,a),this.v0.copy(a.v0),this.v1.copy(a.v1),this.v2.copy(a.v2),this.v3.copy(a.v3),this},Ff.prototype.toJSON=function(){var a=Ef.prototype.toJSON.call(this);return a.v0=this.v0.toArray(),a.v1=this.v1.toArray(),a.v2=this.v2.toArray(),a.v3=this.v3.toArray(),a},Ff.prototype.fromJSON=function(a){return Ef.prototype.fromJSON.call(this,a),this.v0.fromArray(a.v0),this.v1.fromArray(a.v1),this.v2.fromArray(a.v2),this.v3.fromArray(a.v3),this},Gf.prototype=Object.create(Ef.prototype),Gf.prototype.constructor=Gf,Gf.prototype.isLineCurve=!0,Gf.prototype.getPoint=function(a,e){var c=e||new Ce;return 1===a?c.copy(this.v2):(c.copy(this.v2).sub(this.v1),c.multiplyScalar(a).add(this.v1)),c},Gf.prototype.getPointAt=function(a,e){return this.getPoint(a,e)},Gf.prototype.getTangent=function(){return this.v2.clone().sub(this.v1).normalize()},Gf.prototype.copy=function(a){return Ef.prototype.copy.call(this,a),this.v1.copy(a.v1),this.v2.copy(a.v2),this},Gf.prototype.toJSON=function(){var a=Ef.prototype.toJSON.call(this);return a.v1=this.v1.toArray(),a.v2=this.v2.toArray(),a},Gf.prototype.fromJSON=function(a){return Ef.prototype.fromJSON.call(this,a),this.v1.fromArray(a.v1),this.v2.fromArray(a.v2),this},Hf.prototype=Object.create(Ef.prototype),Hf.prototype.constructor=Hf,Hf.prototype.isLineCurve3=!0,Hf.prototype.getPoint=function(a,e){var c=e||new De;return 1===a?c.copy(this.v2):(c.copy(this.v2).sub(this.v1),c.multiplyScalar(a).add(this.v1)),c},Hf.prototype.getPointAt=function(a,e){return this.getPoint(a,e)},Hf.prototype.copy=function(a){return Ef.prototype.copy.call(this,a),this.v1.copy(a.v1),this.v2.copy(a.v2),this},Hf.prototype.toJSON=function(){var a=Ef.prototype.toJSON.call(this);return a.v1=this.v1.toArray(),a.v2=this.v2.toArray(),a},Hf.prototype.fromJSON=function(a){return Ef.prototype.fromJSON.call(this,a),this.v1.fromArray(a.v1),this.v2.fromArray(a.v2),this},Vf.prototype=Object.create(Ef.prototype),Vf.prototype.constructor=Vf,Vf.prototype.isQuadraticBezierCurve=!0,Vf.prototype.getPoint=function(a,e){var c=e||new Ce,b=this.v0,t=this.v1,d=this.v2;return c.set(zf(a,b.x,t.x,d.x),zf(a,b.y,t.y,d.y)),c},Vf.prototype.copy=function(a){return Ef.prototype.copy.call(this,a),this.v0.copy(a.v0),this.v1.copy(a.v1),this.v2.copy(a.v2),this},Vf.prototype.toJSON=function(){var a=Ef.prototype.toJSON.call(this);return a.v0=this.v0.toArray(),a.v1=this.v1.toArray(),a.v2=this.v2.toArray(),a},Vf.prototype.fromJSON=function(a){return Ef.prototype.fromJSON.call(this,a),this.v0.fromArray(a.v0),this.v1.fromArray(a.v1),this.v2.fromArray(a.v2),this},kf.prototype=Object.create(Ef.prototype),kf.prototype.constructor=kf,kf.prototype.isQuadraticBezierCurve3=!0,kf.prototype.getPoint=function(a,e){var c=e||new De,b=this.v0,t=this.v1,d=this.v2;return c.set(zf(a,b.x,t.x,d.x),zf(a,b.y,t.y,d.y),zf(a,b.z,t.z,d.z)),c},kf.prototype.copy=function(a){return Ef.prototype.copy.call(this,a),this.v0.copy(a.v0),this.v1.copy(a.v1),this.v2.copy(a.v2),this},kf.prototype.toJSON=function(){var a=Ef.prototype.toJSON.call(this);return a.v0=this.v0.toArray(),a.v1=this.v1.toArray(),a.v2=this.v2.toArray(),a},kf.prototype.fromJSON=function(a){return Ef.prototype.fromJSON.call(this,a),this.v0.fromArray(a.v0),this.v1.fromArray(a.v1),this.v2.fromArray(a.v2),this},jf.prototype=Object.create(Ef.prototype),jf.prototype.constructor=jf,jf.prototype.isSplineCurve=!0,jf.prototype.getPoint=function(a,e){var c=e||new Ce,b=this.points,t=(b.length-1)*a,d=Math.floor(t),i=t-d,n=b[0===d?d:d-1],r=b[d],f=b[d>b.length-2?b.length-1:d+1],o=b[d>b.length-3?b.length-1:d+2];return c.set(Df(i,n.x,r.x,f.x,o.x),Df(i,n.y,r.y,f.y,o.y)),c},jf.prototype.copy=function(a){Ef.prototype.copy.call(this,a),this.points=[];for(var e=0,c=a.points.length;e<c;e++){var b=a.points[e];this.points.push(b.clone())}return this},jf.prototype.toJSON=function(){var a=Ef.prototype.toJSON.call(this);a.points=[];for(var e=0,c=this.points.length;e<c;e++){var b=this.points[e];a.points.push(b.toArray())}return a},jf.prototype.fromJSON=function(a){Ef.prototype.fromJSON.call(this,a),this.points=[];for(var e=0,c=a.points.length;e<c;e++){var b=a.points[e];this.points.push((new Ce).fromArray(b))}return this};var Wf=Object.freeze({ArcCurve:Lf,CatmullRomCurve3:Nf,CubicBezierCurve:Bf,CubicBezierCurve3:Ff,EllipseCurve:Af,LineCurve:Gf,LineCurve3:Hf,QuadraticBezierCurve:Vf,QuadraticBezierCurve3:kf,SplineCurve:jf});function qf(){Ef.call(this),this.type="CurvePath",this.curves=[],this.autoClose=!1}function Xf(a){qf.call(this),this.type="Path",this.currentPoint=new Ce,a&&this.setFromPoints(a)}function Yf(a){Xf.call(this,a),this.uuid=Pe.generateUUID(),this.type="Shape",this.holes=[]}function Zf(a,e){mc.call(this),this.type="Light",this.color=new cb(a),this.intensity=void 0!==e?e:1,this.receiveShadow=void 0}function Jf(a,e,c){Zf.call(this,a,c),this.type="HemisphereLight",this.castShadow=void 0,this.position.copy(mc.DefaultUp),this.updateMatrix(),this.groundColor=new cb(e)}function Kf(a){this.camera=a,this.bias=0,this.radius=1,this.mapSize=new Ce(512,512),this.map=null,this.mapPass=null,this.matrix=new Qe,this._frustum=new wt,this._frameExtents=new Ce(1,1),this._viewportCount=1,this._viewports=[new Ve(0,0,1,1)]}function Qf(){Kf.call(this,new ft(50,1,.5,500))}function $f(a,e,c,b,t,d){Zf.call(this,a,e),this.type="SpotLight",this.position.copy(mc.DefaultUp),this.updateMatrix(),this.target=new mc,Object.defineProperty(this,"power",{get:function(){return this.intensity*Math.PI},set:function(a){this.intensity=a/Math.PI}}),this.distance=void 0!==c?c:0,this.angle=void 0!==b?b:Math.PI/3,this.penumbra=void 0!==t?t:0,this.decay=void 0!==d?d:1,this.shadow=new Qf}function ao(){Kf.call(this,new ft(90,1,.5,500)),this._frameExtents=new Ce(4,2),this._viewportCount=6,this._viewports=[new Ve(2,1,1,1),new Ve(0,1,1,1),new Ve(3,1,1,1),new Ve(1,1,1,1),new Ve(3,0,1,1),new Ve(1,0,1,1)],this._cubeDirections=[new De(1,0,0),new De(-1,0,0),new De(0,0,1),new De(0,0,-1),new De(0,1,0),new De(0,-1,0)],this._cubeUps=[new De(0,1,0),new De(0,1,0),new De(0,1,0),new De(0,1,0),new De(0,0,1),new De(0,0,-1)]}function eo(a,e,c,b){Zf.call(this,a,e),this.type="PointLight",Object.defineProperty(this,"power",{get:function(){return 4*this.intensity*Math.PI},set:function(a){this.intensity=a/(4*Math.PI)}}),this.distance=void 0!==c?c:0,this.decay=void 0!==b?b:1,this.shadow=new ao}function co(a,e,c,b,t,d){rt.call(this),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=void 0!==a?a:-1,this.right=void 0!==e?e:1,this.top=void 0!==c?c:1,this.bottom=void 0!==b?b:-1,this.near=void 0!==t?t:.1,this.far=void 0!==d?d:2e3,this.updateProjectionMatrix()}function bo(){Kf.call(this,new co(-5,5,5,-5,.5,500))}function to(a,e){Zf.call(this,a,e),this.type="DirectionalLight",this.position.copy(mc.DefaultUp),this.updateMatrix(),this.target=new mc,this.shadow=new bo}function io(a,e){Zf.call(this,a,e),this.type="AmbientLight",this.castShadow=void 0}function no(a,e,c,b){Zf.call(this,a,e),this.type="RectAreaLight",this.width=void 0!==c?c:10,this.height=void 0!==b?b:10}function ro(a){gf.call(this,a),this.textures={}}qf.prototype=Object.assign(Object.create(Ef.prototype),{constructor:qf,add:function(a){this.curves.push(a)},closePath:function(){var a=this.curves[0].getPoint(0),e=this.curves[this.curves.length-1].getPoint(1);a.equals(e)||this.curves.push(new Gf(e,a))},getPoint:function(a){for(var e=a*this.getLength(),c=this.getCurveLengths(),b=0;b<c.length;){if(c[b]>=e){var t=c[b]-e,d=this.curves[b],i=d.getLength(),n=0===i?0:1-t/i;return d.getPointAt(n)}b++}return null},getLength:function(){var a=this.getCurveLengths();return a[a.length-1]},updateArcLengths:function(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()},getCurveLengths:function(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;for(var a=[],e=0,c=0,b=this.curves.length;c<b;c++)e+=this.curves[c].getLength(),a.push(e);return this.cacheLengths=a,a},getSpacedPoints:function(a){void 0===a&&(a=40);for(var e=[],c=0;c<=a;c++)e.push(this.getPoint(c/a));return this.autoClose&&e.push(e[0]),e},getPoints:function(a){a=a||12;for(var e,c=[],b=0,t=this.curves;b<t.length;b++)for(var d=t[b],i=d&&d.isEllipseCurve?2*a:d&&(d.isLineCurve||d.isLineCurve3)?1:d&&d.isSplineCurve?a*d.points.length:a,n=d.getPoints(i),r=0;r<n.length;r++){var f=n[r];e&&e.equals(f)||(c.push(f),e=f)}return this.autoClose&&c.length>1&&!c[c.length-1].equals(c[0])&&c.push(c[0]),c},copy:function(a){Ef.prototype.copy.call(this,a),this.curves=[];for(var e=0,c=a.curves.length;e<c;e++){var b=a.curves[e];this.curves.push(b.clone())}return this.autoClose=a.autoClose,this},toJSON:function(){var a=Ef.prototype.toJSON.call(this);a.autoClose=this.autoClose,a.curves=[];for(var e=0,c=this.curves.length;e<c;e++){var b=this.curves[e];a.curves.push(b.toJSON())}return a},fromJSON:function(a){Ef.prototype.fromJSON.call(this,a),this.autoClose=a.autoClose,this.curves=[];for(var e=0,c=a.curves.length;e<c;e++){var b=a.curves[e];this.curves.push((new Wf[b.type]).fromJSON(b))}return this}}),Xf.prototype=Object.assign(Object.create(qf.prototype),{constructor:Xf,setFromPoints:function(a){this.moveTo(a[0].x,a[0].y);for(var e=1,c=a.length;e<c;e++)this.lineTo(a[e].x,a[e].y)},moveTo:function(a,e){this.currentPoint.set(a,e)},lineTo:function(a,e){var c=new Gf(this.currentPoint.clone(),new Ce(a,e));this.curves.push(c),this.currentPoint.set(a,e)},quadraticCurveTo:function(a,e,c,b){var t=new Vf(this.currentPoint.clone(),new Ce(a,e),new Ce(c,b));this.curves.push(t),this.currentPoint.set(c,b)},bezierCurveTo:function(a,e,c,b,t,d){var i=new Bf(this.currentPoint.clone(),new Ce(a,e),new Ce(c,b),new Ce(t,d));this.curves.push(i),this.currentPoint.set(t,d)},splineThru:function(a){var e=new jf([this.currentPoint.clone()].concat(a));this.curves.push(e),this.currentPoint.copy(a[a.length-1])},arc:function(a,e,c,b,t,d){var i=this.currentPoint.x,n=this.currentPoint.y;this.absarc(a+i,e+n,c,b,t,d)},absarc:function(a,e,c,b,t,d){this.absellipse(a,e,c,c,b,t,d)},ellipse:function(a,e,c,b,t,d,i,n){var r=this.currentPoint.x,f=this.currentPoint.y;this.absellipse(a+r,e+f,c,b,t,d,i,n)},absellipse:function(a,e,c,b,t,d,i,n){var r=new Af(a,e,c,b,t,d,i,n);if(this.curves.length>0){var f=r.getPoint(0);f.equals(this.currentPoint)||this.lineTo(f.x,f.y)}this.curves.push(r);var o=r.getPoint(1);this.currentPoint.copy(o)},copy:function(a){return qf.prototype.copy.call(this,a),this.currentPoint.copy(a.currentPoint),this},toJSON:function(){var a=qf.prototype.toJSON.call(this);return a.currentPoint=this.currentPoint.toArray(),a},fromJSON:function(a){return qf.prototype.fromJSON.call(this,a),this.currentPoint.fromArray(a.currentPoint),this}}),Yf.prototype=Object.assign(Object.create(Xf.prototype),{constructor:Yf,getPointsHoles:function(a){for(var e=[],c=0,b=this.holes.length;c<b;c++)e[c]=this.holes[c].getPoints(a);return e},extractPoints:function(a){return{shape:this.getPoints(a),holes:this.getPointsHoles(a)}},copy:function(a){Xf.prototype.copy.call(this,a),this.holes=[];for(var e=0,c=a.holes.length;e<c;e++){var b=a.holes[e];this.holes.push(b.clone())}return this},toJSON:function(){var a=Xf.prototype.toJSON.call(this);a.uuid=this.uuid,a.holes=[];for(var e=0,c=this.holes.length;e<c;e++){var b=this.holes[e];a.holes.push(b.toJSON())}return a},fromJSON:function(a){Xf.prototype.fromJSON.call(this,a),this.uuid=a.uuid,this.holes=[];for(var e=0,c=a.holes.length;e<c;e++){var b=a.holes[e];this.holes.push((new Xf).fromJSON(b))}return this}}),Zf.prototype=Object.assign(Object.create(mc.prototype),{constructor:Zf,isLight:!0,copy:function(a){return mc.prototype.copy.call(this,a),this.color.copy(a.color),this.intensity=a.intensity,this},toJSON:function(a){var e=mc.prototype.toJSON.call(this,a);return e.object.color=this.color.getHex(),e.object.intensity=this.intensity,void 0!==this.groundColor&&(e.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(e.object.distance=this.distance),void 0!==this.angle&&(e.object.angle=this.angle),void 0!==this.decay&&(e.object.decay=this.decay),void 0!==this.penumbra&&(e.object.penumbra=this.penumbra),void 0!==this.shadow&&(e.object.shadow=this.shadow.toJSON()),e}}),Jf.prototype=Object.assign(Object.create(Zf.prototype),{constructor:Jf,isHemisphereLight:!0,copy:function(a){return Zf.prototype.copy.call(this,a),this.groundColor.copy(a.groundColor),this}}),Object.assign(Kf.prototype,{_projScreenMatrix:new Qe,_lightPositionWorld:new De,_lookTarget:new De,getViewportCount:function(){return this._viewportCount},getFrustum:function(){return this._frustum},updateMatrices:function(a){var e=this.camera,c=this.matrix,b=this._projScreenMatrix,t=this._lookTarget,d=this._lightPositionWorld;d.setFromMatrixPosition(a.matrixWorld),e.position.copy(d),t.setFromMatrixPosition(a.target.matrixWorld),e.lookAt(t),e.updateMatrixWorld(),b.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),this._frustum.setFromMatrix(b),c.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),c.multiply(e.projectionMatrix),c.multiply(e.matrixWorldInverse)},getViewport:function(a){return this._viewports[a]},getFrameExtents:function(){return this._frameExtents},copy:function(a){return this.camera=a.camera.clone(),this.bias=a.bias,this.radius=a.radius,this.mapSize.copy(a.mapSize),this},clone:function(){return(new this.constructor).copy(this)},toJSON:function(){var a={};return 0!==this.bias&&(a.bias=this.bias),1!==this.radius&&(a.radius=this.radius),512===this.mapSize.x&&512===this.mapSize.y||(a.mapSize=this.mapSize.toArray()),a.camera=this.camera.toJSON(!1).object,delete a.camera.matrix,a}}),Qf.prototype=Object.assign(Object.create(Kf.prototype),{constructor:Qf,isSpotLightShadow:!0,updateMatrices:function(a,e,c){var b=this.camera,t=2*Pe.RAD2DEG*a.angle,d=this.mapSize.width/this.mapSize.height,i=a.distance||b.far;t===b.fov&&d===b.aspect&&i===b.far||(b.fov=t,b.aspect=d,b.far=i,b.updateProjectionMatrix()),Kf.prototype.updateMatrices.call(this,a,e,c)}}),$f.prototype=Object.assign(Object.create(Zf.prototype),{constructor:$f,isSpotLight:!0,copy:function(a){return Zf.prototype.copy.call(this,a),this.distance=a.distance,this.angle=a.angle,this.penumbra=a.penumbra,this.decay=a.decay,this.target=a.target.clone(),this.shadow=a.shadow.clone(),this}}),ao.prototype=Object.assign(Object.create(Kf.prototype),{constructor:ao,isPointLightShadow:!0,updateMatrices:function(a,e,c){var b=this.camera,t=this.matrix,d=this._lightPositionWorld,i=this._lookTarget,n=this._projScreenMatrix;d.setFromMatrixPosition(a.matrixWorld),b.position.copy(d),i.copy(b.position),i.add(this._cubeDirections[c]),b.up.copy(this._cubeUps[c]),b.lookAt(i),b.updateMatrixWorld(),t.makeTranslation(-d.x,-d.y,-d.z),n.multiplyMatrices(b.projectionMatrix,b.matrixWorldInverse),this._frustum.setFromMatrix(n)}}),eo.prototype=Object.assign(Object.create(Zf.prototype),{constructor:eo,isPointLight:!0,copy:function(a){return Zf.prototype.copy.call(this,a),this.distance=a.distance,this.decay=a.decay,this.shadow=a.shadow.clone(),this}}),co.prototype=Object.assign(Object.create(rt.prototype),{constructor:co,isOrthographicCamera:!0,copy:function(a,e){return rt.prototype.copy.call(this,a,e),this.left=a.left,this.right=a.right,this.top=a.top,this.bottom=a.bottom,this.near=a.near,this.far=a.far,this.zoom=a.zoom,this.view=null===a.view?null:Object.assign({},a.view),this},setViewOffset:function(a,e,c,b,t,d){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=a,this.view.fullHeight=e,this.view.offsetX=c,this.view.offsetY=b,this.view.width=t,this.view.height=d,this.updateProjectionMatrix()},clearViewOffset:function(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){var a=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),c=(this.right+this.left)/2,b=(this.top+this.bottom)/2,t=c-a,d=c+a,i=b+e,n=b-e;if(null!==this.view&&this.view.enabled){var r=this.zoom/(this.view.width/this.view.fullWidth),f=this.zoom/(this.view.height/this.view.fullHeight),o=(this.right-this.left)/this.view.width,s=(this.top-this.bottom)/this.view.height;d=(t+=o*(this.view.offsetX/r))+o*(this.view.width/r),n=(i-=s*(this.view.offsetY/f))-s*(this.view.height/f)}this.projectionMatrix.makeOrthographic(t,d,i,n,this.near,this.far),this.projectionMatrixInverse.getInverse(this.projectionMatrix)},toJSON:function(a){var e=mc.prototype.toJSON.call(this,a);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,null!==this.view&&(e.object.view=Object.assign({},this.view)),e}}),bo.prototype=Object.assign(Object.create(Kf.prototype),{constructor:bo,isDirectionalLightShadow:!0,updateMatrices:function(a,e,c){Kf.prototype.updateMatrices.call(this,a,e,c)}}),to.prototype=Object.assign(Object.create(Zf.prototype),{constructor:to,isDirectionalLight:!0,copy:function(a){return Zf.prototype.copy.call(this,a),this.target=a.target.clone(),this.shadow=a.shadow.clone(),this}}),io.prototype=Object.assign(Object.create(Zf.prototype),{constructor:io,isAmbientLight:!0}),no.prototype=Object.assign(Object.create(Zf.prototype),{constructor:no,isRectAreaLight:!0,copy:function(a){return Zf.prototype.copy.call(this,a),this.width=a.width,this.height=a.height,this},toJSON:function(a){var e=Zf.prototype.toJSON.call(this,a);return e.object.width=this.width,e.object.height=this.height,e}}),ro.prototype=Object.assign(Object.create(gf.prototype),{constructor:ro,load:function(a,e,c,b){var t=this,d=new yf(t.manager);d.setPath(t.path),d.load(a,(function(a){e(t.parse(JSON.parse(a)))}),c,b)},parse:function(a){var e=this.textures;function c(a){return void 0===e[a]&&console.warn("THREE.MaterialLoader: Undefined texture",a),e[a]}var b=new Kr[a.type];if(void 0!==a.uuid&&(b.uuid=a.uuid),void 0!==a.name&&(b.name=a.name),void 0!==a.color&&b.color.setHex(a.color),void 0!==a.roughness&&(b.roughness=a.roughness),void 0!==a.metalness&&(b.metalness=a.metalness),void 0!==a.sheen&&(b.sheen=(new cb).setHex(a.sheen)),void 0!==a.emissive&&b.emissive.setHex(a.emissive),void 0!==a.specular&&b.specular.setHex(a.specular),void 0!==a.shininess&&(b.shininess=a.shininess),void 0!==a.clearcoat&&(b.clearcoat=a.clearcoat),void 0!==a.clearcoatRoughness&&(b.clearcoatRoughness=a.clearcoatRoughness),void 0!==a.vertexColors&&(b.vertexColors=a.vertexColors),void 0!==a.fog&&(b.fog=a.fog),void 0!==a.flatShading&&(b.flatShading=a.flatShading),void 0!==a.blending&&(b.blending=a.blending),void 0!==a.combine&&(b.combine=a.combine),void 0!==a.side&&(b.side=a.side),void 0!==a.opacity&&(b.opacity=a.opacity),void 0!==a.transparent&&(b.transparent=a.transparent),void 0!==a.alphaTest&&(b.alphaTest=a.alphaTest),void 0!==a.depthTest&&(b.depthTest=a.depthTest),void 0!==a.depthWrite&&(b.depthWrite=a.depthWrite),void 0!==a.colorWrite&&(b.colorWrite=a.colorWrite),void 0!==a.stencilWrite&&(b.stencilWrite=a.stencilWrite),void 0!==a.stencilWriteMask&&(b.stencilWriteMask=a.stencilWriteMask),void 0!==a.stencilFunc&&(b.stencilFunc=a.stencilFunc),void 0!==a.stencilRef&&(b.stencilRef=a.stencilRef),void 0!==a.stencilFuncMask&&(b.stencilFuncMask=a.stencilFuncMask),void 0!==a.stencilFail&&(b.stencilFail=a.stencilFail),void 0!==a.stencilZFail&&(b.stencilZFail=a.stencilZFail),void 0!==a.stencilZPass&&(b.stencilZPass=a.stencilZPass),void 0!==a.wireframe&&(b.wireframe=a.wireframe),void 0!==a.wireframeLinewidth&&(b.wireframeLinewidth=a.wireframeLinewidth),void 0!==a.wireframeLinecap&&(b.wireframeLinecap=a.wireframeLinecap),void 0!==a.wireframeLinejoin&&(b.wireframeLinejoin=a.wireframeLinejoin),void 0!==a.rotation&&(b.rotation=a.rotation),1!==a.linewidth&&(b.linewidth=a.linewidth),void 0!==a.dashSize&&(b.dashSize=a.dashSize),void 0!==a.gapSize&&(b.gapSize=a.gapSize),void 0!==a.scale&&(b.scale=a.scale),void 0!==a.polygonOffset&&(b.polygonOffset=a.polygonOffset),void 0!==a.polygonOffsetFactor&&(b.polygonOffsetFactor=a.polygonOffsetFactor),void 0!==a.polygonOffsetUnits&&(b.polygonOffsetUnits=a.polygonOffsetUnits),void 0!==a.skinning&&(b.skinning=a.skinning),void 0!==a.morphTargets&&(b.morphTargets=a.morphTargets),void 0!==a.morphNormals&&(b.morphNormals=a.morphNormals),void 0!==a.dithering&&(b.dithering=a.dithering),void 0!==a.visible&&(b.visible=a.visible),void 0!==a.toneMapped&&(b.toneMapped=a.toneMapped),void 0!==a.userData&&(b.userData=a.userData),void 0!==a.uniforms)for(var t in a.uniforms){var d=a.uniforms[t];switch(b.uniforms[t]={},d.type){case"t":b.uniforms[t].value=c(d.value);break;case"c":b.uniforms[t].value=(new cb).setHex(d.value);break;case"v2":b.uniforms[t].value=(new Ce).fromArray(d.value);break;case"v3":b.uniforms[t].value=(new De).fromArray(d.value);break;case"v4":b.uniforms[t].value=(new Ve).fromArray(d.value);break;case"m3":b.uniforms[t].value=(new Be).fromArray(d.value);case"m4":b.uniforms[t].value=(new Qe).fromArray(d.value);break;default:b.uniforms[t].value=d.value}}if(void 0!==a.defines&&(b.defines=a.defines),void 0!==a.vertexShader&&(b.vertexShader=a.vertexShader),void 0!==a.fragmentShader&&(b.fragmentShader=a.fragmentShader),void 0!==a.extensions)for(var i in a.extensions)b.extensions[i]=a.extensions[i];if(void 0!==a.shading&&(b.flatShading=1===a.shading),void 0!==a.size&&(b.size=a.size),void 0!==a.sizeAttenuation&&(b.sizeAttenuation=a.sizeAttenuation),void 0!==a.map&&(b.map=c(a.map)),void 0!==a.matcap&&(b.matcap=c(a.matcap)),void 0!==a.alphaMap&&(b.alphaMap=c(a.alphaMap),b.transparent=!0),void 0!==a.bumpMap&&(b.bumpMap=c(a.bumpMap)),void 0!==a.bumpScale&&(b.bumpScale=a.bumpScale),void 0!==a.normalMap&&(b.normalMap=c(a.normalMap)),void 0!==a.normalMapType&&(b.normalMapType=a.normalMapType),void 0!==a.normalScale){var n=a.normalScale;!1===Array.isArray(n)&&(n=[n,n]),b.normalScale=(new Ce).fromArray(n)}return void 0!==a.displacementMap&&(b.displacementMap=c(a.displacementMap)),void 0!==a.displacementScale&&(b.displacementScale=a.displacementScale),void 0!==a.displacementBias&&(b.displacementBias=a.displacementBias),void 0!==a.roughnessMap&&(b.roughnessMap=c(a.roughnessMap)),void 0!==a.metalnessMap&&(b.metalnessMap=c(a.metalnessMap)),void 0!==a.emissiveMap&&(b.emissiveMap=c(a.emissiveMap)),void 0!==a.emissiveIntensity&&(b.emissiveIntensity=a.emissiveIntensity),void 0!==a.specularMap&&(b.specularMap=c(a.specularMap)),void 0!==a.envMap&&(b.envMap=c(a.envMap)),void 0!==a.envMapIntensity&&(b.envMapIntensity=a.envMapIntensity),void 0!==a.reflectivity&&(b.reflectivity=a.reflectivity),void 0!==a.refractionRatio&&(b.refractionRatio=a.refractionRatio),void 0!==a.lightMap&&(b.lightMap=c(a.lightMap)),void 0!==a.lightMapIntensity&&(b.lightMapIntensity=a.lightMapIntensity),void 0!==a.aoMap&&(b.aoMap=c(a.aoMap)),void 0!==a.aoMapIntensity&&(b.aoMapIntensity=a.aoMapIntensity),void 0!==a.gradientMap&&(b.gradientMap=c(a.gradientMap)),void 0!==a.clearcoatNormalMap&&(b.clearcoatNormalMap=c(a.clearcoatNormalMap)),void 0!==a.clearcoatNormalScale&&(b.clearcoatNormalScale=(new Ce).fromArray(a.clearcoatNormalScale)),b},setTextures:function(a){return this.textures=a,this}});var fo={decodeText:function(a){if("undefined"!=typeof TextDecoder)return(new TextDecoder).decode(a);for(var e="",c=0,b=a.length;c<b;c++)e+=String.fromCharCode(a[c]);try{return decodeURIComponent(escape(e))}catch(a){return e}},extractUrlBase:function(a){var e=a.lastIndexOf("/");return-1===e?"./":a.substr(0,e+1)}};function oo(){Rb.call(this),this.type="InstancedBufferGeometry",this.maxInstancedCount=void 0}function so(a,e,c,b){"number"==typeof c&&(b=c,c=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),ob.call(this,a,e,c),this.meshPerAttribute=b||1}function ho(a){gf.call(this,a)}oo.prototype=Object.assign(Object.create(Rb.prototype),{constructor:oo,isInstancedBufferGeometry:!0,copy:function(a){return Rb.prototype.copy.call(this,a),this.maxInstancedCount=a.maxInstancedCount,this},clone:function(){return(new this.constructor).copy(this)},toJSON:function(){var a=Rb.prototype.toJSON.call(this);return a.maxInstancedCount=this.maxInstancedCount,a.isInstancedBufferGeometry=!0,a}}),so.prototype=Object.assign(Object.create(ob.prototype),{constructor:so,isInstancedBufferAttribute:!0,copy:function(a){return ob.prototype.copy.call(this,a),this.meshPerAttribute=a.meshPerAttribute,this},toJSON:function(){var a=ob.prototype.toJSON.call(this);return a.meshPerAttribute=this.meshPerAttribute,a.isInstancedBufferAttribute=!0,a}}),ho.prototype=Object.assign(Object.create(gf.prototype),{constructor:ho,load:function(a,e,c,b){var t=this,d=new yf(t.manager);d.setPath(t.path),d.load(a,(function(a){e(t.parse(JSON.parse(a)))}),c,b)},parse:function(a){var e=a.isInstancedBufferGeometry?new oo:new Rb,c=a.data.index;if(void 0!==c){var b=new lo[c.type](c.array);e.setIndex(new ob(b,1))}var t=a.data.attributes;for(var d in t){var i=t[d],n=(b=new lo[i.type](i.array),new(i.isInstancedBufferAttribute?so:ob)(b,i.itemSize,i.normalized));void 0!==i.name&&(n.name=i.name),e.addAttribute(d,n)}var r=a.data.morphAttributes;if(r)for(var d in r){for(var f=r[d],o=[],s=0,h=f.length;s<h;s++){i=f[s],n=new ob(b=new lo[i.type](i.array),i.itemSize,i.normalized);void 0!==i.name&&(n.name=i.name),o.push(n)}e.morphAttributes[d]=o}var l=a.data.groups||a.data.drawcalls||a.data.offsets;if(void 0!==l){s=0;for(var u=l.length;s!==u;++s){var p=l[s];e.addGroup(p.start,p.count,p.materialIndex)}}var m=a.data.boundingSphere;if(void 0!==m){var g=new De;void 0!==m.center&&g.fromArray(m.center),e.boundingSphere=new Ic(g,m.radius)}return a.name&&(e.name=a.name),a.userData&&(e.userData=a.userData),e}});var lo={Int8Array:Int8Array,Uint8Array:Uint8Array,Uint8ClampedArray:"undefined"!=typeof Uint8ClampedArray?Uint8ClampedArray:Uint8Array,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};function uo(a){gf.call(this,a)}uo.prototype=Object.assign(Object.create(gf.prototype),{constructor:uo,load:function(a,e,c,b){var t=this,d=""===this.path?fo.extractUrlBase(a):this.path;this.resourcePath=this.resourcePath||d;var i=new yf(t.manager);i.setPath(this.path),i.load(a,(function(c){var d=null;try{d=JSON.parse(c)}catch(e){return void 0!==b&&b(e),void console.error("THREE:ObjectLoader: Can't parse "+a+".",e.message)}var i=d.metadata;void 0!==i&&void 0!==i.type&&"geometry"!==i.type.toLowerCase()?t.parse(d,e):console.error("THREE.ObjectLoader: Can't load "+a)}),c,b)},parse:function(a,e){var c=this.parseShape(a.shapes),b=this.parseGeometries(a.geometries,c),t=this.parseImages(a.images,(function(){void 0!==e&&e(n)})),d=this.parseTextures(a.textures,t),i=this.parseMaterials(a.materials,d),n=this.parseObject(a.object,b,i);return a.animations&&(n.animations=this.parseAnimations(a.animations)),void 0!==a.images&&0!==a.images.length||void 0!==e&&e(n),n},parseShape:function(a){var e={};if(void 0!==a)for(var c=0,b=a.length;c<b;c++){var t=(new Yf).fromJSON(a[c]);e[t.uuid]=t}return e},parseGeometries:function(a,e){var c={};if(void 0!==a)for(var b=new ho,t=0,d=a.length;t<d;t++){var i,n=a[t];switch(n.type){case"PlaneGeometry":case"PlaneBufferGeometry":i=new Gr[n.type](n.width,n.height,n.widthSegments,n.heightSegments);break;case"BoxGeometry":case"BoxBufferGeometry":case"CubeGeometry":i=new Gr[n.type](n.width,n.height,n.depth,n.widthSegments,n.heightSegments,n.depthSegments);break;case"CircleGeometry":case"CircleBufferGeometry":i=new Gr[n.type](n.radius,n.segments,n.thetaStart,n.thetaLength);break;case"CylinderGeometry":case"CylinderBufferGeometry":i=new Gr[n.type](n.radiusTop,n.radiusBottom,n.height,n.radialSegments,n.heightSegments,n.openEnded,n.thetaStart,n.thetaLength);break;case"ConeGeometry":case"ConeBufferGeometry":i=new Gr[n.type](n.radius,n.height,n.radialSegments,n.heightSegments,n.openEnded,n.thetaStart,n.thetaLength);break;case"SphereGeometry":case"SphereBufferGeometry":i=new Gr[n.type](n.radius,n.widthSegments,n.heightSegments,n.phiStart,n.phiLength,n.thetaStart,n.thetaLength);break;case"DodecahedronGeometry":case"DodecahedronBufferGeometry":case"IcosahedronGeometry":case"IcosahedronBufferGeometry":case"OctahedronGeometry":case"OctahedronBufferGeometry":case"TetrahedronGeometry":case"TetrahedronBufferGeometry":i=new Gr[n.type](n.radius,n.detail);break;case"RingGeometry":case"RingBufferGeometry":i=new Gr[n.type](n.innerRadius,n.outerRadius,n.thetaSegments,n.phiSegments,n.thetaStart,n.thetaLength);break;case"TorusGeometry":case"TorusBufferGeometry":i=new Gr[n.type](n.radius,n.tube,n.radialSegments,n.tubularSegments,n.arc);break;case"TorusKnotGeometry":case"TorusKnotBufferGeometry":i=new Gr[n.type](n.radius,n.tube,n.tubularSegments,n.radialSegments,n.p,n.q);break;case"TubeGeometry":case"TubeBufferGeometry":i=new Gr[n.type]((new Wf[n.path.type]).fromJSON(n.path),n.tubularSegments,n.radius,n.radialSegments,n.closed);break;case"LatheGeometry":case"LatheBufferGeometry":i=new Gr[n.type](n.points,n.segments,n.phiStart,n.phiLength);break;case"PolyhedronGeometry":case"PolyhedronBufferGeometry":i=new Gr[n.type](n.vertices,n.indices,n.radius,n.details);break;case"ShapeGeometry":case"ShapeBufferGeometry":for(var r=[],f=0,o=n.shapes.length;f<o;f++){var s=e[n.shapes[f]];r.push(s)}i=new Gr[n.type](r,n.curveSegments);break;case"ExtrudeGeometry":case"ExtrudeBufferGeometry":for(r=[],f=0,o=n.shapes.length;f<o;f++){s=e[n.shapes[f]];r.push(s)}var h=n.options.extrudePath;void 0!==h&&(n.options.extrudePath=(new Wf[h.type]).fromJSON(h)),i=new Gr[n.type](r,n.options);break;case"BufferGeometry":case"InstancedBufferGeometry":i=b.parse(n);break;case"Geometry":if("THREE"in window&&"LegacyJSONLoader"in THREE)i=(new THREE.LegacyJSONLoader).parse(n,this.resourcePath).geometry;else console.error('THREE.ObjectLoader: You have to import LegacyJSONLoader in order load geometry data of type "Geometry".');break;default:console.warn('THREE.ObjectLoader: Unsupported geometry type "'+n.type+'"');continue}i.uuid=n.uuid,void 0!==n.name&&(i.name=n.name),!0===i.isBufferGeometry&&void 0!==n.userData&&(i.userData=n.userData),c[n.uuid]=i}return c},parseMaterials:function(a,e){var c={},b={};if(void 0!==a){var t=new ro;t.setTextures(e);for(var d=0,i=a.length;d<i;d++){var n=a[d];if("MultiMaterial"===n.type){for(var r=[],f=0;f<n.materials.length;f++){var o=n.materials[f];void 0===c[o.uuid]&&(c[o.uuid]=t.parse(o)),r.push(c[o.uuid])}b[n.uuid]=r}else void 0===c[n.uuid]&&(c[n.uuid]=t.parse(n)),b[n.uuid]=c[n.uuid]}}return b},parseAnimations:function(a){for(var e=[],c=0;c<a.length;c++){var b=a[c],t=hf.parse(b);void 0!==b.uuid&&(t.uuid=b.uuid),e.push(t)}return e},parseImages:function(a,e){var c=this,b={};function t(a){return c.manager.itemStart(a),d.load(a,(function(){c.manager.itemEnd(a)}),void 0,(function(){c.manager.itemError(a),c.manager.itemEnd(a)}))}if(void 0!==a&&a.length>0){var d=new Mf(new pf(e));d.setCrossOrigin(this.crossOrigin);for(var i=0,n=a.length;i<n;i++){var r=a[i],f=r.url;if(Array.isArray(f)){b[r.uuid]=[];for(var o=0,s=f.length;o<s;o++){var h=f[o],l=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(h)?h:c.resourcePath+h;b[r.uuid].push(t(l))}}else{l=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(r.url)?r.url:c.resourcePath+r.url;b[r.uuid]=t(l)}}}return b},parseTextures:function(a,e){function c(a,e){return"number"==typeof a?a:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",a),e[a])}var b={};if(void 0!==a)for(var t=0,d=a.length;t<d;t++){var i,n=a[t];void 0===n.image&&console.warn('THREE.ObjectLoader: No "image" specified for',n.uuid),void 0===e[n.image]&&console.warn("THREE.ObjectLoader: Undefined image",n.image),(i=Array.isArray(e[n.image])?new Gt(e[n.image]):new He(e[n.image])).needsUpdate=!0,i.uuid=n.uuid,void 0!==n.name&&(i.name=n.name),void 0!==n.mapping&&(i.mapping=c(n.mapping,mo)),void 0!==n.offset&&i.offset.fromArray(n.offset),void 0!==n.repeat&&i.repeat.fromArray(n.repeat),void 0!==n.center&&i.center.fromArray(n.center),void 0!==n.rotation&&(i.rotation=n.rotation),void 0!==n.wrap&&(i.wrapS=c(n.wrap[0],go),i.wrapT=c(n.wrap[1],go)),void 0!==n.format&&(i.format=n.format),void 0!==n.type&&(i.type=n.type),void 0!==n.encoding&&(i.encoding=n.encoding),void 0!==n.minFilter&&(i.minFilter=c(n.minFilter,vo)),void 0!==n.magFilter&&(i.magFilter=c(n.magFilter,vo)),void 0!==n.anisotropy&&(i.anisotropy=n.anisotropy),void 0!==n.flipY&&(i.flipY=n.flipY),void 0!==n.premultiplyAlpha&&(i.premultiplyAlpha=n.premultiplyAlpha),void 0!==n.unpackAlignment&&(i.unpackAlignment=n.unpackAlignment),b[n.uuid]=i}return b},parseObject:function(a,e,c){var b;function t(a){return void 0===e[a]&&console.warn("THREE.ObjectLoader: Undefined geometry",a),e[a]}function d(a){if(void 0!==a){if(Array.isArray(a)){for(var e=[],b=0,t=a.length;b<t;b++){var d=a[b];void 0===c[d]&&console.warn("THREE.ObjectLoader: Undefined material",d),e.push(c[d])}return e}return void 0===c[a]&&console.warn("THREE.ObjectLoader: Undefined material",a),c[a]}}switch(a.type){case"Scene":b=new gc,void 0!==a.background&&Number.isInteger(a.background)&&(b.background=new cb(a.background)),void 0!==a.fog&&("Fog"===a.fog.type?b.fog=new Oi(a.fog.color,a.fog.near,a.fog.far):"FogExp2"===a.fog.type&&(b.fog=new Ci(a.fog.color,a.fog.density)));break;case"PerspectiveCamera":b=new ft(a.fov,a.aspect,a.near,a.far),void 0!==a.focus&&(b.focus=a.focus),void 0!==a.zoom&&(b.zoom=a.zoom),void 0!==a.filmGauge&&(b.filmGauge=a.filmGauge),void 0!==a.filmOffset&&(b.filmOffset=a.filmOffset),void 0!==a.view&&(b.view=Object.assign({},a.view));break;case"OrthographicCamera":b=new co(a.left,a.right,a.top,a.bottom,a.near,a.far),void 0!==a.zoom&&(b.zoom=a.zoom),void 0!==a.view&&(b.view=Object.assign({},a.view));break;case"AmbientLight":b=new io(a.color,a.intensity);break;case"DirectionalLight":b=new to(a.color,a.intensity);break;case"PointLight":b=new eo(a.color,a.intensity,a.distance,a.decay);break;case"RectAreaLight":b=new no(a.color,a.intensity,a.width,a.height);break;case"SpotLight":b=new $f(a.color,a.intensity,a.distance,a.angle,a.penumbra,a.decay);break;case"HemisphereLight":b=new Jf(a.color,a.groundColor,a.intensity);break;case"SkinnedMesh":console.warn("THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.");case"Mesh":var i=t(a.geometry),n=d(a.material);b=i.bones&&i.bones.length>0?new $i(i,n):new Xb(i,n),void 0!==a.drawMode&&b.setDrawMode(a.drawMode);break;case"LOD":b=new Qi;break;case"Line":b=new hn(t(a.geometry),d(a.material),a.mode);break;case"LineLoop":b=new mn(t(a.geometry),d(a.material));break;case"LineSegments":b=new pn(t(a.geometry),d(a.material));break;case"PointCloud":case"Points":b=new _n(t(a.geometry),d(a.material));break;case"Sprite":b=new Yi(d(a.material));break;case"Group":b=new _i;break;default:b=new mc}if(b.uuid=a.uuid,void 0!==a.name&&(b.name=a.name),void 0!==a.matrix?(b.matrix.fromArray(a.matrix),void 0!==a.matrixAutoUpdate&&(b.matrixAutoUpdate=a.matrixAutoUpdate),b.matrixAutoUpdate&&b.matrix.decompose(b.position,b.quaternion,b.scale)):(void 0!==a.position&&b.position.fromArray(a.position),void 0!==a.rotation&&b.rotation.fromArray(a.rotation),void 0!==a.quaternion&&b.quaternion.fromArray(a.quaternion),void 0!==a.scale&&b.scale.fromArray(a.scale)),void 0!==a.castShadow&&(b.castShadow=a.castShadow),void 0!==a.receiveShadow&&(b.receiveShadow=a.receiveShadow),a.shadow&&(void 0!==a.shadow.bias&&(b.shadow.bias=a.shadow.bias),void 0!==a.shadow.radius&&(b.shadow.radius=a.shadow.radius),void 0!==a.shadow.mapSize&&b.shadow.mapSize.fromArray(a.shadow.mapSize),void 0!==a.shadow.camera&&(b.shadow.camera=this.parseObject(a.shadow.camera))),void 0!==a.visible&&(b.visible=a.visible),void 0!==a.frustumCulled&&(b.frustumCulled=a.frustumCulled),void 0!==a.renderOrder&&(b.renderOrder=a.renderOrder),void 0!==a.userData&&(b.userData=a.userData),void 0!==a.layers&&(b.layers.mask=a.layers),void 0!==a.children)for(var r=a.children,f=0;f<r.length;f++)b.add(this.parseObject(r[f],e,c));if("LOD"===a.type)for(var o=a.levels,s=0;s<o.length;s++){var h=o[s],l=b.getObjectByProperty("uuid",h.object);void 0!==l&&b.addLevel(l,h.distance)}return b}});var po,mo={UVMapping:300,CubeReflectionMapping:ba,CubeRefractionMapping:ta,EquirectangularReflectionMapping:da,EquirectangularRefractionMapping:ia,SphericalReflectionMapping:na,CubeUVReflectionMapping:ra,CubeUVRefractionMapping:fa},go={RepeatWrapping:oa,ClampToEdgeWrapping:sa,MirroredRepeatWrapping:ha},vo={NearestFilter:la,NearestMipmapNearestFilter:ua,NearestMipmapLinearFilter:pa,LinearFilter:ma,LinearMipmapNearestFilter:ga,LinearMipmapLinearFilter:va};function yo(a){"undefined"==typeof createImageBitmap&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),"undefined"==typeof fetch&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),gf.call(this,a),this.options=void 0}function xo(){this.type="ShapePath",this.color=new cb,this.subPaths=[],this.currentPath=null}function wo(a){this.type="Font",this.data=a}function _o(a,e,c,b,t){var d=t.glyphs[a]||t.glyphs["?"];if(d){var i,n,r,f,o,s,h,l,u=new xo;if(d.o)for(var p=d._cachedOutline||(d._cachedOutline=d.o.split(" ")),m=0,g=p.length;m<g;){switch(p[m++]){case"m":i=p[m++]*e+c,n=p[m++]*e+b,u.moveTo(i,n);break;case"l":i=p[m++]*e+c,n=p[m++]*e+b,u.lineTo(i,n);break;case"q":r=p[m++]*e+c,f=p[m++]*e+b,o=p[m++]*e+c,s=p[m++]*e+b,u.quadraticCurveTo(o,s,r,f);break;case"b":r=p[m++]*e+c,f=p[m++]*e+b,o=p[m++]*e+c,s=p[m++]*e+b,h=p[m++]*e+c,l=p[m++]*e+b,u.bezierCurveTo(o,s,h,l,r,f)}}return{offsetX:d.ha*e,path:u}}console.error('THREE.Font: character "'+a+'" does not exists in font family '+t.familyName+".")}function Mo(a){gf.call(this,a)}yo.prototype=Object.assign(Object.create(gf.prototype),{constructor:yo,setOptions:function(a){return this.options=a,this},load:function(a,e,c,b){void 0===a&&(a=""),void 0!==this.path&&(a=this.path+a),a=this.manager.resolveURL(a);var t=this,d=uf.get(a);if(void 0!==d)return t.manager.itemStart(a),setTimeout((function(){e&&e(d),t.manager.itemEnd(a)}),0),d;fetch(a).then((function(a){return a.blob()})).then((function(a){return void 0===t.options?createImageBitmap(a):createImageBitmap(a,t.options)})).then((function(c){uf.add(a,c),e&&e(c),t.manager.itemEnd(a)})).catch((function(e){b&&b(e),t.manager.itemError(a),t.manager.itemEnd(a)})),t.manager.itemStart(a)}}),Object.assign(xo.prototype,{moveTo:function(a,e){this.currentPath=new Xf,this.subPaths.push(this.currentPath),this.currentPath.moveTo(a,e)},lineTo:function(a,e){this.currentPath.lineTo(a,e)},quadraticCurveTo:function(a,e,c,b){this.currentPath.quadraticCurveTo(a,e,c,b)},bezierCurveTo:function(a,e,c,b,t,d){this.currentPath.bezierCurveTo(a,e,c,b,t,d)},splineThru:function(a){this.currentPath.splineThru(a)},toShapes:function(a,e){function c(a){for(var e=[],c=0,b=a.length;c<b;c++){var t=a[c],d=new Yf;d.curves=t.curves,e.push(d)}return e}function b(a,e){for(var c=e.length,b=!1,t=c-1,d=0;d<c;t=d++){var i=e[t],n=e[d],r=n.x-i.x,f=n.y-i.y;if(Math.abs(f)>Number.EPSILON){if(f<0&&(i=e[d],r=-r,n=e[t],f=-f),a.y<i.y||a.y>n.y)continue;if(a.y===i.y){if(a.x===i.x)return!0}else{var o=f*(a.x-i.x)-r*(a.y-i.y);if(0===o)return!0;if(o<0)continue;b=!b}}else{if(a.y!==i.y)continue;if(n.x<=a.x&&a.x<=i.x||i.x<=a.x&&a.x<=n.x)return!0}}return b}var t=pr.isClockWise,d=this.subPaths;if(0===d.length)return[];if(!0===e)return c(d);var i,n,r,f=[];if(1===d.length)return n=d[0],(r=new Yf).curves=n.curves,f.push(r),f;var o=!t(d[0].getPoints());o=a?!o:o;var s,h,l=[],u=[],p=[],m=0;u[m]=void 0,p[m]=[];for(var g=0,v=d.length;g<v;g++)i=t(s=(n=d[g]).getPoints()),(i=a?!i:i)?(!o&&u[m]&&m++,u[m]={s:new Yf,p:s},u[m].s.curves=n.curves,o&&m++,p[m]=[]):p[m].push({h:n,p:s[0]});if(!u[0])return c(d);if(u.length>1){for(var y=!1,x=[],w=0,_=u.length;w<_;w++)l[w]=[];for(w=0,_=u.length;w<_;w++)for(var M=p[w],S=0;S<M.length;S++){for(var T=M[S],E=!0,A=0;A<u.length;A++)b(T.p,u[A].p)&&(w!==A&&x.push({froms:w,tos:A,hole:S}),E?(E=!1,l[A].push(T)):y=!0);E&&l[w].push(T)}x.length>0&&(y||(p=l))}g=0;for(var L=u.length;g<L;g++){r=u[g].s,f.push(r);for(var R=0,P=(h=p[g]).length;R<P;R++)r.holes.push(h[R].h)}return f}}),Object.assign(wo.prototype,{isFont:!0,generateShapes:function(a,e){void 0===e&&(e=100);for(var c=[],b=function(a,e,c){for(var b=Array.from?Array.from(a):String(a).split(""),t=e/c.resolution,d=(c.boundingBox.yMax-c.boundingBox.yMin+c.underlineThickness)*t,i=[],n=0,r=0,f=0;f<b.length;f++){var o=b[f];if("\n"===o)n=0,r-=d;else{var s=_o(o,t,n,r,c);n+=s.offsetX,i.push(s.path)}}return i}(a,e,this.data),t=0,d=b.length;t<d;t++)Array.prototype.push.apply(c,b[t].toShapes());return c}}),Mo.prototype=Object.assign(Object.create(gf.prototype),{constructor:Mo,load:function(a,e,c,b){var t=this,d=new yf(this.manager);d.setPath(this.path),d.load(a,(function(a){var c;try{c=JSON.parse(a)}catch(e){console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."),c=JSON.parse(a.substring(65,a.length-2))}var b=t.parse(c);e&&e(b)}),c,b)},parse:function(a){return new wo(a)}});var So={getContext:function(){return void 0===po&&(po=new(window.AudioContext||window.webkitAudioContext)),po},setContext:function(a){po=a}};function To(a){gf.call(this,a)}function Eo(){this.coefficients=[];for(var a=0;a<9;a++)this.coefficients.push(new De)}function Ao(a,e){Zf.call(this,void 0,e),this.sh=void 0!==a?a:new Eo}function Lo(a,e,c){Ao.call(this,void 0,c);var b=(new cb).set(a),t=(new cb).set(e),d=new De(b.r,b.g,b.b),i=new De(t.r,t.g,t.b),n=Math.sqrt(Math.PI),r=n*Math.sqrt(.75);this.sh.coefficients[0].copy(d).add(i).multiplyScalar(n),this.sh.coefficients[1].copy(d).sub(i).multiplyScalar(r)}function Ro(a,e){Ao.call(this,void 0,e);var c=(new cb).set(a);this.sh.coefficients[0].set(c.r,c.g,c.b).multiplyScalar(2*Math.sqrt(Math.PI))}To.prototype=Object.assign(Object.create(gf.prototype),{constructor:To,load:function(a,e,c,b){var t=new yf(this.manager);t.setResponseType("arraybuffer"),t.setPath(this.path),t.load(a,(function(a){var c=a.slice(0);So.getContext().decodeAudioData(c,(function(a){e(a)}))}),c,b)}}),Object.assign(Eo.prototype,{isSphericalHarmonics3:!0,set:function(a){for(var e=0;e<9;e++)this.coefficients[e].copy(a[e]);return this},zero:function(){for(var a=0;a<9;a++)this.coefficients[a].set(0,0,0);return this},getAt:function(a,e){var c=a.x,b=a.y,t=a.z,d=this.coefficients;return e.copy(d[0]).multiplyScalar(.282095),e.addScale(d[1],.488603*b),e.addScale(d[2],.488603*t),e.addScale(d[3],.488603*c),e.addScale(d[4],c*b*1.092548),e.addScale(d[5],b*t*1.092548),e.addScale(d[6],.315392*(3*t*t-1)),e.addScale(d[7],c*t*1.092548),e.addScale(d[8],.546274*(c*c-b*b)),e},getIrradianceAt:function(a,e){var c=a.x,b=a.y,t=a.z,d=this.coefficients;return e.copy(d[0]).multiplyScalar(.886227),e.addScale(d[1],1.023328*b),e.addScale(d[2],1.023328*t),e.addScale(d[3],1.023328*c),e.addScale(d[4],.858086*c*b),e.addScale(d[5],.858086*b*t),e.addScale(d[6],.743125*t*t-.247708),e.addScale(d[7],.858086*c*t),e.addScale(d[8],.429043*(c*c-b*b)),e},add:function(a){for(var e=0;e<9;e++)this.coefficients[e].add(a.coefficients[e]);return this},scale:function(a){for(var e=0;e<9;e++)this.coefficients[e].multiplyScalar(a);return this},lerp:function(a,e){for(var c=0;c<9;c++)this.coefficients[c].lerp(a.coefficients[c],e);return this},equals:function(a){for(var e=0;e<9;e++)if(!this.coefficients[e].equals(a.coefficients[e]))return!1;return!0},copy:function(a){return this.set(a.coefficients)},clone:function(){return(new this.constructor).copy(this)},fromArray:function(a,e){void 0===e&&(e=0);for(var c=this.coefficients,b=0;b<9;b++)c[b].fromArray(a,e+3*b);return this},toArray:function(a,e){void 0===a&&(a=[]),void 0===e&&(e=0);for(var c=this.coefficients,b=0;b<9;b++)c[b].toArray(a,e+3*b);return a}}),Object.assign(Eo,{getBasisAt:function(a,e){var c=a.x,b=a.y,t=a.z;e[0]=.282095,e[1]=.488603*b,e[2]=.488603*t,e[3]=.488603*c,e[4]=1.092548*c*b,e[5]=1.092548*b*t,e[6]=.315392*(3*t*t-1),e[7]=1.092548*c*t,e[8]=.546274*(c*c-b*b)}}),Ao.prototype=Object.assign(Object.create(Zf.prototype),{constructor:Ao,isLightProbe:!0,copy:function(a){return Zf.prototype.copy.call(this,a),this.sh.copy(a.sh),this.intensity=a.intensity,this},toJSON:function(a){return Zf.prototype.toJSON.call(this,a)}}),Lo.prototype=Object.assign(Object.create(Ao.prototype),{constructor:Lo,isHemisphereLightProbe:!0,copy:function(a){return Ao.prototype.copy.call(this,a),this},toJSON:function(a){return Ao.prototype.toJSON.call(this,a)}}),Ro.prototype=Object.assign(Object.create(Ao.prototype),{constructor:Ro,isAmbientLightProbe:!0,copy:function(a){return Ao.prototype.copy.call(this,a),this},toJSON:function(a){return Ao.prototype.toJSON.call(this,a)}});var Po=new Qe,Co=new Qe;function Oo(a){this.autoStart=void 0===a||a,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}Object.assign(function(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new ft,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new ft,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}.prototype,{update:function(a){var e=this._cache;if(e.focus!==a.focus||e.fov!==a.fov||e.aspect!==a.aspect*this.aspect||e.near!==a.near||e.far!==a.far||e.zoom!==a.zoom||e.eyeSep!==this.eyeSep){e.focus=a.focus,e.fov=a.fov,e.aspect=a.aspect*this.aspect,e.near=a.near,e.far=a.far,e.zoom=a.zoom,e.eyeSep=this.eyeSep;var c,b,t=a.projectionMatrix.clone(),d=e.eyeSep/2,i=d*e.near/e.focus,n=e.near*Math.tan(Pe.DEG2RAD*e.fov*.5)/e.zoom;Co.elements[12]=-d,Po.elements[12]=d,c=-n*e.aspect+i,b=n*e.aspect+i,t.elements[0]=2*e.near/(b-c),t.elements[8]=(b+c)/(b-c),this.cameraL.projectionMatrix.copy(t),c=-n*e.aspect-i,b=n*e.aspect-i,t.elements[0]=2*e.near/(b-c),t.elements[8]=(b+c)/(b-c),this.cameraR.projectionMatrix.copy(t)}this.cameraL.matrixWorld.copy(a.matrixWorld).multiply(Co),this.cameraR.matrixWorld.copy(a.matrixWorld).multiply(Po)}}),Object.assign(Oo.prototype,{start:function(){this.startTime=("undefined"==typeof performance?Date:performance).now(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0},stop:function(){this.getElapsedTime(),this.running=!1,this.autoStart=!1},getElapsedTime:function(){return this.getDelta(),this.elapsedTime},getDelta:function(){var a=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){var e=("undefined"==typeof performance?Date:performance).now();a=(e-this.oldTime)/1e3,this.oldTime=e,this.elapsedTime+=a}return a}});var Io=new De,No=new Oe,Do=new De,zo=new De;function Uo(){mc.call(this),this.type="AudioListener",this.context=So.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new Oo}function Bo(a){mc.call(this),this.type="Audio",this.listener=a,this.context=a.context,this.gain=this.context.createGain(),this.gain.connect(a.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.startTime=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.sourceType="empty",this.filters=[]}Uo.prototype=Object.assign(Object.create(mc.prototype),{constructor:Uo,getInput:function(){return this.gain},removeFilter:function(){return null!==this.filter&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this},getFilter:function(){return this.filter},setFilter:function(a){return null!==this.filter?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=a,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this},getMasterVolume:function(){return this.gain.gain.value},setMasterVolume:function(a){return this.gain.gain.setTargetAtTime(a,this.context.currentTime,.01),this},updateMatrixWorld:function(a){mc.prototype.updateMatrixWorld.call(this,a);var e=this.context.listener,c=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(Io,No,Do),zo.set(0,0,-1).applyQuaternion(No),e.positionX){var b=this.context.currentTime+this.timeDelta;e.positionX.linearRampToValueAtTime(Io.x,b),e.positionY.linearRampToValueAtTime(Io.y,b),e.positionZ.linearRampToValueAtTime(Io.z,b),e.forwardX.linearRampToValueAtTime(zo.x,b),e.forwardY.linearRampToValueAtTime(zo.y,b),e.forwardZ.linearRampToValueAtTime(zo.z,b),e.upX.linearRampToValueAtTime(c.x,b),e.upY.linearRampToValueAtTime(c.y,b),e.upZ.linearRampToValueAtTime(c.z,b)}else e.setPosition(Io.x,Io.y,Io.z),e.setOrientation(zo.x,zo.y,zo.z,c.x,c.y,c.z)}}),Bo.prototype=Object.assign(Object.create(mc.prototype),{constructor:Bo,getOutput:function(){return this.gain},setNodeSource:function(a){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=a,this.connect(),this},setMediaElementSource:function(a){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(a),this.connect(),this},setMediaStreamSource:function(a){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(a),this.connect(),this},setBuffer:function(a){return this.buffer=a,this.sourceType="buffer",this.autoplay&&this.play(),this},play:function(){if(!0!==this.isPlaying){if(!1!==this.hasPlaybackControl){var a=this.context.createBufferSource();return a.buffer=this.buffer,a.loop=this.loop,a.onended=this.onEnded.bind(this),this.startTime=this.context.currentTime,a.start(this.startTime,this.offset,this.duration),this.isPlaying=!0,this.source=a,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}console.warn("THREE.Audio: this Audio has no playback control.")}else console.warn("THREE.Audio: Audio is already playing.")},pause:function(){if(!1!==this.hasPlaybackControl)return!0===this.isPlaying&&(this.source.stop(),this.source.onended=null,this.offset+=(this.context.currentTime-this.startTime)*this.playbackRate,this.isPlaying=!1),this;console.warn("THREE.Audio: this Audio has no playback control.")},stop:function(){if(!1!==this.hasPlaybackControl)return this.source.stop(),this.source.onended=null,this.offset=0,this.isPlaying=!1,this;console.warn("THREE.Audio: this Audio has no playback control.")},connect:function(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(var a=1,e=this.filters.length;a<e;a++)this.filters[a-1].connect(this.filters[a]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this},disconnect:function(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(var a=1,e=this.filters.length;a<e;a++)this.filters[a-1].disconnect(this.filters[a]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this},getFilters:function(){return this.filters},setFilters:function(a){return a||(a=[]),!0===this.isPlaying?(this.disconnect(),this.filters=a,this.connect()):this.filters=a,this},setDetune:function(a){if(this.detune=a,void 0!==this.source.detune)return!0===this.isPlaying&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this},getDetune:function(){return this.detune},getFilter:function(){return this.getFilters()[0]},setFilter:function(a){return this.setFilters(a?[a]:[])},setPlaybackRate:function(a){if(!1!==this.hasPlaybackControl)return this.playbackRate=a,!0===this.isPlaying&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this;console.warn("THREE.Audio: this Audio has no playback control.")},getPlaybackRate:function(){return this.playbackRate},onEnded:function(){this.isPlaying=!1},getLoop:function(){return!1===this.hasPlaybackControl?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop},setLoop:function(a){if(!1!==this.hasPlaybackControl)return this.loop=a,!0===this.isPlaying&&(this.source.loop=this.loop),this;console.warn("THREE.Audio: this Audio has no playback control.")},getVolume:function(){return this.gain.gain.value},setVolume:function(a){return this.gain.gain.setTargetAtTime(a,this.context.currentTime,.01),this}});var Fo=new De,Go=new Oe,Ho=new De,Vo=new De;function ko(a){Bo.call(this,a),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}function jo(a,e){this.analyser=a.context.createAnalyser(),this.analyser.fftSize=void 0!==e?e:2048,this.data=new Uint8Array(this.analyser.frequencyBinCount),a.getOutput().connect(this.analyser)}function Wo(a,e,c){this.binding=a,this.valueSize=c;var b,t=Float64Array;switch(e){case"quaternion":b=this._slerp;break;case"string":case"bool":t=Array,b=this._select;break;default:b=this._lerp}this.buffer=new t(4*c),this._mixBufferRegion=b,this.cumulativeWeight=0,this.useCount=0,this.referenceCount=0}ko.prototype=Object.assign(Object.create(Bo.prototype),{constructor:ko,getOutput:function(){return this.panner},getRefDistance:function(){return this.panner.refDistance},setRefDistance:function(a){return this.panner.refDistance=a,this},getRolloffFactor:function(){return this.panner.rolloffFactor},setRolloffFactor:function(a){return this.panner.rolloffFactor=a,this},getDistanceModel:function(){return this.panner.distanceModel},setDistanceModel:function(a){return this.panner.distanceModel=a,this},getMaxDistance:function(){return this.panner.maxDistance},setMaxDistance:function(a){return this.panner.maxDistance=a,this},setDirectionalCone:function(a,e,c){return this.panner.coneInnerAngle=a,this.panner.coneOuterAngle=e,this.panner.coneOuterGain=c,this},updateMatrixWorld:function(a){if(mc.prototype.updateMatrixWorld.call(this,a),!0!==this.hasPlaybackControl||!1!==this.isPlaying){this.matrixWorld.decompose(Fo,Go,Ho),Vo.set(0,0,1).applyQuaternion(Go);var e=this.panner;if(e.positionX){var c=this.context.currentTime+this.listener.timeDelta;e.positionX.linearRampToValueAtTime(Fo.x,c),e.positionY.linearRampToValueAtTime(Fo.y,c),e.positionZ.linearRampToValueAtTime(Fo.z,c),e.orientationX.linearRampToValueAtTime(Vo.x,c),e.orientationY.linearRampToValueAtTime(Vo.y,c),e.orientationZ.linearRampToValueAtTime(Vo.z,c)}else e.setPosition(Fo.x,Fo.y,Fo.z),e.setOrientation(Vo.x,Vo.y,Vo.z)}}}),Object.assign(jo.prototype,{getFrequencyData:function(){return this.analyser.getByteFrequencyData(this.data),this.data},getAverageFrequency:function(){for(var a=0,e=this.getFrequencyData(),c=0;c<e.length;c++)a+=e[c];return a/e.length}}),Object.assign(Wo.prototype,{accumulate:function(a,e){var c=this.buffer,b=this.valueSize,t=a*b+b,d=this.cumulativeWeight;if(0===d){for(var i=0;i!==b;++i)c[t+i]=c[i];d=e}else{var n=e/(d+=e);this._mixBufferRegion(c,t,0,n,b)}this.cumulativeWeight=d},apply:function(a){var e=this.valueSize,c=this.buffer,b=a*e+e,t=this.cumulativeWeight,d=this.binding;if(this.cumulativeWeight=0,t<1){var i=3*e;this._mixBufferRegion(c,b,i,1-t,e)}for(var n=e,r=e+e;n!==r;++n)if(c[n]!==c[n+e]){d.setValue(c,b);break}},saveOriginalState:function(){var a=this.binding,e=this.buffer,c=this.valueSize,b=3*c;a.getValue(e,b);for(var t=c,d=b;t!==d;++t)e[t]=e[b+t%c];this.cumulativeWeight=0},restoreOriginalState:function(){var a=3*this.valueSize;this.binding.setValue(this.buffer,a)},_select:function(a,e,c,b,t){if(b>=.5)for(var d=0;d!==t;++d)a[e+d]=a[c+d]},_slerp:function(a,e,c,b){Oe.slerpFlat(a,e,a,e,a,c,b)},_lerp:function(a,e,c,b,t){for(var d=1-b,i=0;i!==t;++i){var n=e+i;a[n]=a[n]*d+a[c+i]*b}}});var qo=new RegExp("[\\[\\]\\.:\\/]","g"),Xo="[^"+"\\[\\]\\.:\\/".replace("\\.","")+"]",Yo=/((?:WC+[\/:])*)/.source.replace("WC","[^\\[\\]\\.:\\/]"),Zo=/(WCOD+)?/.source.replace("WCOD",Xo),Jo=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC","[^\\[\\]\\.:\\/]"),Ko=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC","[^\\[\\]\\.:\\/]"),Qo=new RegExp("^"+Yo+Zo+Jo+Ko+"$"),$o=["material","materials","bones"];function as(a,e,c){var b=c||es.parseTrackName(e);this._targetGroup=a,this._bindings=a.subscribe_(e,b)}function es(a,e,c){this.path=e,this.parsedPath=c||es.parseTrackName(e),this.node=es.findNode(a,this.parsedPath.nodeName)||a,this.rootNode=a}function cs(a,e,c){this._mixer=a,this._clip=e,this._localRoot=c||null;for(var b=e.tracks,t=b.length,d=new Array(t),i={endingStart:fe,endingEnd:fe},n=0;n!==t;++n){var r=b[n].createInterpolant(null);d[n]=r,r.settings=i}this._interpolantSettings=i,this._interpolants=d,this._propertyBindings=new Array(t),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=re,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}function bs(a){this._root=a,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}function ts(a){"string"==typeof a&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),a=arguments[1]),this.value=a}function ds(a,e,c){Ii.call(this,a,e),this.meshPerAttribute=c||1}function is(a,e){return a.distance-e.distance}function ns(a,e,c,b){if(!1!==a.visible&&(a.raycast(e,c),!0===b))for(var t=a.children,d=0,i=t.length;d<i;d++)ns(t[d],e,c,!0)}Object.assign(as.prototype,{getValue:function(a,e){this.bind();var c=this._targetGroup.nCachedObjects_,b=this._bindings[c];void 0!==b&&b.getValue(a,e)},setValue:function(a,e){for(var c=this._bindings,b=this._targetGroup.nCachedObjects_,t=c.length;b!==t;++b)c[b].setValue(a,e)},bind:function(){for(var a=this._bindings,e=this._targetGroup.nCachedObjects_,c=a.length;e!==c;++e)a[e].bind()},unbind:function(){for(var a=this._bindings,e=this._targetGroup.nCachedObjects_,c=a.length;e!==c;++e)a[e].unbind()}}),Object.assign(es,{Composite:as,create:function(a,e,c){return a&&a.isAnimationObjectGroup?new es.Composite(a,e,c):new es(a,e,c)},sanitizeNodeName:function(a){return a.replace(/\s/g,"_").replace(qo,"")},parseTrackName:function(a){var e=Qo.exec(a);if(!e)throw new Error("PropertyBinding: Cannot parse trackName: "+a);var c={nodeName:e[2],objectName:e[3],objectIndex:e[4],propertyName:e[5],propertyIndex:e[6]},b=c.nodeName&&c.nodeName.lastIndexOf(".");if(void 0!==b&&-1!==b){var t=c.nodeName.substring(b+1);-1!==$o.indexOf(t)&&(c.nodeName=c.nodeName.substring(0,b),c.objectName=t)}if(null===c.propertyName||0===c.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+a);return c},findNode:function(a,e){if(!e||""===e||"root"===e||"."===e||-1===e||e===a.name||e===a.uuid)return a;if(a.skeleton){var c=a.skeleton.getBoneByName(e);if(void 0!==c)return c}if(a.children){var b=function(a){for(var c=0;c<a.length;c++){var t=a[c];if(t.name===e||t.uuid===e)return t;var d=b(t.children);if(d)return d}return null},t=b(a.children);if(t)return t}return null}}),Object.assign(es.prototype,{_getValue_unavailable:function(){},_setValue_unavailable:function(){},BindingType:{Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Versioning:{None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},GetterByBindingType:[function(a,e){a[e]=this.node[this.propertyName]},function(a,e){for(var c=this.resolvedProperty,b=0,t=c.length;b!==t;++b)a[e++]=c[b]},function(a,e){a[e]=this.resolvedProperty[this.propertyIndex]},function(a,e){this.resolvedProperty.toArray(a,e)}],SetterByBindingTypeAndVersioning:[[function(a,e){this.targetObject[this.propertyName]=a[e]},function(a,e){this.targetObject[this.propertyName]=a[e],this.targetObject.needsUpdate=!0},function(a,e){this.targetObject[this.propertyName]=a[e],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(a,e){for(var c=this.resolvedProperty,b=0,t=c.length;b!==t;++b)c[b]=a[e++]},function(a,e){for(var c=this.resolvedProperty,b=0,t=c.length;b!==t;++b)c[b]=a[e++];this.targetObject.needsUpdate=!0},function(a,e){for(var c=this.resolvedProperty,b=0,t=c.length;b!==t;++b)c[b]=a[e++];this.targetObject.matrixWorldNeedsUpdate=!0}],[function(a,e){this.resolvedProperty[this.propertyIndex]=a[e]},function(a,e){this.resolvedProperty[this.propertyIndex]=a[e],this.targetObject.needsUpdate=!0},function(a,e){this.resolvedProperty[this.propertyIndex]=a[e],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(a,e){this.resolvedProperty.fromArray(a,e)},function(a,e){this.resolvedProperty.fromArray(a,e),this.targetObject.needsUpdate=!0},function(a,e){this.resolvedProperty.fromArray(a,e),this.targetObject.matrixWorldNeedsUpdate=!0}]],getValue:function(a,e){this.bind(),this.getValue(a,e)},setValue:function(a,e){this.bind(),this.setValue(a,e)},bind:function(){var a=this.node,e=this.parsedPath,c=e.objectName,b=e.propertyName,t=e.propertyIndex;if(a||(a=es.findNode(this.rootNode,e.nodeName)||this.rootNode,this.node=a),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,a){if(c){var d=e.objectIndex;switch(c){case"materials":if(!a.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!a.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);a=a.material.materials;break;case"bones":if(!a.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);a=a.skeleton.bones;for(var i=0;i<a.length;i++)if(a[i].name===d){d=i;break}break;default:if(void 0===a[c])return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);a=a[c]}if(void 0!==d){if(void 0===a[d])return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,a);a=a[d]}}var n=a[b];if(void 0!==n){var r=this.Versioning.None;this.targetObject=a,void 0!==a.needsUpdate?r=this.Versioning.NeedsUpdate:void 0!==a.matrixWorldNeedsUpdate&&(r=this.Versioning.MatrixWorldNeedsUpdate);var f=this.BindingType.Direct;if(void 0!==t){if("morphTargetInfluences"===b){if(!a.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(a.geometry.isBufferGeometry){if(!a.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);for(i=0;i<this.node.geometry.morphAttributes.position.length;i++)if(a.geometry.morphAttributes.position[i].name===t){t=i;break}}else{if(!a.geometry.morphTargets)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphTargets.",this);for(i=0;i<this.node.geometry.morphTargets.length;i++)if(a.geometry.morphTargets[i].name===t){t=i;break}}}f=this.BindingType.ArrayElement,this.resolvedProperty=n,this.propertyIndex=t}else void 0!==n.fromArray&&void 0!==n.toArray?(f=this.BindingType.HasFromToArray,this.resolvedProperty=n):Array.isArray(n)?(f=this.BindingType.EntireArray,this.resolvedProperty=n):this.propertyName=b;this.getValue=this.GetterByBindingType[f],this.setValue=this.SetterByBindingTypeAndVersioning[f][r]}else{var o=e.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+o+"."+b+" but it wasn't found.",a)}}else console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.")},unbind:function(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}),
//!\ DECLARE ALIAS AFTER assign prototype !
Object.assign(es.prototype,{_getValue_unbound:es.prototype.getValue,_setValue_unbound:es.prototype.setValue}),Object.assign(function(){this.uuid=Pe.generateUUID(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;var a={};this._indicesByUUID=a;for(var e=0,c=arguments.length;e!==c;++e)a[arguments[e].uuid]=e;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};var b=this;this.stats={objects:{get total(){return b._objects.length},get inUse(){return this.total-b.nCachedObjects_}},get bindingsPerObject(){return b._bindings.length}}}.prototype,{isAnimationObjectGroup:!0,add:function(){for(var a=this._objects,e=a.length,c=this.nCachedObjects_,b=this._indicesByUUID,t=this._paths,d=this._parsedPaths,i=this._bindings,n=i.length,r=void 0,f=0,o=arguments.length;f!==o;++f){var s=arguments[f],h=s.uuid,l=b[h];if(void 0===l){l=e++,b[h]=l,a.push(s);for(var u=0,p=n;u!==p;++u)i[u].push(new es(s,t[u],d[u]))}else if(l<c){r=a[l];var m=--c,g=a[m];b[g.uuid]=l,a[l]=g,b[h]=m,a[m]=s;for(u=0,p=n;u!==p;++u){var v=i[u],y=v[m],x=v[l];v[l]=y,void 0===x&&(x=new es(s,t[u],d[u])),v[m]=x}}else a[l]!==r&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=c},remove:function(){for(var a=this._objects,e=this.nCachedObjects_,c=this._indicesByUUID,b=this._bindings,t=b.length,d=0,i=arguments.length;d!==i;++d){var n=arguments[d],r=n.uuid,f=c[r];if(void 0!==f&&f>=e){var o=e++,s=a[o];c[s.uuid]=f,a[f]=s,c[r]=o,a[o]=n;for(var h=0,l=t;h!==l;++h){var u=b[h],p=u[o],m=u[f];u[f]=p,u[o]=m}}}this.nCachedObjects_=e},uncache:function(){for(var a=this._objects,e=a.length,c=this.nCachedObjects_,b=this._indicesByUUID,t=this._bindings,d=t.length,i=0,n=arguments.length;i!==n;++i){var r=arguments[i],f=r.uuid,o=b[f];if(void 0!==o)if(delete b[f],o<c){var s=--c,h=a[s],l=a[v=--e];b[h.uuid]=o,a[o]=h,b[l.uuid]=s,a[s]=l,a.pop();for(var u=0,p=d;u!==p;++u){var m=(y=t[u])[s],g=y[v];y[o]=m,y[s]=g,y.pop()}}else{var v;b[(l=a[v=--e]).uuid]=o,a[o]=l,a.pop();for(u=0,p=d;u!==p;++u){var y;(y=t[u])[o]=y[v],y.pop()}}}this.nCachedObjects_=c},subscribe_:function(a,e){var c=this._bindingsIndicesByPath,b=c[a],t=this._bindings;if(void 0!==b)return t[b];var d=this._paths,i=this._parsedPaths,n=this._objects,r=n.length,f=this.nCachedObjects_,o=new Array(r);b=t.length,c[a]=b,d.push(a),i.push(e),t.push(o);for(var s=f,h=n.length;s!==h;++s){var l=n[s];o[s]=new es(l,a,e)}return o},unsubscribe_:function(a){var e=this._bindingsIndicesByPath,c=e[a];if(void 0!==c){var b=this._paths,t=this._parsedPaths,d=this._bindings,i=d.length-1,n=d[i];e[a[i]]=c,d[c]=n,d.pop(),t[c]=t[i],t.pop(),b[c]=b[i],b.pop()}}}),Object.assign(cs.prototype,{play:function(){return this._mixer._activateAction(this),this},stop:function(){return this._mixer._deactivateAction(this),this.reset()},reset:function(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()},isRunning:function(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)},isScheduled:function(){return this._mixer._isActiveAction(this)},startAt:function(a){return this._startTime=a,this},setLoop:function(a,e){return this.loop=a,this.repetitions=e,this},setEffectiveWeight:function(a){return this.weight=a,this._effectiveWeight=this.enabled?a:0,this.stopFading()},getEffectiveWeight:function(){return this._effectiveWeight},fadeIn:function(a){return this._scheduleFading(a,0,1)},fadeOut:function(a){return this._scheduleFading(a,1,0)},crossFadeFrom:function(a,e,c){if(a.fadeOut(e),this.fadeIn(e),c){var b=this._clip.duration,t=a._clip.duration,d=t/b,i=b/t;a.warp(1,d,e),this.warp(i,1,e)}return this},crossFadeTo:function(a,e,c){return a.crossFadeFrom(this,e,c)},stopFading:function(){var a=this._weightInterpolant;return null!==a&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(a)),this},setEffectiveTimeScale:function(a){return this.timeScale=a,this._effectiveTimeScale=this.paused?0:a,this.stopWarping()},getEffectiveTimeScale:function(){return this._effectiveTimeScale},setDuration:function(a){return this.timeScale=this._clip.duration/a,this.stopWarping()},syncWith:function(a){return this.time=a.time,this.timeScale=a.timeScale,this.stopWarping()},halt:function(a){return this.warp(this._effectiveTimeScale,0,a)},warp:function(a,e,c){var b=this._mixer,t=b.time,d=this._timeScaleInterpolant,i=this.timeScale;null===d&&(d=b._lendControlInterpolant(),this._timeScaleInterpolant=d);var n=d.parameterPositions,r=d.sampleValues;return n[0]=t,n[1]=t+c,r[0]=a/i,r[1]=e/i,this},stopWarping:function(){var a=this._timeScaleInterpolant;return null!==a&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(a)),this},getMixer:function(){return this._mixer},getClip:function(){return this._clip},getRoot:function(){return this._localRoot||this._mixer._root},_update:function(a,e,c,b){if(this.enabled){var t=this._startTime;if(null!==t){var d=(a-t)*c;if(d<0||0===c)return;this._startTime=null,e=c*d}e*=this._updateTimeScale(a);var i=this._updateTime(e),n=this._updateWeight(a);if(n>0)for(var r=this._interpolants,f=this._propertyBindings,o=0,s=r.length;o!==s;++o)r[o].evaluate(i),f[o].accumulate(b,n)}else this._updateWeight(a)},_updateWeight:function(a){var e=0;if(this.enabled){e=this.weight;var c=this._weightInterpolant;if(null!==c){var b=c.evaluate(a)[0];e*=b,a>c.parameterPositions[1]&&(this.stopFading(),0===b&&(this.enabled=!1))}}return this._effectiveWeight=e,e},_updateTimeScale:function(a){var e=0;if(!this.paused){e=this.timeScale;var c=this._timeScaleInterpolant;if(null!==c)e*=c.evaluate(a)[0],a>c.parameterPositions[1]&&(this.stopWarping(),0===e?this.paused=!0:this.timeScale=e)}return this._effectiveTimeScale=e,e},_updateTime:function(a){var e=this.time+a,c=this._clip.duration,b=this.loop,t=this._loopCount,d=2202===b;if(0===a)return-1===t?e:d&&1==(1&t)?c-e:e;if(2200===b){-1===t&&(this._loopCount=0,this._setEndings(!0,!0,!1));a:{if(e>=c)e=c;else{if(!(e<0)){this.time=e;break a}e=0}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=e,this._mixer.dispatchEvent({type:"finished",action:this,direction:a<0?-1:1})}}else{if(-1===t&&(a>=0?(t=0,this._setEndings(!0,0===this.repetitions,d)):this._setEndings(0===this.repetitions,!0,d)),e>=c||e<0){var i=Math.floor(e/c);e-=c*i,t+=Math.abs(i);var n=this.repetitions-t;if(n<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,e=a>0?c:0,this.time=e,this._mixer.dispatchEvent({type:"finished",action:this,direction:a>0?1:-1});else{if(1===n){var r=a<0;this._setEndings(r,!r,d)}else this._setEndings(!1,!1,d);this._loopCount=t,this.time=e,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:i})}}else this.time=e;if(d&&1==(1&t))return c-e}return e},_setEndings:function(a,e,c){var b=this._interpolantSettings;c?(b.endingStart=2401,b.endingEnd=2401):(b.endingStart=a?this.zeroSlopeAtStart?2401:fe:2402,b.endingEnd=e?this.zeroSlopeAtEnd?2401:fe:2402)},_scheduleFading:function(a,e,c){var b=this._mixer,t=b.time,d=this._weightInterpolant;null===d&&(d=b._lendControlInterpolant(),this._weightInterpolant=d);var i=d.parameterPositions,n=d.sampleValues;return i[0]=t,n[0]=e,i[1]=t+a,n[1]=c,this}}),bs.prototype=Object.assign(Object.create(Ae.prototype),{constructor:bs,_bindAction:function(a,e){var c=a._localRoot||this._root,b=a._clip.tracks,t=b.length,d=a._propertyBindings,i=a._interpolants,n=c.uuid,r=this._bindingsByRootAndName,f=r[n];void 0===f&&(f={},r[n]=f);for(var o=0;o!==t;++o){var s=b[o],h=s.name,l=f[h];if(void 0!==l)d[o]=l;else{if(void 0!==(l=d[o])){null===l._cacheIndex&&(++l.referenceCount,this._addInactiveBinding(l,n,h));continue}var u=e&&e._propertyBindings[o].binding.parsedPath;++(l=new Wo(es.create(c,h,u),s.ValueTypeName,s.getValueSize())).referenceCount,this._addInactiveBinding(l,n,h),d[o]=l}i[o].resultBuffer=l.buffer}},_activateAction:function(a){if(!this._isActiveAction(a)){if(null===a._cacheIndex){var e=(a._localRoot||this._root).uuid,c=a._clip.uuid,b=this._actionsByClip[c];this._bindAction(a,b&&b.knownActions[0]),this._addInactiveAction(a,c,e)}for(var t=a._propertyBindings,d=0,i=t.length;d!==i;++d){var n=t[d];0==n.useCount++&&(this._lendBinding(n),n.saveOriginalState())}this._lendAction(a)}},_deactivateAction:function(a){if(this._isActiveAction(a)){for(var e=a._propertyBindings,c=0,b=e.length;c!==b;++c){var t=e[c];0==--t.useCount&&(t.restoreOriginalState(),this._takeBackBinding(t))}this._takeBackAction(a)}},_initMemoryManager:function(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;var a=this;this.stats={actions:{get total(){return a._actions.length},get inUse(){return a._nActiveActions}},bindings:{get total(){return a._bindings.length},get inUse(){return a._nActiveBindings}},controlInterpolants:{get total(){return a._controlInterpolants.length},get inUse(){return a._nActiveControlInterpolants}}}},_isActiveAction:function(a){var e=a._cacheIndex;return null!==e&&e<this._nActiveActions},_addInactiveAction:function(a,e,c){var b=this._actions,t=this._actionsByClip,d=t[e];if(void 0===d)d={knownActions:[a],actionByRoot:{}},a._byClipCacheIndex=0,t[e]=d;else{var i=d.knownActions;a._byClipCacheIndex=i.length,i.push(a)}a._cacheIndex=b.length,b.push(a),d.actionByRoot[c]=a},_removeInactiveAction:function(a){var e=this._actions,c=e[e.length-1],b=a._cacheIndex;c._cacheIndex=b,e[b]=c,e.pop(),a._cacheIndex=null;var t=a._clip.uuid,d=this._actionsByClip,i=d[t],n=i.knownActions,r=n[n.length-1],f=a._byClipCacheIndex;r._byClipCacheIndex=f,n[f]=r,n.pop(),a._byClipCacheIndex=null,delete i.actionByRoot[(a._localRoot||this._root).uuid],0===n.length&&delete d[t],this._removeInactiveBindingsForAction(a)},_removeInactiveBindingsForAction:function(a){for(var e=a._propertyBindings,c=0,b=e.length;c!==b;++c){var t=e[c];0==--t.referenceCount&&this._removeInactiveBinding(t)}},_lendAction:function(a){var e=this._actions,c=a._cacheIndex,b=this._nActiveActions++,t=e[b];a._cacheIndex=b,e[b]=a,t._cacheIndex=c,e[c]=t},_takeBackAction:function(a){var e=this._actions,c=a._cacheIndex,b=--this._nActiveActions,t=e[b];a._cacheIndex=b,e[b]=a,t._cacheIndex=c,e[c]=t},_addInactiveBinding:function(a,e,c){var b=this._bindingsByRootAndName,t=b[e],d=this._bindings;void 0===t&&(t={},b[e]=t),t[c]=a,a._cacheIndex=d.length,d.push(a)},_removeInactiveBinding:function(a){var e=this._bindings,c=a.binding,b=c.rootNode.uuid,t=c.path,d=this._bindingsByRootAndName,i=d[b],n=e[e.length-1],r=a._cacheIndex;n._cacheIndex=r,e[r]=n,e.pop(),delete i[t],0===Object.keys(i).length&&delete d[b]},_lendBinding:function(a){var e=this._bindings,c=a._cacheIndex,b=this._nActiveBindings++,t=e[b];a._cacheIndex=b,e[b]=a,t._cacheIndex=c,e[c]=t},_takeBackBinding:function(a){var e=this._bindings,c=a._cacheIndex,b=--this._nActiveBindings,t=e[b];a._cacheIndex=b,e[b]=a,t._cacheIndex=c,e[c]=t},_lendControlInterpolant:function(){var a=this._controlInterpolants,e=this._nActiveControlInterpolants++,c=a[e];return void 0===c&&((c=new ef(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer)).__cacheIndex=e,a[e]=c),c},_takeBackControlInterpolant:function(a){var e=this._controlInterpolants,c=a.__cacheIndex,b=--this._nActiveControlInterpolants,t=e[b];a.__cacheIndex=b,e[b]=a,t.__cacheIndex=c,e[c]=t},_controlInterpolantsResultBuffer:new Float32Array(1),clipAction:function(a,e){var c=e||this._root,b=c.uuid,t="string"==typeof a?hf.findByName(c,a):a,d=null!==t?t.uuid:a,i=this._actionsByClip[d],n=null;if(void 0!==i){var r=i.actionByRoot[b];if(void 0!==r)return r;n=i.knownActions[0],null===t&&(t=n._clip)}if(null===t)return null;var f=new cs(this,t,e);return this._bindAction(f,n),this._addInactiveAction(f,d,b),f},existingAction:function(a,e){var c=e||this._root,b=c.uuid,t="string"==typeof a?hf.findByName(c,a):a,d=t?t.uuid:a,i=this._actionsByClip[d];return void 0!==i&&i.actionByRoot[b]||null},stopAllAction:function(){var a=this._actions,e=this._nActiveActions,c=this._bindings,b=this._nActiveBindings;this._nActiveActions=0,this._nActiveBindings=0;for(var t=0;t!==e;++t)a[t].reset();for(t=0;t!==b;++t)c[t].useCount=0;return this},update:function(a){a*=this.timeScale;for(var e=this._actions,c=this._nActiveActions,b=this.time+=a,t=Math.sign(a),d=this._accuIndex^=1,i=0;i!==c;++i){e[i]._update(b,a,t,d)}var n=this._bindings,r=this._nActiveBindings;for(i=0;i!==r;++i)n[i].apply(d);return this},setTime:function(a){this.time=0;for(var e=0;e<this._actions.length;e++)this._actions[e].time=0;return this.update(a)},getRoot:function(){return this._root},uncacheClip:function(a){var e=this._actions,c=a.uuid,b=this._actionsByClip,t=b[c];if(void 0!==t){for(var d=t.knownActions,i=0,n=d.length;i!==n;++i){var r=d[i];this._deactivateAction(r);var f=r._cacheIndex,o=e[e.length-1];r._cacheIndex=null,r._byClipCacheIndex=null,o._cacheIndex=f,e[f]=o,e.pop(),this._removeInactiveBindingsForAction(r)}delete b[c]}},uncacheRoot:function(a){var e=a.uuid,c=this._actionsByClip;for(var b in c){var t=c[b].actionByRoot[e];void 0!==t&&(this._deactivateAction(t),this._removeInactiveAction(t))}var d=this._bindingsByRootAndName[e];if(void 0!==d)for(var i in d){var n=d[i];n.restoreOriginalState(),this._removeInactiveBinding(n)}},uncacheAction:function(a,e){var c=this.existingAction(a,e);null!==c&&(this._deactivateAction(c),this._removeInactiveAction(c))}}),ts.prototype.clone=function(){return new ts(void 0===this.value.clone?this.value:this.value.clone())},ds.prototype=Object.assign(Object.create(Ii.prototype),{constructor:ds,isInstancedInterleavedBuffer:!0,copy:function(a){return Ii.prototype.copy.call(this,a),this.meshPerAttribute=a.meshPerAttribute,this}}),Object.assign(function(a,e,c,b){this.ray=new Hc(a,e),this.near=c||0,this.far=b||1/0,this.camera=null,this.params={Mesh:{},Line:{},LOD:{},Points:{threshold:1},Sprite:{}},Object.defineProperties(this.params,{PointCloud:{get:function(){return console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points."),this.Points}}})}.prototype,{linePrecision:1,set:function(a,e){this.ray.set(a,e)},setFromCamera:function(a,e){e&&e.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(a.x,a.y,.5).unproject(e).sub(this.ray.origin).normalize(),this.camera=e):e&&e.isOrthographicCamera?(this.ray.origin.set(a.x,a.y,(e.near+e.far)/(e.near-e.far)).unproject(e),this.ray.direction.set(0,0,-1).transformDirection(e.matrixWorld),this.camera=e):console.error("THREE.Raycaster: Unsupported camera type.")},intersectObject:function(a,e,c){var b=c||[];return ns(a,this,b,e),b.sort(is),b},intersectObjects:function(a,e,c){var b=c||[];if(!1===Array.isArray(a))return console.warn("THREE.Raycaster.intersectObjects: objects is not an Array."),b;for(var t=0,d=a.length;t<d;t++)ns(a[t],this,b,e);return b.sort(is),b}}),Object.assign(function(a,e,c){return this.radius=void 0!==a?a:1,this.phi=void 0!==e?e:0,this.theta=void 0!==c?c:0,this}.prototype,{set:function(a,e,c){return this.radius=a,this.phi=e,this.theta=c,this},clone:function(){return(new this.constructor).copy(this)},copy:function(a){return this.radius=a.radius,this.phi=a.phi,this.theta=a.theta,this},makeSafe:function(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this},setFromVector3:function(a){return this.setFromCartesianCoords(a.x,a.y,a.z)},setFromCartesianCoords:function(a,e,c){return this.radius=Math.sqrt(a*a+e*e+c*c),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(a,c),this.phi=Math.acos(Pe.clamp(e/this.radius,-1,1))),this}}),Object.assign(function(a,e,c){return this.radius=void 0!==a?a:1,this.theta=void 0!==e?e:0,this.y=void 0!==c?c:0,this}.prototype,{set:function(a,e,c){return this.radius=a,this.theta=e,this.y=c,this},clone:function(){return(new this.constructor).copy(this)},copy:function(a){return this.radius=a.radius,this.theta=a.theta,this.y=a.y,this},setFromVector3:function(a){return this.setFromCartesianCoords(a.x,a.y,a.z)},setFromCartesianCoords:function(a,e,c){return this.radius=Math.sqrt(a*a+c*c),this.theta=Math.atan2(a,c),this.y=e,this}});var rs=new Ce;function fs(a,e){this.min=void 0!==a?a:new Ce(1/0,1/0),this.max=void 0!==e?e:new Ce(-1/0,-1/0)}Object.assign(fs.prototype,{set:function(a,e){return this.min.copy(a),this.max.copy(e),this},setFromPoints:function(a){this.makeEmpty();for(var e=0,c=a.length;e<c;e++)this.expandByPoint(a[e]);return this},setFromCenterAndSize:function(a,e){var c=rs.copy(e).multiplyScalar(.5);return this.min.copy(a).sub(c),this.max.copy(a).add(c),this},clone:function(){return(new this.constructor).copy(this)},copy:function(a){return this.min.copy(a.min),this.max.copy(a.max),this},makeEmpty:function(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},getCenter:function(a){return void 0===a&&(console.warn("THREE.Box2: .getCenter() target is now required"),a=new Ce),this.isEmpty()?a.set(0,0):a.addVectors(this.min,this.max).multiplyScalar(.5)},getSize:function(a){return void 0===a&&(console.warn("THREE.Box2: .getSize() target is now required"),a=new Ce),this.isEmpty()?a.set(0,0):a.subVectors(this.max,this.min)},expandByPoint:function(a){return this.min.min(a),this.max.max(a),this},expandByVector:function(a){return this.min.sub(a),this.max.add(a),this},expandByScalar:function(a){return this.min.addScalar(-a),this.max.addScalar(a),this},containsPoint:function(a){return!(a.x<this.min.x||a.x>this.max.x||a.y<this.min.y||a.y>this.max.y)},containsBox:function(a){return this.min.x<=a.min.x&&a.max.x<=this.max.x&&this.min.y<=a.min.y&&a.max.y<=this.max.y},getParameter:function(a,e){return void 0===e&&(console.warn("THREE.Box2: .getParameter() target is now required"),e=new Ce),e.set((a.x-this.min.x)/(this.max.x-this.min.x),(a.y-this.min.y)/(this.max.y-this.min.y))},intersectsBox:function(a){return!(a.max.x<this.min.x||a.min.x>this.max.x||a.max.y<this.min.y||a.min.y>this.max.y)},clampPoint:function(a,e){return void 0===e&&(console.warn("THREE.Box2: .clampPoint() target is now required"),e=new Ce),e.copy(a).clamp(this.min,this.max)},distanceToPoint:function(a){return rs.copy(a).clamp(this.min,this.max).sub(a).length()},intersect:function(a){return this.min.max(a.min),this.max.min(a.max),this},union:function(a){return this.min.min(a.min),this.max.max(a.max),this},translate:function(a){return this.min.add(a),this.max.add(a),this},equals:function(a){return a.min.equals(this.min)&&a.max.equals(this.max)}});var os=new De,ss=new De;function hs(a,e){this.start=void 0!==a?a:new De,this.end=void 0!==e?e:new De}function ls(a){mc.call(this),this.material=a,this.render=function(){}}Object.assign(hs.prototype,{set:function(a,e){return this.start.copy(a),this.end.copy(e),this},clone:function(){return(new this.constructor).copy(this)},copy:function(a){return this.start.copy(a.start),this.end.copy(a.end),this},getCenter:function(a){return void 0===a&&(console.warn("THREE.Line3: .getCenter() target is now required"),a=new De),a.addVectors(this.start,this.end).multiplyScalar(.5)},delta:function(a){return void 0===a&&(console.warn("THREE.Line3: .delta() target is now required"),a=new De),a.subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(a,e){return void 0===e&&(console.warn("THREE.Line3: .at() target is now required"),e=new De),this.delta(e).multiplyScalar(a).add(this.start)},closestPointToPointParameter:function(a,e){os.subVectors(a,this.start),ss.subVectors(this.end,this.start);var c=ss.dot(ss),b=ss.dot(os)/c;return e&&(b=Pe.clamp(b,0,1)),b},closestPointToPoint:function(a,e,c){var b=this.closestPointToPointParameter(a,e);return void 0===c&&(console.warn("THREE.Line3: .closestPointToPoint() target is now required"),c=new De),this.delta(c).multiplyScalar(b).add(this.start)},applyMatrix4:function(a){return this.start.applyMatrix4(a),this.end.applyMatrix4(a),this},equals:function(a){return a.start.equals(this.start)&&a.end.equals(this.end)}}),ls.prototype=Object.create(mc.prototype),ls.prototype.constructor=ls,ls.prototype.isImmediateRenderObject=!0;var us=new De,ps=new De,ms=new Be,gs=["a","b","c"];function vs(a,e,c,b){this.object=a,this.size=void 0!==e?e:1;var t=void 0!==c?c:16711680,d=void 0!==b?b:1,i=0,n=this.object.geometry;n&&n.isGeometry?i=3*n.faces.length:n&&n.isBufferGeometry&&(i=n.attributes.normal.count);var r=new Rb,f=new vb(2*i*3,3);r.addAttribute("position",f),pn.call(this,r,new dn({color:t,linewidth:d})),this.matrixAutoUpdate=!1,this.update()}vs.prototype=Object.create(pn.prototype),vs.prototype.constructor=vs,vs.prototype.update=function(){this.object.updateMatrixWorld(!0),ms.getNormalMatrix(this.object.matrixWorld);var a=this.object.matrixWorld,e=this.geometry.attributes.position,c=this.object.geometry;if(c&&c.isGeometry)for(var b=c.vertices,t=c.faces,d=0,i=0,n=t.length;i<n;i++)for(var r=t[i],f=0,o=r.vertexNormals.length;f<o;f++){var s=b[r[gs[f]]],h=r.vertexNormals[f];us.copy(s).applyMatrix4(a),ps.copy(h).applyMatrix3(ms).normalize().multiplyScalar(this.size).add(us),e.setXYZ(d,us.x,us.y,us.z),d+=1,e.setXYZ(d,ps.x,ps.y,ps.z),d+=1}else if(c&&c.isBufferGeometry){var l=c.attributes.position,u=c.attributes.normal;for(d=0,f=0,o=l.count;f<o;f++)us.set(l.getX(f),l.getY(f),l.getZ(f)).applyMatrix4(a),ps.set(u.getX(f),u.getY(f),u.getZ(f)),ps.applyMatrix3(ms).normalize().multiplyScalar(this.size).add(us),e.setXYZ(d,us.x,us.y,us.z),d+=1,e.setXYZ(d,ps.x,ps.y,ps.z),d+=1}e.needsUpdate=!0};var ys=new De;function xs(a,e){mc.call(this),this.light=a,this.light.updateMatrixWorld(),this.matrix=a.matrixWorld,this.matrixAutoUpdate=!1,this.color=e;for(var c=new Rb,b=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1],t=0,d=1;t<32;t++,d++){var i=t/32*Math.PI*2,n=d/32*Math.PI*2;b.push(Math.cos(i),Math.sin(i),1,Math.cos(n),Math.sin(n),1)}c.addAttribute("position",new vb(b,3));var r=new dn({fog:!1});this.cone=new pn(c,r),this.add(this.cone),this.update()}xs.prototype=Object.create(mc.prototype),xs.prototype.constructor=xs,xs.prototype.dispose=function(){this.cone.geometry.dispose(),this.cone.material.dispose()},xs.prototype.update=function(){this.light.updateMatrixWorld();var a=this.light.distance?this.light.distance:1e3,e=a*Math.tan(this.light.angle);this.cone.scale.set(e,e,a),ys.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(ys),void 0!==this.color?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)};var ws=new De,_s=new Qe,Ms=new Qe;function Ss(a){for(var e=function a(e){var c=[];e&&e.isBone&&c.push(e);for(var b=0;b<e.children.length;b++)c.push.apply(c,a(e.children[b]));return c}(a),c=new Rb,b=[],t=[],d=new cb(0,0,1),i=new cb(0,1,0),n=0;n<e.length;n++){var r=e[n];r.parent&&r.parent.isBone&&(b.push(0,0,0),b.push(0,0,0),t.push(d.r,d.g,d.b),t.push(i.r,i.g,i.b))}c.addAttribute("position",new vb(b,3)),c.addAttribute("color",new vb(t,3));var f=new dn({vertexColors:g,depthTest:!1,depthWrite:!1,transparent:!0});pn.call(this,c,f),this.root=a,this.bones=e,this.matrix=a.matrixWorld,this.matrixAutoUpdate=!1}function Ts(a,e,c){this.light=a,this.light.updateMatrixWorld(),this.color=c;var b=new Tr(e,4,2),t=new fb({wireframe:!0,fog:!1});Xb.call(this,b,t),this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}function Es(a,e){this.type="RectAreaLightHelper",this.light=a,this.color=e;var c=new Rb;c.addAttribute("position",new vb([1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],3)),c.computeBoundingSphere();var b=new dn({fog:!1});hn.call(this,c,b);var t=new Rb;t.addAttribute("position",new vb([1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],3)),t.computeBoundingSphere(),this.add(new Xb(t,new fb({side:l,fog:!1}))),this.update()}Ss.prototype=Object.create(pn.prototype),Ss.prototype.constructor=Ss,Ss.prototype.updateMatrixWorld=function(a){var e=this.bones,c=this.geometry,b=c.getAttribute("position");Ms.getInverse(this.root.matrixWorld);for(var t=0,d=0;t<e.length;t++){var i=e[t];i.parent&&i.parent.isBone&&(_s.multiplyMatrices(Ms,i.matrixWorld),ws.setFromMatrixPosition(_s),b.setXYZ(d,ws.x,ws.y,ws.z),_s.multiplyMatrices(Ms,i.parent.matrixWorld),ws.setFromMatrixPosition(_s),b.setXYZ(d+1,ws.x,ws.y,ws.z),d+=2)}c.getAttribute("position").needsUpdate=!0,mc.prototype.updateMatrixWorld.call(this,a)},Ts.prototype=Object.create(Xb.prototype),Ts.prototype.constructor=Ts,Ts.prototype.dispose=function(){this.geometry.dispose(),this.material.dispose()},Ts.prototype.update=function(){void 0!==this.color?this.material.color.set(this.color):this.material.color.copy(this.light.color)},Es.prototype=Object.create(hn.prototype),Es.prototype.constructor=Es,Es.prototype.update=function(){if(this.scale.set(.5*this.light.width,.5*this.light.height,1),void 0!==this.color)this.material.color.set(this.color),this.children[0].material.color.set(this.color);else{this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity);var a=this.material.color,e=Math.max(a.r,a.g,a.b);e>1&&a.multiplyScalar(1/e),this.children[0].material.color.copy(this.material.color)}},Es.prototype.dispose=function(){this.geometry.dispose(),this.material.dispose(),this.children[0].geometry.dispose(),this.children[0].material.dispose()};var As=new De,Ls=new cb,Rs=new cb;function Ps(a,e,c){mc.call(this),this.light=a,this.light.updateMatrixWorld(),this.matrix=a.matrixWorld,this.matrixAutoUpdate=!1,this.color=c;var b=new zn(e);b.rotateY(.5*Math.PI),this.material=new fb({wireframe:!0,fog:!1}),void 0===this.color&&(this.material.vertexColors=g);var t=b.getAttribute("position"),d=new Float32Array(3*t.count);b.addAttribute("color",new ob(d,3)),this.add(new Xb(b,this.material)),this.update()}function Cs(a,e){this.lightProbe=a,this.size=e;var c={GAMMA_OUTPUT:""},b=new nt({defines:c,uniforms:{sh:{value:this.lightProbe.sh.coefficients},intensity:{value:this.lightProbe.intensity}},vertexShader:["varying vec3 vNormal;","void main() {","\tvNormal = normalize( normalMatrix * normal );","\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["#define RECIPROCAL_PI 0.318309886","vec3 inverseTransformDirection( in vec3 normal, in mat4 matrix ) {","\t// matrix is assumed to be orthogonal","\treturn normalize( ( vec4( normal, 0.0 ) * matrix ).xyz );","}","vec3 linearToOutput( in vec3 a ) {","\t#ifdef GAMMA_OUTPUT","\t\treturn pow( a, vec3( 1.0 / float( GAMMA_FACTOR ) ) );","\t#else","\t\treturn a;","\t#endif","}","// source: https://graphics.stanford.edu/papers/envmap/envmap.pdf","vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {","\t// normal is assumed to have unit length","\tfloat x = normal.x, y = normal.y, z = normal.z;","\t// band 0","\tvec3 result = shCoefficients[ 0 ] * 0.886227;","\t// band 1","\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;","\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;","\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;","\t// band 2","\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;","\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;","\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );","\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;","\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );","\treturn result;","}","uniform vec3 sh[ 9 ]; // sh coefficients","uniform float intensity; // light probe intensity","varying vec3 vNormal;","void main() {","\tvec3 normal = normalize( vNormal );","\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );","\tvec3 irradiance = shGetIrradianceAt( worldNormal, sh );","\tvec3 outgoingLight = RECIPROCAL_PI * irradiance * intensity;","\toutgoingLight = linearToOutput( outgoingLight );","\tgl_FragColor = vec4( outgoingLight, 1.0 );","}"].join("\n")}),t=new Tr(1,32,16);Xb.call(this,t,b),this.onBeforeRender()}function Os(a,e,c,b){a=a||10,e=e||10,c=new cb(void 0!==c?c:4473924),b=new cb(void 0!==b?b:8947848);for(var t=e/2,d=a/e,i=a/2,n=[],r=[],f=0,o=0,s=-i;f<=e;f++,s+=d){n.push(-i,0,s,i,0,s),n.push(s,0,-i,s,0,i);var h=f===t?c:b;h.toArray(r,o),o+=3,h.toArray(r,o),o+=3,h.toArray(r,o),o+=3,h.toArray(r,o),o+=3}var l=new Rb;l.addAttribute("position",new vb(n,3)),l.addAttribute("color",new vb(r,3));var u=new dn({vertexColors:g});pn.call(this,l,u)}function Is(a,e,c,b,t,d){a=a||10,e=e||16,c=c||8,b=b||64,t=new cb(void 0!==t?t:4473924),d=new cb(void 0!==d?d:8947848);var i,n,r,f,o,s,h,l=[],u=[];for(f=0;f<=e;f++)r=f/e*(2*Math.PI),i=Math.sin(r)*a,n=Math.cos(r)*a,l.push(0,0,0),l.push(i,0,n),h=1&f?t:d,u.push(h.r,h.g,h.b),u.push(h.r,h.g,h.b);for(f=0;f<=c;f++)for(h=1&f?t:d,s=a-a/c*f,o=0;o<b;o++)r=o/b*(2*Math.PI),i=Math.sin(r)*s,n=Math.cos(r)*s,l.push(i,0,n),u.push(h.r,h.g,h.b),r=(o+1)/b*(2*Math.PI),i=Math.sin(r)*s,n=Math.cos(r)*s,l.push(i,0,n),u.push(h.r,h.g,h.b);var p=new Rb;p.addAttribute("position",new vb(l,3)),p.addAttribute("color",new vb(u,3));var m=new dn({vertexColors:g});pn.call(this,p,m)}function Ns(a,e,c,b){this.audio=a,this.range=e||1,this.divisionsInnerAngle=c||16,this.divisionsOuterAngle=b||2;var t=new Rb,d=this.divisionsInnerAngle+2*this.divisionsOuterAngle,i=new Float32Array(3*(3*d+3));t.addAttribute("position",new ob(i,3));var n=new dn({color:65280}),r=new dn({color:16776960});hn.call(this,t,[r,n]),this.update()}Ps.prototype=Object.create(mc.prototype),Ps.prototype.constructor=Ps,Ps.prototype.dispose=function(){this.children[0].geometry.dispose(),this.children[0].material.dispose()},Ps.prototype.update=function(){var a=this.children[0];if(void 0!==this.color)this.material.color.set(this.color);else{var e=a.geometry.getAttribute("color");Ls.copy(this.light.color),Rs.copy(this.light.groundColor);for(var c=0,b=e.count;c<b;c++){var t=c<b/2?Ls:Rs;e.setXYZ(c,t.r,t.g,t.b)}e.needsUpdate=!0}a.lookAt(As.setFromMatrixPosition(this.light.matrixWorld).negate())},Cs.prototype=Object.create(Xb.prototype),Cs.prototype.constructor=Cs,Cs.prototype.dispose=function(){this.geometry.dispose(),this.material.dispose()},Cs.prototype.onBeforeRender=function(){this.position.copy(this.lightProbe.position),this.scale.set(1,1,1).multiplyScalar(this.size),this.material.uniforms.intensity.value=this.lightProbe.intensity},Os.prototype=Object.assign(Object.create(pn.prototype),{constructor:Os,copy:function(a){return pn.prototype.copy.call(this,a),this.geometry.copy(a.geometry),this.material.copy(a.material),this},clone:function(){return(new this.constructor).copy(this)}}),Is.prototype=Object.create(pn.prototype),Is.prototype.constructor=Is,Ns.prototype=Object.create(hn.prototype),Ns.prototype.constructor=Ns,Ns.prototype.update=function(){var a,e,c=this.audio,b=this.range,t=this.divisionsInnerAngle,d=this.divisionsOuterAngle,i=Pe.degToRad(c.panner.coneInnerAngle),n=Pe.degToRad(c.panner.coneOuterAngle),r=i/2,f=n/2,o=0,s=0,h=this.geometry,l=h.attributes.position;function u(c,t,d,i){var n=(t-c)/d;for(l.setXYZ(o,0,0,0),s++,a=c;a<t;a+=n)e=o+s,l.setXYZ(e,Math.sin(a)*b,0,Math.cos(a)*b),l.setXYZ(e+1,Math.sin(Math.min(a+n,t))*b,0,Math.cos(Math.min(a+n,t))*b),l.setXYZ(e+2,0,0,0),s+=3;h.addGroup(o,s,i),o+=s,s=0}h.clearGroups(),u(-f,-r,d,0),u(-r,r,t,1),u(r,f,d,0),l.needsUpdate=!0,i===n&&(this.material[0].visible=!1)},Ns.prototype.dispose=function(){this.geometry.dispose(),this.material[0].dispose(),this.material[1].dispose()};var Ds=new De,zs=new De,Us=new Be;function Bs(a,e,c,b){this.object=a,this.size=void 0!==e?e:1;var t=void 0!==c?c:16776960,d=void 0!==b?b:1,i=0,n=this.object.geometry;n&&n.isGeometry?i=n.faces.length:console.warn("THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.");var r=new Rb,f=new vb(2*i*3,3);r.addAttribute("position",f),pn.call(this,r,new dn({color:t,linewidth:d})),this.matrixAutoUpdate=!1,this.update()}Bs.prototype=Object.create(pn.prototype),Bs.prototype.constructor=Bs,Bs.prototype.update=function(){this.object.updateMatrixWorld(!0),Us.getNormalMatrix(this.object.matrixWorld);for(var a=this.object.matrixWorld,e=this.geometry.attributes.position,c=this.object.geometry,b=c.vertices,t=c.faces,d=0,i=0,n=t.length;i<n;i++){var r=t[i],f=r.normal;Ds.copy(b[r.a]).add(b[r.b]).add(b[r.c]).divideScalar(3).applyMatrix4(a),zs.copy(f).applyMatrix3(Us).normalize().multiplyScalar(this.size).add(Ds),e.setXYZ(d,Ds.x,Ds.y,Ds.z),d+=1,e.setXYZ(d,zs.x,zs.y,zs.z),d+=1}e.needsUpdate=!0};var Fs=new De,Gs=new De,Hs=new De;function Vs(a,e,c){mc.call(this),this.light=a,this.light.updateMatrixWorld(),this.matrix=a.matrixWorld,this.matrixAutoUpdate=!1,this.color=c,void 0===e&&(e=1);var b=new Rb;b.addAttribute("position",new vb([-e,e,0,e,e,0,e,-e,0,-e,-e,0,-e,e,0],3));var t=new dn({fog:!1});this.lightPlane=new hn(b,t),this.add(this.lightPlane),(b=new Rb).addAttribute("position",new vb([0,0,0,0,0,1],3)),this.targetLine=new hn(b,t),this.add(this.targetLine),this.update()}Vs.prototype=Object.create(mc.prototype),Vs.prototype.constructor=Vs,Vs.prototype.dispose=function(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()},Vs.prototype.update=function(){Fs.setFromMatrixPosition(this.light.matrixWorld),Gs.setFromMatrixPosition(this.light.target.matrixWorld),Hs.subVectors(Gs,Fs),this.lightPlane.lookAt(Gs),void 0!==this.color?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(Gs),this.targetLine.scale.z=Hs.length()};var ks=new De,js=new rt;function Ws(a){var e=new Rb,c=new dn({color:16777215,vertexColors:m}),b=[],t=[],d={},i=new cb(16755200),n=new cb(16711680),r=new cb(43775),f=new cb(16777215),o=new cb(3355443);function s(a,e,c){h(a,c),h(e,c)}function h(a,e){b.push(0,0,0),t.push(e.r,e.g,e.b),void 0===d[a]&&(d[a]=[]),d[a].push(b.length/3-1)}s("n1","n2",i),s("n2","n4",i),s("n4","n3",i),s("n3","n1",i),s("f1","f2",i),s("f2","f4",i),s("f4","f3",i),s("f3","f1",i),s("n1","f1",i),s("n2","f2",i),s("n3","f3",i),s("n4","f4",i),s("p","n1",n),s("p","n2",n),s("p","n3",n),s("p","n4",n),s("u1","u2",r),s("u2","u3",r),s("u3","u1",r),s("c","t",f),s("p","c",o),s("cn1","cn2",o),s("cn3","cn4",o),s("cf1","cf2",o),s("cf3","cf4",o),e.addAttribute("position",new vb(b,3)),e.addAttribute("color",new vb(t,3)),pn.call(this,e,c),this.camera=a,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=a.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=d,this.update()}function qs(a,e,c,b,t,d,i){ks.set(t,d,i).unproject(b);var n=e[a];if(void 0!==n)for(var r=c.getAttribute("position"),f=0,o=n.length;f<o;f++)r.setXYZ(n[f],ks.x,ks.y,ks.z)}Ws.prototype=Object.create(pn.prototype),Ws.prototype.constructor=Ws,Ws.prototype.update=function(){var a=this.geometry,e=this.pointMap;js.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),qs("c",e,a,js,0,0,-1),qs("t",e,a,js,0,0,1),qs("n1",e,a,js,-1,-1,-1),qs("n2",e,a,js,1,-1,-1),qs("n3",e,a,js,-1,1,-1),qs("n4",e,a,js,1,1,-1),qs("f1",e,a,js,-1,-1,1),qs("f2",e,a,js,1,-1,1),qs("f3",e,a,js,-1,1,1),qs("f4",e,a,js,1,1,1),qs("u1",e,a,js,.7,1.1,-1),qs("u2",e,a,js,-.7,1.1,-1),qs("u3",e,a,js,0,2,-1),qs("cf1",e,a,js,-1,0,1),qs("cf2",e,a,js,1,0,1),qs("cf3",e,a,js,0,-1,1),qs("cf4",e,a,js,0,1,1),qs("cn1",e,a,js,-1,0,-1),qs("cn2",e,a,js,1,0,-1),qs("cn3",e,a,js,0,-1,-1),qs("cn4",e,a,js,0,1,-1),a.getAttribute("position").needsUpdate=!0};var Xs=new Pc;function Ys(a,e){this.object=a,void 0===e&&(e=16776960);var c=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),b=new Float32Array(24),t=new Rb;t.setIndex(new ob(c,1)),t.addAttribute("position",new ob(b,3)),pn.call(this,t,new dn({color:e})),this.matrixAutoUpdate=!1,this.update()}function Zs(a,e){this.type="Box3Helper",this.box=a,e=e||16776960;var c=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),b=new Rb;b.setIndex(new ob(c,1)),b.addAttribute("position",new vb([1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],3)),pn.call(this,b,new dn({color:e})),this.geometry.computeBoundingSphere()}function Js(a,e,c){this.type="PlaneHelper",this.plane=a,this.size=void 0===e?1:e;var b=void 0!==c?c:16776960,t=new Rb;t.addAttribute("position",new vb([1,-1,1,-1,1,1,-1,-1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,0,0,1,0,0,0],3)),t.computeBoundingSphere(),hn.call(this,t,new dn({color:b}));var d=new Rb;d.addAttribute("position",new vb([1,1,1,-1,1,1,-1,-1,1,1,1,1,-1,-1,1,1,-1,1],3)),d.computeBoundingSphere(),this.add(new Xb(d,new fb({color:b,opacity:.2,transparent:!0,depthWrite:!1})))}Ys.prototype=Object.create(pn.prototype),Ys.prototype.constructor=Ys,Ys.prototype.update=function(a){if(void 0!==a&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),void 0!==this.object&&Xs.setFromObject(this.object),!Xs.isEmpty()){var e=Xs.min,c=Xs.max,b=this.geometry.attributes.position,t=b.array;t[0]=c.x,t[1]=c.y,t[2]=c.z,t[3]=e.x,t[4]=c.y,t[5]=c.z,t[6]=e.x,t[7]=e.y,t[8]=c.z,t[9]=c.x,t[10]=e.y,t[11]=c.z,t[12]=c.x,t[13]=c.y,t[14]=e.z,t[15]=e.x,t[16]=c.y,t[17]=e.z,t[18]=e.x,t[19]=e.y,t[20]=e.z,t[21]=c.x,t[22]=e.y,t[23]=e.z,b.needsUpdate=!0,this.geometry.computeBoundingSphere()}},Ys.prototype.setFromObject=function(a){return this.object=a,this.update(),this},Ys.prototype.copy=function(a){return pn.prototype.copy.call(this,a),this.object=a.object,this},Ys.prototype.clone=function(){return(new this.constructor).copy(this)},Zs.prototype=Object.create(pn.prototype),Zs.prototype.constructor=Zs,Zs.prototype.updateMatrixWorld=function(a){var e=this.box;e.isEmpty()||(e.getCenter(this.position),e.getSize(this.scale),this.scale.multiplyScalar(.5),mc.prototype.updateMatrixWorld.call(this,a))},Js.prototype=Object.create(hn.prototype),Js.prototype.constructor=Js,Js.prototype.updateMatrixWorld=function(a){var e=-this.plane.constant;Math.abs(e)<1e-8&&(e=1e-8),this.scale.set(.5*this.size,.5*this.size,e),this.children[0].material.side=e<0?l:h,this.lookAt(this.plane.normal),mc.prototype.updateMatrixWorld.call(this,a)};var Ks,Qs,$s=new De;function ah(a,e,c,b,t,d){mc.call(this),void 0===a&&(a=new De(0,0,1)),void 0===e&&(e=new De(0,0,0)),void 0===c&&(c=1),void 0===b&&(b=16776960),void 0===t&&(t=.2*c),void 0===d&&(d=.2*t),void 0===Ks&&((Ks=new Rb).addAttribute("position",new vb([0,0,0,0,1,0],3)),(Qs=new Dr(0,.5,1,5,1)).translate(0,-.5,0)),this.position.copy(e),this.line=new hn(Ks,new dn({color:b})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new Xb(Qs,new fb({color:b})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(a),this.setLength(c,t,d)}function eh(a){var e=[0,0,0,a=a||1,0,0,0,0,0,0,a,0,0,0,0,0,0,a],c=new Rb;c.addAttribute("position",new vb(e,3)),c.addAttribute("color",new vb([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],3));var b=new dn({vertexColors:g});pn.call(this,c,b)}ah.prototype=Object.create(mc.prototype),ah.prototype.constructor=ah,ah.prototype.setDirection=function(a){if(a.y>.99999)this.quaternion.set(0,0,0,1);else if(a.y<-.99999)this.quaternion.set(1,0,0,0);else{$s.set(a.z,0,-a.x).normalize();var e=Math.acos(a.y);this.quaternion.setFromAxisAngle($s,e)}},ah.prototype.setLength=function(a,e,c){void 0===e&&(e=.2*a),void 0===c&&(c=.2*e),this.line.scale.set(1,Math.max(1e-4,a-e),1),this.line.updateMatrix(),this.cone.scale.set(c,e,c),this.cone.position.y=a,this.cone.updateMatrix()},ah.prototype.setColor=function(a){this.line.material.color.set(a),this.cone.material.color.set(a)},ah.prototype.copy=function(a){return mc.prototype.copy.call(this,a,!1),this.line.copy(a.line),this.cone.copy(a.cone),this},ah.prototype.clone=function(){return(new this.constructor).copy(this)},eh.prototype=Object.create(pn.prototype),eh.prototype.constructor=eh;function ch(a){console.warn("THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead."),Nf.call(this,a),this.type="catmullrom"}Ef.create=function(a,e){return console.log("THREE.Curve.create() has been deprecated"),a.prototype=Object.create(Ef.prototype),a.prototype.constructor=a,a.prototype.getPoint=e,a},Object.assign(qf.prototype,{createPointsGeometry:function(a){console.warn("THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");var e=this.getPoints(a);return this.createGeometry(e)},createSpacedPointsGeometry:function(a){console.warn("THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");var e=this.getSpacedPoints(a);return this.createGeometry(e)},createGeometry:function(a){console.warn("THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");for(var e=new at,c=0,b=a.length;c<b;c++){var t=a[c];e.vertices.push(new De(t.x,t.y,t.z||0))}return e}}),Object.assign(Xf.prototype,{fromPoints:function(a){console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(a)}}),Object.create(Nf.prototype),Object.create(Nf.prototype),ch.prototype=Object.create(Nf.prototype),Object.assign(ch.prototype,{initFromArray:function(){console.error("THREE.Spline: .initFromArray() has been removed.")},getControlPointsArray:function(){console.error("THREE.Spline: .getControlPointsArray() has been removed.")},reparametrizeByArcLength:function(){console.error("THREE.Spline: .reparametrizeByArcLength() has been removed.")}}),Os.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")},Ss.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")},Object.assign(gf.prototype,{extractUrlBase:function(a){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),fo.extractUrlBase(a)}}),gf.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}},Object.assign(uo.prototype,{setTexturePath:function(a){return console.warn("THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath()."),this.setResourcePath(a)}}),Object.assign(fs.prototype,{center:function(a){return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),this.getCenter(a)},empty:function(){return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),this.isEmpty()},isIntersectionBox:function(a){return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(a)},size:function(a){return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),this.getSize(a)}}),Object.assign(Pc.prototype,{center:function(a){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(a)},empty:function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()},isIntersectionBox:function(a){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(a)},isIntersectionSphere:function(a){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(a)},size:function(a){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(a)}}),hs.prototype.center=function(a){return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."),this.getCenter(a)},Object.assign(Pe,{random16:function(){return console.warn("THREE.Math: .random16() has been deprecated. Use Math.random() instead."),Math.random()},nearestPowerOfTwo:function(a){return console.warn("THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo()."),Pe.floorPowerOfTwo(a)},nextPowerOfTwo:function(a){return console.warn("THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo()."),Pe.ceilPowerOfTwo(a)}}),Object.assign(Be.prototype,{flattenToArrayOffset:function(a,e){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(a,e)},multiplyVector3:function(a){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),a.applyMatrix3(this)},multiplyVector3Array:function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")},applyToBuffer:function(a){return console.warn("THREE.Matrix3: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead."),this.applyToBufferAttribute(a)},applyToVector3Array:function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")}}),Object.assign(Qe.prototype,{extractPosition:function(a){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(a)},flattenToArrayOffset:function(a,e){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(a,e)},getPosition:function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),(new De).setFromMatrixColumn(this,3)},setRotationFromQuaternion:function(a){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(a)},multiplyToArray:function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")},multiplyVector3:function(a){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),a.applyMatrix4(this)},multiplyVector4:function(a){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),a.applyMatrix4(this)},multiplyVector3Array:function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")},rotateAxis:function(a){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),a.transformDirection(this)},crossVector:function(a){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),a.applyMatrix4(this)},translate:function(){console.error("THREE.Matrix4: .translate() has been removed.")},rotateX:function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},rotateY:function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},rotateZ:function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},rotateByAxis:function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},applyToBuffer:function(a){return console.warn("THREE.Matrix4: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead."),this.applyToBufferAttribute(a)},applyToVector3Array:function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},makeFrustum:function(a,e,c,b,t,d){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(a,e,b,c,t,d)}}),vt.prototype.isIntersectionLine=function(a){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(a)},Oe.prototype.multiplyVector3=function(a){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),a.applyQuaternion(this)},Object.assign(Hc.prototype,{isIntersectionBox:function(a){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(a)},isIntersectionPlane:function(a){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(a)},isIntersectionSphere:function(a){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(a)}}),Object.assign(Qc.prototype,{area:function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()},barycoordFromPoint:function(a,e){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(a,e)},midpoint:function(a){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(a)},normal:function(a){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(a)},plane:function(a){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(a)}}),Object.assign(Qc,{barycoordFromPoint:function(a,e,c,b,t){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),Qc.getBarycoord(a,e,c,b,t)},normal:function(a,e,c,b){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),Qc.getNormal(a,e,c,b)}}),Object.assign(Yf.prototype,{extractAllPoints:function(a){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(a)},extrude:function(a){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new vr(this,a)},makeGeometry:function(a){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new Pr(this,a)}}),Object.assign(Ce.prototype,{fromAttribute:function(a,e,c){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(a,e,c)},distanceToManhattan:function(a){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(a)},lengthManhattan:function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}}),Object.assign(De.prototype,{setEulerFromRotationMatrix:function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},setEulerFromQuaternion:function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},getPositionFromMatrix:function(a){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(a)},getScaleFromMatrix:function(a){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(a)},getColumnFromMatrix:function(a,e){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(e,a)},applyProjection:function(a){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(a)},fromAttribute:function(a,e,c){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(a,e,c)},distanceToManhattan:function(a){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(a)},lengthManhattan:function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}}),Object.assign(Ve.prototype,{fromAttribute:function(a,e,c){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(a,e,c)},lengthManhattan:function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}}),Object.assign(at.prototype,{computeTangents:function(){console.error("THREE.Geometry: .computeTangents() has been removed.")},computeLineDistances:function(){console.error("THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.")}}),Object.assign(mc.prototype,{getChildByName:function(a){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(a)},renderDepth:function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},translate:function(a,e){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(e,a)},getWorldRotation:function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")}}),Object.defineProperties(mc.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(a){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=a}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}}),Object.defineProperties(Qi.prototype,{objects:{get:function(){return console.warn("THREE.LOD: .objects has been renamed to .levels."),this.levels}}}),Object.defineProperty(cn.prototype,"useVertexTexture",{get:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")},set:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")}}),$i.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")},Object.defineProperty(Ef.prototype,"__arcLengthDivisions",{get:function(){return console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions},set:function(a){console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions=a}}),ft.prototype.setLens=function(a,e){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),void 0!==e&&(this.filmGauge=e),this.setFocalLength(a)},Object.defineProperties(Zf.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(a){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=a}},shadowCameraLeft:{set:function(a){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=a}},shadowCameraRight:{set:function(a){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=a}},shadowCameraTop:{set:function(a){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=a}},shadowCameraBottom:{set:function(a){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=a}},shadowCameraNear:{set:function(a){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=a}},shadowCameraFar:{set:function(a){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=a}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(a){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=a}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(a){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=a}},shadowMapHeight:{set:function(a){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=a}}}),Object.defineProperties(ob.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}}}),Object.assign(ob.prototype,{copyIndicesArray:function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},setArray:function(a){return console.warn("THREE.BufferAttribute: .setArray has been deprecated. Use BufferGeometry .setAttribute to replace/resize attribute buffers"),this.count=void 0!==a?a.length/this.itemSize:0,this.array=a,this}}),Object.assign(Rb.prototype,{addIndex:function(a){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(a)},addDrawCall:function(a,e,c){void 0!==c&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(a,e)},clearDrawCalls:function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()},computeTangents:function(){console.warn("THREE.BufferGeometry: .computeTangents() has been removed.")},computeOffsets:function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")}}),Object.defineProperties(Rb.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}}),Object.assign(Ii.prototype,{setArray:function(a){return console.warn("THREE.InterleavedBuffer: .setArray has been deprecated. Use BufferGeometry .setAttribute to replace/resize attribute buffers"),this.count=void 0!==a?a.length/this.stride:0,this.array=a,this}}),Object.assign(yr.prototype,{getArrays:function(){console.error("THREE.ExtrudeBufferGeometry: .getArrays() has been removed.")},addShapeList:function(){console.error("THREE.ExtrudeBufferGeometry: .addShapeList() has been removed.")},addShape:function(){console.error("THREE.ExtrudeBufferGeometry: .addShape() has been removed.")}}),Object.defineProperties(ts.prototype,{dynamic:{set:function(){console.warn("THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.")}},onUpdate:{value:function(){return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),this}}}),Object.defineProperties(rb.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new cb}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(a){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=1===a}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(a){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=a}}}),Object.defineProperties(Wr.prototype,{metal:{get:function(){return console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead."),!1},set:function(){console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead")}}}),Object.defineProperties(nt.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(a){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=a}}}),Object.assign(Pi.prototype,{clearTarget:function(a,e,c,b){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(a),this.clear(e,c,b)},animate:function(a){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(a)},getCurrentRenderTarget:function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()},getMaxAnisotropy:function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()},getPrecision:function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision},resetGLState:function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()},supportsFloatTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")},supportsHalfFloatTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")},supportsStandardDerivatives:function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")},supportsCompressedTextureS3TC:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")},supportsCompressedTexturePVRTC:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")},supportsBlendMinMax:function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")},supportsVertexTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures},supportsInstancedArrays:function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")},enableScissorTest:function(a){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(a)},initMaterial:function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},addPrePlugin:function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},addPostPlugin:function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},updateShadowMap:function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")},setFaceCulling:function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")},allocTextureUnit:function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")},setTexture:function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")},setTexture2D:function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")},setTextureCube:function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")},getActiveMipMapLevel:function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()}}),Object.defineProperties(Pi.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(a){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=a}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(a){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=a}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}}}),Object.defineProperties(mi.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}}),Object.defineProperties(lt.prototype,{activeCubeFace:{set:function(){console.warn("THREE.WebGLRenderTargetCube: .activeCubeFace has been removed. It is now the second parameter of WebGLRenderer.setRenderTarget().")}},activeMipMapLevel:{set:function(){console.warn("THREE.WebGLRenderTargetCube: .activeMipMapLevel has been removed. It is now the third parameter of WebGLRenderer.setRenderTarget().")}}}),Object.defineProperties(ke.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(a){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=a}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(a){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=a}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(a){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=a}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(a){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=a}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(a){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=a}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(a){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=a}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(a){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=a}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(a){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=a}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(a){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=a}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(a){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=a}}}),Object.defineProperties(Li.prototype,{standing:{set:function(){console.warn("THREE.WebVRManager: .standing has been removed.")}},userHeight:{set:function(){console.warn("THREE.WebVRManager: .userHeight has been removed.")}}}),Bo.prototype.load=function(a){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");var e=this;return(new To).load(a,(function(a){e.setBuffer(a)})),this},jo.prototype.getData=function(){return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."),this.getFrequencyData()},ht.prototype.updateCubeMap=function(a,e){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(a,e)};Fe.crossOrigin=void 0,Fe.loadTexture=function(a,e,c,b){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");var t=new Tf;t.setCrossOrigin(this.crossOrigin);var d=t.load(a,c,void 0,b);return e&&(d.mapping=e),d},Fe.loadTextureCube=function(a,e,c,b){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");var t=new Sf;t.setCrossOrigin(this.crossOrigin);var d=t.load(a,c,void 0,b);return e&&(d.mapping=e),d},Fe.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},Fe.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")};"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:"109"}}));var bh=function(){function a(a){gf.call(this,a),this.dracoLoader=null,this.ddsLoader=null}function e(){var a={};return{get:function(e){return a[e]},add:function(e,c){a[e]=c},remove:function(e){delete a[e]},removeAll:function(){a={}}}}a.prototype=Object.assign(Object.create(gf.prototype),{constructor:a,load:function(a,e,c,b){var t,d=this;t=""!==this.resourcePath?this.resourcePath:""!==this.path?this.path:fo.extractUrlBase(a),d.manager.itemStart(a);var i=function(e){b?b(e):console.error(e),d.manager.itemError(a),d.manager.itemEnd(a)},n=new yf(d.manager);n.setPath(this.path),n.setResponseType("arraybuffer"),"use-credentials"===d.crossOrigin&&n.setWithCredentials(!0),n.load(a,(function(c){try{d.parse(c,t,(function(c){e(c),d.manager.itemEnd(a)}),i)}catch(a){i(a)}}),c,i)},setDRACOLoader:function(a){return this.dracoLoader=a,this},setDDSLoader:function(a){return this.ddsLoader=a,this},parse:function(a,e,n,r){var h,u={};if("string"==typeof a)h=a;else if(fo.decodeText(new Uint8Array(a,0,4))===i){try{u[c.KHR_BINARY_GLTF]=new f(a)}catch(a){return void(r&&r(a))}h=u[c.KHR_BINARY_GLTF].content}else h=fo.decodeText(new Uint8Array(a));var p=JSON.parse(h);if(void 0===p.asset||p.asset.version[0]<2)r&&r(new Error("THREE.GLTFLoader: Unsupported asset. glTF versions >=2.0 are supported. Use LegacyGLTFLoader instead."));else{if(p.extensionsUsed)for(var m=0;m<p.extensionsUsed.length;++m){var g=p.extensionsUsed[m],v=p.extensionsRequired||[];switch(g){case c.KHR_LIGHTS_PUNCTUAL:u[g]=new t(p);break;case c.KHR_MATERIALS_UNLIT:u[g]=new d;break;case c.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS:u[g]=new l;break;case c.KHR_DRACO_MESH_COMPRESSION:u[g]=new o(p,this.dracoLoader);break;case c.MSFT_TEXTURE_DDS:u[c.MSFT_TEXTURE_DDS]=new b(this.ddsLoader);break;case c.KHR_TEXTURE_TRANSFORM:u[c.KHR_TEXTURE_TRANSFORM]=new s;break;default:v.indexOf(g)>=0&&console.warn('THREE.GLTFLoader: Unknown extension "'+g+'".')}}new V(p,u,{path:e||this.resourcePath||"",crossOrigin:this.crossOrigin,manager:this.manager}).parse(n,r)}}});var c={KHR_BINARY_GLTF:"KHR_binary_glTF",KHR_DRACO_MESH_COMPRESSION:"KHR_draco_mesh_compression",KHR_LIGHTS_PUNCTUAL:"KHR_lights_punctual",KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS:"KHR_materials_pbrSpecularGlossiness",KHR_MATERIALS_UNLIT:"KHR_materials_unlit",KHR_TEXTURE_TRANSFORM:"KHR_texture_transform",MSFT_TEXTURE_DDS:"MSFT_texture_dds"};function b(a){if(!a)throw new Error("THREE.GLTFLoader: Attempting to load .dds texture without importing DDSLoader");this.name=c.MSFT_TEXTURE_DDS,this.ddsLoader=a}function t(a){this.name=c.KHR_LIGHTS_PUNCTUAL;var e=a.extensions&&a.extensions[c.KHR_LIGHTS_PUNCTUAL]||{};this.lightDefs=e.lights||[]}function d(){this.name=c.KHR_MATERIALS_UNLIT}t.prototype.loadLight=function(a){var e,c=this.lightDefs[a],b=new cb(16777215);void 0!==c.color&&b.fromArray(c.color);var t=void 0!==c.range?c.range:0;switch(c.type){case"directional":(e=new to(b)).target.position.set(0,0,-1),e.add(e.target);break;case"point":(e=new eo(b)).distance=t;break;case"spot":(e=new $f(b)).distance=t,c.spot=c.spot||{},c.spot.innerConeAngle=void 0!==c.spot.innerConeAngle?c.spot.innerConeAngle:0,c.spot.outerConeAngle=void 0!==c.spot.outerConeAngle?c.spot.outerConeAngle:Math.PI/4,e.angle=c.spot.outerConeAngle,e.penumbra=1-c.spot.innerConeAngle/c.spot.outerConeAngle,e.target.position.set(0,0,-1),e.add(e.target);break;default:throw new Error('THREE.GLTFLoader: Unexpected light type, "'+c.type+'".')}return e.position.set(0,0,0),e.decay=2,void 0!==c.intensity&&(e.intensity=c.intensity),e.name=c.name||"light_"+a,Promise.resolve(e)},d.prototype.getMaterialType=function(){return fb},d.prototype.extendParams=function(a,e,c){var b=[];a.color=new cb(1,1,1),a.opacity=1;var t=e.pbrMetallicRoughness;if(t){if(Array.isArray(t.baseColorFactor)){var d=t.baseColorFactor;a.color.fromArray(d),a.opacity=d[3]}void 0!==t.baseColorTexture&&b.push(c.assignTexture(a,"map",t.baseColorTexture))}return Promise.all(b)};var i="glTF",n=12,r={JSON:1313821514,BIN:5130562};function f(a){this.name=c.KHR_BINARY_GLTF,this.content=null,this.body=null;var e=new DataView(a,0,n);if(this.header={magic:fo.decodeText(new Uint8Array(a.slice(0,4))),version:e.getUint32(4,!0),length:e.getUint32(8,!0)},this.header.magic!==i)throw new Error("THREE.GLTFLoader: Unsupported glTF-Binary header.");if(this.header.version<2)throw new Error("THREE.GLTFLoader: Legacy binary file detected. Use LegacyGLTFLoader instead.");for(var b=new DataView(a,n),t=0;t<b.byteLength;){var d=b.getUint32(t,!0);t+=4;var f=b.getUint32(t,!0);if(t+=4,f===r.JSON){var o=new Uint8Array(a,n+t,d);this.content=fo.decodeText(o)}else if(f===r.BIN){var s=n+t;this.body=a.slice(s,s+d)}t+=d}if(null===this.content)throw new Error("THREE.GLTFLoader: JSON content not found.")}function o(a,e){if(!e)throw new Error("THREE.GLTFLoader: No DRACOLoader instance provided.");this.name=c.KHR_DRACO_MESH_COMPRESSION,this.json=a,this.dracoLoader=e}function s(){this.name=c.KHR_TEXTURE_TRANSFORM}function l(){return{name:c.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS,specularGlossinessParams:["color","map","lightMap","lightMapIntensity","aoMap","aoMapIntensity","emissive","emissiveIntensity","emissiveMap","bumpMap","bumpScale","normalMap","displacementMap","displacementScale","displacementBias","specularMap","specular","glossinessMap","glossiness","alphaMap","envMap","envMapIntensity","refractionRatio"],getMaterialType:function(){return nt},extendParams:function(a,e,c){var b=e.extensions[this.name],t=St.standard,d=tt.clone(t.uniforms),i=["#ifdef USE_SPECULARMAP","\tuniform sampler2D specularMap;","#endif"].join("\n"),n=["#ifdef USE_GLOSSINESSMAP","\tuniform sampler2D glossinessMap;","#endif"].join("\n"),r=["vec3 specularFactor = specular;","#ifdef USE_SPECULARMAP","\tvec4 texelSpecular = texture2D( specularMap, vUv );","\ttexelSpecular = sRGBToLinear( texelSpecular );","\t// reads channel RGB, compatible with a glTF Specular-Glossiness (RGBA) texture","\tspecularFactor *= texelSpecular.rgb;","#endif"].join("\n"),f=["float glossinessFactor = glossiness;","#ifdef USE_GLOSSINESSMAP","\tvec4 texelGlossiness = texture2D( glossinessMap, vUv );","\t// reads channel A, compatible with a glTF Specular-Glossiness (RGBA) texture","\tglossinessFactor *= texelGlossiness.a;","#endif"].join("\n"),o=["PhysicalMaterial material;","material.diffuseColor = diffuseColor.rgb;","material.specularRoughness = clamp( 1.0 - glossinessFactor, 0.04, 1.0 );","material.specularColor = specularFactor.rgb;"].join("\n"),s=t.fragmentShader.replace("uniform float roughness;","uniform vec3 specular;").replace("uniform float metalness;","uniform float glossiness;").replace("#include <roughnessmap_pars_fragment>",i).replace("#include <metalnessmap_pars_fragment>",n).replace("#include <roughnessmap_fragment>",r).replace("#include <metalnessmap_fragment>",f).replace("#include <lights_physical_fragment>",o);delete d.roughness,delete d.metalness,delete d.roughnessMap,delete d.metalnessMap,d.specular={value:(new cb).setHex(1118481)},d.glossiness={value:.5},d.specularMap={value:null},d.glossinessMap={value:null},a.vertexShader=t.vertexShader,a.fragmentShader=s,a.uniforms=d,a.defines={STANDARD:""},a.color=new cb(1,1,1),a.opacity=1;var h=[];if(Array.isArray(b.diffuseFactor)){var l=b.diffuseFactor;a.color.fromArray(l),a.opacity=l[3]}if(void 0!==b.diffuseTexture&&h.push(c.assignTexture(a,"map",b.diffuseTexture)),a.emissive=new cb(0,0,0),a.glossiness=void 0!==b.glossinessFactor?b.glossinessFactor:1,a.specular=new cb(1,1,1),Array.isArray(b.specularFactor)&&a.specular.fromArray(b.specularFactor),void 0!==b.specularGlossinessTexture){var u=b.specularGlossinessTexture;h.push(c.assignTexture(a,"glossinessMap",u)),h.push(c.assignTexture(a,"specularMap",u))}return Promise.all(h)},createMaterial:function(a){var e=new nt({defines:a.defines,vertexShader:a.vertexShader,fragmentShader:a.fragmentShader,uniforms:a.uniforms,fog:!0,lights:!0,opacity:a.opacity,transparent:a.transparent});return e.isGLTFSpecularGlossinessMaterial=!0,e.color=a.color,e.map=void 0===a.map?null:a.map,e.lightMap=null,e.lightMapIntensity=1,e.aoMap=void 0===a.aoMap?null:a.aoMap,e.aoMapIntensity=1,e.emissive=a.emissive,e.emissiveIntensity=1,e.emissiveMap=void 0===a.emissiveMap?null:a.emissiveMap,e.bumpMap=void 0===a.bumpMap?null:a.bumpMap,e.bumpScale=1,e.normalMap=void 0===a.normalMap?null:a.normalMap,a.normalScale&&(e.normalScale=a.normalScale),e.displacementMap=null,e.displacementScale=1,e.displacementBias=0,e.specularMap=void 0===a.specularMap?null:a.specularMap,e.specular=a.specular,e.glossinessMap=void 0===a.glossinessMap?null:a.glossinessMap,e.glossiness=a.glossiness,e.alphaMap=null,e.envMap=void 0===a.envMap?null:a.envMap,e.envMapIntensity=1,e.refractionRatio=.98,e.extensions.derivatives=!0,e},cloneMaterial:function(a){var e=a.clone();e.isGLTFSpecularGlossinessMaterial=!0;for(var c=this.specularGlossinessParams,b=0,t=c.length;b<t;b++){var d=a[c[b]];e[c[b]]=d&&d.isColor?d.clone():d}return e},refreshUniforms:function(a,e,c,b,t){if(!0===t.isGLTFSpecularGlossinessMaterial){var d,i=t.uniforms,n=t.defines;i.opacity.value=t.opacity,i.diffuse.value.copy(t.color),i.emissive.value.copy(t.emissive).multiplyScalar(t.emissiveIntensity),i.map.value=t.map,i.specularMap.value=t.specularMap,i.alphaMap.value=t.alphaMap,i.lightMap.value=t.lightMap,i.lightMapIntensity.value=t.lightMapIntensity,i.aoMap.value=t.aoMap,i.aoMapIntensity.value=t.aoMapIntensity,t.map?d=t.map:t.specularMap?d=t.specularMap:t.displacementMap?d=t.displacementMap:t.normalMap?d=t.normalMap:t.bumpMap?d=t.bumpMap:t.glossinessMap?d=t.glossinessMap:t.alphaMap?d=t.alphaMap:t.emissiveMap&&(d=t.emissiveMap),void 0!==d&&(d.isWebGLRenderTarget&&(d=d.texture),!0===d.matrixAutoUpdate&&d.updateMatrix(),i.uvTransform.value.copy(d.matrix)),t.envMap&&(i.envMap.value=t.envMap,i.envMapIntensity.value=t.envMapIntensity,i.flipEnvMap.value=t.envMap.isCubeTexture?-1:1,i.reflectivity.value=t.reflectivity,i.refractionRatio.value=t.refractionRatio,i.maxMipLevel.value=a.properties.get(t.envMap).__maxMipLevel),i.specular.value.copy(t.specular),i.glossiness.value=t.glossiness,i.glossinessMap.value=t.glossinessMap,i.emissiveMap.value=t.emissiveMap,i.bumpMap.value=t.bumpMap,i.normalMap.value=t.normalMap,i.displacementMap.value=t.displacementMap,i.displacementScale.value=t.displacementScale,i.displacementBias.value=t.displacementBias,null!==i.glossinessMap.value&&void 0===n.USE_GLOSSINESSMAP&&(n.USE_GLOSSINESSMAP="",n.USE_ROUGHNESSMAP=""),null===i.glossinessMap.value&&void 0!==n.USE_GLOSSINESSMAP&&(delete n.USE_GLOSSINESSMAP,delete n.USE_ROUGHNESSMAP)}}}}function p(a,e,c,b){$r.call(this,a,e,c,b)}o.prototype.decodePrimitive=function(a,e){var c=this.json,b=this.dracoLoader,t=a.extensions[this.name].bufferView,d=a.extensions[this.name].attributes,i={},n={},r={};for(var f in d){var o=R[f]||f.toLowerCase();i[o]=d[f]}for(f in a.attributes){o=R[f]||f.toLowerCase();if(void 0!==d[f]){var s=c.accessors[a.attributes[f]],h=T[s.componentType];r[o]=h,n[o]=!0===s.normalized}}return e.getDependency("bufferView",t).then((function(a){return new Promise((function(e){b.decodeDracoFile(a,(function(a){for(var c in a.attributes){var b=a.attributes[c],t=n[c];void 0!==t&&(b.normalized=t)}e(a)}),i,r)}))}))},s.prototype.extendTexture=function(a,e){return a=a.clone(),void 0!==e.offset&&a.offset.fromArray(e.offset),void 0!==e.rotation&&(a.rotation=e.rotation),void 0!==e.scale&&a.repeat.fromArray(e.scale),void 0!==e.texCoord&&console.warn('THREE.GLTFLoader: Custom UV sets in "'+this.name+'" extension not yet supported.'),a.needsUpdate=!0,a},p.prototype=Object.create($r.prototype),p.prototype.constructor=p,p.prototype.copySampleValue_=function(a){for(var e=this.resultBuffer,c=this.sampleValues,b=this.valueSize,t=a*b*3+b,d=0;d!==b;d++)e[d]=c[t+d];return e},p.prototype.beforeStart_=p.prototype.copySampleValue_,p.prototype.afterEnd_=p.prototype.copySampleValue_,p.prototype.interpolate_=function(a,e,c,b){for(var t=this.resultBuffer,d=this.sampleValues,i=this.valueSize,n=2*i,r=3*i,f=b-e,o=(c-e)/f,s=o*o,h=s*o,l=a*r,u=l-r,p=-2*h+3*s,m=h-s,g=1-p,v=m-s+o,y=0;y!==i;y++){var x=d[u+y+i],w=d[u+y+n]*f,_=d[l+y+i],M=d[l+y]*f;t[y]=g*x+v*w+p*_+m*M}return t};var m,v=0,y=1,x=2,w=3,_=4,M=5,S=6,T={5120:Int8Array,5121:Uint8Array,5122:Int16Array,5123:Uint16Array,5125:Uint32Array,5126:Float32Array},E={9728:la,9729:ma,9984:ua,9985:ga,9986:pa,9987:va},A={33071:sa,33648:ha,10497:oa},L={SCALAR:1,VEC2:2,VEC3:3,VEC4:4,MAT2:4,MAT3:9,MAT4:16},R={POSITION:"position",NORMAL:"normal",TANGENT:"tangent",TEXCOORD_0:"uv",TEXCOORD_1:"uv2",COLOR_0:"color",WEIGHTS_0:"skinWeight",JOINTS_0:"skinIndex"},P={scale:"scale",translation:"position",rotation:"quaternion",weights:"morphTargetInfluences"},C={CUBICSPLINE:void 0,LINEAR:2301,STEP:2300},O="OPAQUE",I="MASK",N="BLEND",D={"image/png":Ia,"image/jpeg":Oa};function z(a,e){return"string"!=typeof a||""===a?"":(/^https?:\/\//i.test(e)&&/^\//.test(a)&&(e=e.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(a)?a:/^data:.*,.*$/i.test(a)?a:/^blob:.*$/i.test(a)?a:e+a)}function U(a,e,c){for(var b in c.extensions)void 0===a[b]&&(e.userData.gltfExtensions=e.userData.gltfExtensions||{},e.userData.gltfExtensions[b]=c.extensions[b])}function B(a,e){void 0!==e.extras&&("object"==typeof e.extras?Object.assign(a.userData,e.extras):console.warn("THREE.GLTFLoader: Ignoring primitive type .extras, "+e.extras))}function F(a,e){if(a.updateMorphTargets(),void 0!==e.weights)for(var c=0,b=e.weights.length;c<b;c++)a.morphTargetInfluences[c]=e.weights[c];if(e.extras&&Array.isArray(e.extras.targetNames)){var t=e.extras.targetNames;if(a.morphTargetInfluences.length===t.length){a.morphTargetDictionary={};for(c=0,b=t.length;c<b;c++)a.morphTargetDictionary[t[c]]=c}else console.warn("THREE.GLTFLoader: Invalid extras.targetNames length. Ignoring names.")}}function G(a){for(var e="",c=Object.keys(a).sort(),b=0,t=c.length;b<t;b++)e+=c[b]+":"+a[c[b]]+";";return e}function H(a){if(a.isInterleavedBufferAttribute){for(var e=a.count,c=a.itemSize,b=a.array.slice(0,e*c),t=0,d=0;t<e;++t)b[d++]=a.getX(t),c>=2&&(b[d++]=a.getY(t)),c>=3&&(b[d++]=a.getZ(t)),c>=4&&(b[d++]=a.getW(t));return new ob(b,c,a.normalized)}return a.clone()}function V(a,c,b){this.json=a||{},this.extensions=c||{},this.options=b||{},this.cache=new e,this.primitiveCache={},this.textureLoader=new Tf(this.options.manager),this.textureLoader.setCrossOrigin(this.options.crossOrigin),this.fileLoader=new yf(this.options.manager),this.fileLoader.setResponseType("arraybuffer"),"use-credentials"===this.options.crossOrigin&&this.fileLoader.setWithCredentials(!0)}function k(a,e,c){var b=e.attributes,t=[];function d(e,b){return c.getDependency("accessor",e).then((function(e){a.addAttribute(b,e)}))}for(var i in b){var n=R[i]||i.toLowerCase();n in a.attributes||t.push(d(b[i],n))}if(void 0!==e.indices&&!a.index){var r=c.getDependency("accessor",e.indices).then((function(e){a.setIndex(e)}));t.push(r)}return B(a,e),Promise.all(t).then((function(){return void 0!==e.targets?function(a,e,c){for(var b=!1,t=!1,d=0,i=e.length;d<i;d++){if(void 0!==(f=e[d]).POSITION&&(b=!0),void 0!==f.NORMAL&&(t=!0),b&&t)break}if(!b&&!t)return Promise.resolve(a);var n=[],r=[];for(d=0,i=e.length;d<i;d++){var f=e[d];if(b){var o=void 0!==f.POSITION?c.getDependency("accessor",f.POSITION):a.attributes.position;n.push(o)}if(t){o=void 0!==f.NORMAL?c.getDependency("accessor",f.NORMAL):a.attributes.normal;r.push(o)}}return Promise.all([Promise.all(n),Promise.all(r)]).then((function(c){for(var d=c[0],i=c[1],n=0,r=d.length;n<r;n++)a.attributes.position!==d[n]&&(d[n]=H(d[n]));for(n=0,r=i.length;n<r;n++)a.attributes.normal!==i[n]&&(i[n]=H(i[n]));for(n=0,r=e.length;n<r;n++){var f=e[n],o="morphTarget"+n;if(b&&void 0!==f.POSITION){var s=d[n];s.name=o;for(var h=a.attributes.position,l=0,u=s.count;l<u;l++)s.setXYZ(l,s.getX(l)+h.getX(l),s.getY(l)+h.getY(l),s.getZ(l)+h.getZ(l))}if(t&&void 0!==f.NORMAL){var p=i[n];p.name=o;var m=a.attributes.normal;for(l=0,u=p.count;l<u;l++)p.setXYZ(l,p.getX(l)+m.getX(l),p.getY(l)+m.getY(l),p.getZ(l)+m.getZ(l))}}return b&&(a.morphAttributes.position=d),t&&(a.morphAttributes.normal=i),a}))}(a,e.targets,c):a}))}return V.prototype.parse=function(a,e){var c=this,b=this.json,t=this.extensions;this.cache.removeAll(),this.markDefs(),Promise.all([this.getDependencies("scene"),this.getDependencies("animation"),this.getDependencies("camera")]).then((function(e){var d={scene:e[0][b.scene||0],scenes:e[0],animations:e[1],cameras:e[2],asset:b.asset,parser:c,userData:{}};U(t,d,b),B(d,b),a(d)})).catch(e)},V.prototype.markDefs=function(){for(var a=this.json.nodes||[],e=this.json.skins||[],c=this.json.meshes||[],b={},t={},d=0,i=e.length;d<i;d++)for(var n=e[d].joints,r=0,f=n.length;r<f;r++)a[n[r]].isBone=!0;for(var o=0,s=a.length;o<s;o++){var h=a[o];void 0!==h.mesh&&(void 0===b[h.mesh]&&(b[h.mesh]=t[h.mesh]=0),b[h.mesh]++,void 0!==h.skin&&(c[h.mesh].isSkinnedMesh=!0))}this.json.meshReferences=b,this.json.meshUses=t},V.prototype.getDependency=function(a,e){var b=a+":"+e,t=this.cache.get(b);if(!t){switch(a){case"scene":t=this.loadScene(e);break;case"node":t=this.loadNode(e);break;case"mesh":t=this.loadMesh(e);break;case"accessor":t=this.loadAccessor(e);break;case"bufferView":t=this.loadBufferView(e);break;case"buffer":t=this.loadBuffer(e);break;case"material":t=this.loadMaterial(e);break;case"texture":t=this.loadTexture(e);break;case"skin":t=this.loadSkin(e);break;case"animation":t=this.loadAnimation(e);break;case"camera":t=this.loadCamera(e);break;case"light":t=this.extensions[c.KHR_LIGHTS_PUNCTUAL].loadLight(e);break;default:throw new Error("Unknown type: "+a)}this.cache.add(b,t)}return t},V.prototype.getDependencies=function(a){var e=this.cache.get(a);if(!e){var c=this,b=this.json[a+("mesh"===a?"es":"s")]||[];e=Promise.all(b.map((function(e,b){return c.getDependency(a,b)}))),this.cache.add(a,e)}return e},V.prototype.loadBuffer=function(a){var e=this.json.buffers[a],b=this.fileLoader;if(e.type&&"arraybuffer"!==e.type)throw new Error("THREE.GLTFLoader: "+e.type+" buffer type is not supported.");if(void 0===e.uri&&0===a)return Promise.resolve(this.extensions[c.KHR_BINARY_GLTF].body);var t=this.options;return new Promise((function(a,c){b.load(z(e.uri,t.path),a,void 0,(function(){c(new Error('THREE.GLTFLoader: Failed to load buffer "'+e.uri+'".'))}))}))},V.prototype.loadBufferView=function(a){var e=this.json.bufferViews[a];return this.getDependency("buffer",e.buffer).then((function(a){var c=e.byteLength||0,b=e.byteOffset||0;return a.slice(b,b+c)}))},V.prototype.loadAccessor=function(a){var e=this,c=this.json,b=this.json.accessors[a];if(void 0===b.bufferView&&void 0===b.sparse)return Promise.resolve(null);var t=[];return void 0!==b.bufferView?t.push(this.getDependency("bufferView",b.bufferView)):t.push(null),void 0!==b.sparse&&(t.push(this.getDependency("bufferView",b.sparse.indices.bufferView)),t.push(this.getDependency("bufferView",b.sparse.values.bufferView))),Promise.all(t).then((function(a){var t,d=a[0],i=L[b.type],n=T[b.componentType],r=n.BYTES_PER_ELEMENT,f=r*i,o=b.byteOffset||0,s=void 0!==b.bufferView?c.bufferViews[b.bufferView].byteStride:void 0,h=!0===b.normalized;if(s&&s!==f){var l=Math.floor(o/s),u="InterleavedBuffer:"+b.bufferView+":"+b.componentType+":"+l+":"+b.count,p=e.cache.get(u);p||(p=new Ii(new n(d,l*s,b.count*s/r),s/r),e.cache.add(u,p)),t=new Ni(p,i,o%s/r,h)}else t=new ob(null===d?new n(b.count*i):new n(d,o,b.count*i),i,h);if(void 0!==b.sparse){var m=L.SCALAR,g=T[b.sparse.indices.componentType],v=b.sparse.indices.byteOffset||0,y=b.sparse.values.byteOffset||0,x=new g(a[1],v,b.sparse.count*m),w=new n(a[2],y,b.sparse.count*i);null!==d&&(t=new ob(t.array.slice(),t.itemSize,t.normalized));for(var _=0,M=x.length;_<M;_++){var S=x[_];if(t.setX(S,w[_*i]),i>=2&&t.setY(S,w[_*i+1]),i>=3&&t.setZ(S,w[_*i+2]),i>=4&&t.setW(S,w[_*i+3]),i>=5)throw new Error("THREE.GLTFLoader: Unsupported itemSize in sparse BufferAttribute.")}}return t}))},V.prototype.loadTexture=function(a){var e,b=this,t=this.json,d=this.options,i=this.textureLoader,n=window.URL||window.webkitURL,r=t.textures[a],f=r.extensions||{},o=(e=f[c.MSFT_TEXTURE_DDS]?t.images[f[c.MSFT_TEXTURE_DDS].source]:t.images[r.source]).uri,s=!1;return void 0!==e.bufferView&&(o=b.getDependency("bufferView",e.bufferView).then((function(a){s=!0;var c=new Blob([a],{type:e.mimeType});return o=n.createObjectURL(c)}))),Promise.resolve(o).then((function(a){var e=d.manager.getHandler(a);return e||(e=f[c.MSFT_TEXTURE_DDS]?b.extensions[c.MSFT_TEXTURE_DDS].ddsLoader:i),new Promise((function(c,b){e.load(z(a,d.path),c,void 0,b)}))})).then((function(a){!0===s&&n.revokeObjectURL(o),a.flipY=!1,void 0!==r.name&&(a.name=r.name),e.mimeType in D&&(a.format=D[e.mimeType]);var c=(t.samplers||{})[r.sampler]||{};return a.magFilter=E[c.magFilter]||ma,a.minFilter=E[c.minFilter]||va,a.wrapS=A[c.wrapS]||oa,a.wrapT=A[c.wrapT]||oa,a}))},V.prototype.assignTexture=function(a,e,b){var t=this;return this.getDependency("texture",b.index).then((function(d){if(!d.isCompressedTexture)switch(e){case"aoMap":case"emissiveMap":case"metalnessMap":case"normalMap":case"roughnessMap":d.format=Oa}if(t.extensions[c.KHR_TEXTURE_TRANSFORM]){var i=void 0!==b.extensions?b.extensions[c.KHR_TEXTURE_TRANSFORM]:void 0;i&&(d=t.extensions[c.KHR_TEXTURE_TRANSFORM].extendTexture(d,i))}a[e]=d}))},V.prototype.assignFinalMaterial=function(a){var e=a.geometry,b=a.material,t=this.extensions,d=void 0!==e.attributes.tangent,i=void 0!==e.attributes.color,n=void 0===e.attributes.normal,r=!0===a.isSkinnedMesh,f=Object.keys(e.morphAttributes).length>0,o=f&&void 0!==e.morphAttributes.normal;if(a.isPoints){var s="PointsMaterial:"+b.uuid,h=this.cache.get(s);h||(h=new gn,rb.prototype.copy.call(h,b),h.color.copy(b.color),h.map=b.map,h.sizeAttenuation=!1,this.cache.add(s,h)),b=h}else if(a.isLine){s="LineBasicMaterial:"+b.uuid;var l=this.cache.get(s);l||(l=new dn,rb.prototype.copy.call(l,b),l.color.copy(b.color),this.cache.add(s,l)),b=l}if(d||i||n||r||f){s="ClonedMaterial:"+b.uuid+":";b.isGLTFSpecularGlossinessMaterial&&(s+="specular-glossiness:"),r&&(s+="skinning:"),d&&(s+="vertex-tangents:"),i&&(s+="vertex-colors:"),n&&(s+="flat-shading:"),f&&(s+="morph-targets:"),o&&(s+="morph-normals:");var u=this.cache.get(s);u||(u=b.isGLTFSpecularGlossinessMaterial?t[c.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS].cloneMaterial(b):b.clone(),r&&(u.skinning=!0),d&&(u.vertexTangents=!0),i&&(u.vertexColors=g),n&&(u.flatShading=!0),f&&(u.morphTargets=!0),o&&(u.morphNormals=!0),this.cache.add(s,u)),b=u}b.aoMap&&void 0===e.attributes.uv2&&void 0!==e.attributes.uv&&(console.log("THREE.GLTFLoader: Duplicating UVs to support aoMap."),e.addAttribute("uv2",new ob(e.attributes.uv.array,2))),b.isGLTFSpecularGlossinessMaterial&&(a.onBeforeRender=t[c.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS].refreshUniforms),a.material=b},V.prototype.loadMaterial=function(a){var e,b=this.json,t=this.extensions,d=b.materials[a],i={},n=d.extensions||{},r=[];if(n[c.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS]){var f=t[c.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS];e=f.getMaterialType(),r.push(f.extendParams(i,d,this))}else if(n[c.KHR_MATERIALS_UNLIT]){var o=t[c.KHR_MATERIALS_UNLIT];e=o.getMaterialType(),r.push(o.extendParams(i,d,this))}else{e=kr;var s=d.pbrMetallicRoughness||{};if(i.color=new cb(1,1,1),i.opacity=1,Array.isArray(s.baseColorFactor)){var h=s.baseColorFactor;i.color.fromArray(h),i.opacity=h[3]}void 0!==s.baseColorTexture&&r.push(this.assignTexture(i,"map",s.baseColorTexture)),i.metalness=void 0!==s.metallicFactor?s.metallicFactor:1,i.roughness=void 0!==s.roughnessFactor?s.roughnessFactor:1,void 0!==s.metallicRoughnessTexture&&(r.push(this.assignTexture(i,"metalnessMap",s.metallicRoughnessTexture)),r.push(this.assignTexture(i,"roughnessMap",s.metallicRoughnessTexture)))}!0===d.doubleSided&&(i.side=u);var l=d.alphaMode||O;return l===N?i.transparent=!0:(i.transparent=!1,l===I&&(i.alphaTest=void 0!==d.alphaCutoff?d.alphaCutoff:.5)),void 0!==d.normalTexture&&e!==fb&&(r.push(this.assignTexture(i,"normalMap",d.normalTexture)),i.normalScale=new Ce(1,1),void 0!==d.normalTexture.scale&&i.normalScale.set(d.normalTexture.scale,d.normalTexture.scale)),void 0!==d.occlusionTexture&&e!==fb&&(r.push(this.assignTexture(i,"aoMap",d.occlusionTexture)),void 0!==d.occlusionTexture.strength&&(i.aoMapIntensity=d.occlusionTexture.strength)),void 0!==d.emissiveFactor&&e!==fb&&(i.emissive=(new cb).fromArray(d.emissiveFactor)),void 0!==d.emissiveTexture&&e!==fb&&r.push(this.assignTexture(i,"emissiveMap",d.emissiveTexture)),Promise.all(r).then((function(){var a;return a=e===nt?t[c.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS].createMaterial(i):new e(i),void 0!==d.name&&(a.name=d.name),a.map&&(a.map.encoding=ue),a.emissiveMap&&(a.emissiveMap.encoding=ue),a.specularMap&&(a.specularMap.encoding=ue),B(a,d),d.extensions&&U(t,a,d),a}))},V.prototype.loadGeometries=function(a){var e=this,b=this.extensions,t=this.primitiveCache;function d(a){return b[c.KHR_DRACO_MESH_COMPRESSION].decodePrimitive(a,e).then((function(c){return k(c,a,e)}))}for(var i,n,r=[],f=0,o=a.length;f<o;f++){var s,h=a[f],l=(n=void 0,(n=(i=h).extensions&&i.extensions[c.KHR_DRACO_MESH_COMPRESSION])?"draco:"+n.bufferView+":"+n.indices+":"+G(n.attributes):i.indices+":"+G(i.attributes)+":"+i.mode),u=t[l];if(u)r.push(u.promise);else s=h.extensions&&h.extensions[c.KHR_DRACO_MESH_COMPRESSION]?d(h):k(new Rb,h,e),t[l]={primitive:h,promise:s},r.push(s)}return Promise.all(r)},V.prototype.loadMesh=function(a){for(var e=this,c=this.json.meshes[a],b=c.primitives,t=[],d=0,i=b.length;d<i;d++){var n=void 0===b[d].material?m=m||new kr({color:16777215,emissive:0,metalness:1,roughness:1,transparent:!1,depthTest:!0,side:h}):this.getDependency("material",b[d].material);t.push(n)}return Promise.all(t).then((function(t){return e.loadGeometries(b).then((function(d){for(var i=[],n=0,r=d.length;n<r;n++){var f,o=d[n],s=b[n],h=t[n];if(s.mode===_||s.mode===M||s.mode===S||void 0===s.mode)!0!==(f=!0===c.isSkinnedMesh?new $i(o,h):new Xb(o,h)).isSkinnedMesh||f.geometry.attributes.skinWeight.normalized||f.normalizeSkinWeights(),s.mode===M?f.drawMode=se:s.mode===S&&(f.drawMode=he);else if(s.mode===y)f=new pn(o,h);else if(s.mode===w)f=new hn(o,h);else if(s.mode===x)f=new mn(o,h);else{if(s.mode!==v)throw new Error("THREE.GLTFLoader: Primitive mode unsupported: "+s.mode);f=new _n(o,h)}Object.keys(f.geometry.morphAttributes).length>0&&F(f,c),f.name=c.name||"mesh_"+a,d.length>1&&(f.name+="_"+n),B(f,c),e.assignFinalMaterial(f),i.push(f)}if(1===i.length)return i[0];var l=new _i;for(n=0,r=i.length;n<r;n++)l.add(i[n]);return l}))}))},V.prototype.loadCamera=function(a){var e,c=this.json.cameras[a],b=c[c.type];if(b)return"perspective"===c.type?e=new ft(Pe.radToDeg(b.yfov),b.aspectRatio||1,b.znear||1,b.zfar||2e6):"orthographic"===c.type&&(e=new co(b.xmag/-2,b.xmag/2,b.ymag/2,b.ymag/-2,b.znear,b.zfar)),void 0!==c.name&&(e.name=c.name),B(e,c),Promise.resolve(e);console.warn("THREE.GLTFLoader: Missing camera parameters.")},V.prototype.loadSkin=function(a){var e=this.json.skins[a],c={joints:e.joints};return void 0===e.inverseBindMatrices?Promise.resolve(c):this.getDependency("accessor",e.inverseBindMatrices).then((function(a){return c.inverseBindMatrices=a,c}))},V.prototype.loadAnimation=function(a){for(var e=this.json.animations[a],c=[],b=[],t=[],d=[],i=[],n=0,r=e.channels.length;n<r;n++){var f=e.channels[n],o=e.samplers[f.sampler],s=f.target,h=void 0!==s.node?s.node:s.id,l=void 0!==e.parameters?e.parameters[o.input]:o.input,u=void 0!==e.parameters?e.parameters[o.output]:o.output;c.push(this.getDependency("node",h)),b.push(this.getDependency("accessor",l)),t.push(this.getDependency("accessor",u)),d.push(o),i.push(s)}return Promise.all([Promise.all(c),Promise.all(b),Promise.all(t),Promise.all(d),Promise.all(i)]).then((function(c){for(var b=c[0],t=c[1],d=c[2],i=c[3],n=c[4],r=[],f=0,o=b.length;f<o;f++){var s=b[f],h=t[f],l=d[f],u=i[f],m=n[f];if(void 0!==s){var g;switch(s.updateMatrix(),s.matrixAutoUpdate=!0,P[m.path]){case P.weights:g=nf;break;case P.rotation:g=ff;break;case P.position:case P.scale:default:g=sf}var v=s.name?s.name:s.uuid,y=void 0!==u.interpolation?C[u.interpolation]:2301,x=[];P[m.path]===P.weights?s.traverse((function(a){!0===a.isMesh&&a.morphTargetInfluences&&x.push(a.name?a.name:a.uuid)})):x.push(v);var w=l.array;if(l.normalized){var _;if(w.constructor===Int8Array)_=1/127;else if(w.constructor===Uint8Array)_=1/255;else if(w.constructor==Int16Array)_=1/32767;else{if(w.constructor!==Uint16Array)throw new Error("THREE.GLTFLoader: Unsupported output accessor component type.");_=1/65535}for(var M=new Float32Array(w.length),S=0,T=w.length;S<T;S++)M[S]=w[S]*_;w=M}for(S=0,T=x.length;S<T;S++){var E=new g(x[S]+"."+P[m.path],h.array,w,y);"CUBICSPLINE"===u.interpolation&&(E.createInterpolant=function(a){return new p(this.times,this.values,this.getValueSize()/3,a)},E.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline=!0),r.push(E)}}}return new hf(void 0!==e.name?e.name:"animation_"+a,void 0,r)}))},V.prototype.loadNode=function(a){var e,b=this.json,t=this.extensions,d=this,i=b.meshReferences,n=b.meshUses,r=b.nodes[a];return(e=[],void 0!==r.mesh&&e.push(d.getDependency("mesh",r.mesh).then((function(a){var e;if(i[r.mesh]>1){var c=n[r.mesh]++;(e=a.clone()).name+="_instance_"+c,e.onBeforeRender=a.onBeforeRender;for(var b=0,t=e.children.length;b<t;b++)e.children[b].name+="_instance_"+c,e.children[b].onBeforeRender=a.children[b].onBeforeRender}else e=a;return void 0!==r.weights&&e.traverse((function(a){if(a.isMesh)for(var e=0,c=r.weights.length;e<c;e++)a.morphTargetInfluences[e]=r.weights[e]})),e}))),void 0!==r.camera&&e.push(d.getDependency("camera",r.camera)),r.extensions&&r.extensions[c.KHR_LIGHTS_PUNCTUAL]&&void 0!==r.extensions[c.KHR_LIGHTS_PUNCTUAL].light&&e.push(d.getDependency("light",r.extensions[c.KHR_LIGHTS_PUNCTUAL].light)),Promise.all(e)).then((function(a){var e;if((e=!0===r.isBone?new bn:a.length>1?new _i:1===a.length?a[0]:new mc)!==a[0])for(var c=0,b=a.length;c<b;c++)e.add(a[c]);if(void 0!==r.name&&(e.userData.name=r.name,e.name=es.sanitizeNodeName(r.name)),B(e,r),r.extensions&&U(t,e,r),void 0!==r.matrix){var d=new Qe;d.fromArray(r.matrix),e.applyMatrix(d)}else void 0!==r.translation&&e.position.fromArray(r.translation),void 0!==r.rotation&&e.quaternion.fromArray(r.rotation),void 0!==r.scale&&e.scale.fromArray(r.scale);return e}))},V.prototype.loadScene=function(){function a(e,c,b,t){var d=b.nodes[e];return t.getDependency("node",e).then((function(a){return void 0===d.skin?a:t.getDependency("skin",d.skin).then((function(a){for(var c=[],b=0,d=(e=a).joints.length;b<d;b++)c.push(t.getDependency("node",e.joints[b]));return Promise.all(c)})).then((function(c){return a.traverse((function(a){if(a.isMesh){for(var b=[],t=[],d=0,i=c.length;d<i;d++){var n=c[d];if(n){b.push(n);var r=new Qe;void 0!==e.inverseBindMatrices&&r.fromArray(e.inverseBindMatrices.array,16*d),t.push(r)}else console.warn('THREE.GLTFLoader: Joint "%s" could not be found.',e.joints[d])}a.bind(new cn(b,t),a.matrixWorld)}})),a}));var e})).then((function(e){c.add(e);var i=[];if(d.children)for(var n=d.children,r=0,f=n.length;r<f;r++){var o=n[r];i.push(a(o,e,b,t))}return Promise.all(i)}))}return function(e){var c=this.json,b=this.extensions,t=this.json.scenes[e],d=new gc;void 0!==t.name&&(d.name=t.name),B(d,t),t.extensions&&U(b,d,t);for(var i=t.nodes||[],n=[],r=0,f=i.length;r<f;r++)n.push(a(i[r],d,c,this));return Promise.all(n).then((function(){return d}))}}(),a}();function th(){console.log("what up "),console.log(t),this.renderer=new Pi({antialias:!0}),this.renderer.setPixelRatio(window.devicePixelRatio),this.renderer.setSize(window.innerWidth,window.innerHeight),this.renderer.shadowMap.enabled=!0,this.renderer.shadowMap.type=o,this.canvas=this.renderer.domElement,document.body.appendChild(this.canvas),console.log(document.body),this.scene=new gc,this.camera=new ft(30,window.innerWidth/window.innerHeight,1,1e4),this.camera.position.z=100,this.camera.position.y=-100,this.camera.rotation.x=Math.PI/4,window.addEventListener("resize",ih.bind(this),!1);var a=new to(16777215,1.5);a.position.set(50,50,50),a.castShadow=!0,a.shadow.mapSize.width=512,a.shadow.mapSize.height=512,a.shadow.camera.near=.5,a.shadow.camera.far=100,a.shadow.camera.left=a.shadow.camera.bottom=-20,a.shadow.camera.right=a.shadow.camera.top=20,this.scene.add(a),this.terrain=new t(25,50),this.masterGroup=new _i,this.masterGroup.scale.set(2,2,2),console.log(this.terrain.returnPtArray()),console.log(this.terrain.returnIndiceArray()),this.terrainGeo=new Rb,this.terrainGeo.addAttribute("position",new vb(this.terrain.returnPtArray(),3)),this.terrainGeo.addAttribute("uv",new vb(this.terrain.returnUVArray(),2)),this.terrainGeo.addAttribute("normal",new vb(this.terrain.returnNormalArray(),3)),this.geoPositions=this.terrainGeo.attributes.position,this.geoUVs=this.terrainGeo.attributes.uv,this.terrainGeo.setIndex(this.terrain.returnIndiceArray());var e=(new Tf).load("images/Desert_Albedo.png");e.wrapS=oa,e.wrapT=oa;var c=(new Tf).load("images/Desert_Normal.png");c.wrapS=oa,c.wrapT=oa,this.terrainMat=new kr({map:e,normalMap:c,normalScale:new Ce(.8,.8),metalness:0,roughness:.75}),this.duneBuggy=new d,this.buggyScale=.5,this.terrainMesh=new Xb(this.terrainGeo,this.terrainMat),this.terrainMesh.receiveShadow=!0,this.scene.add(this.masterGroup),this.masterGroup.add(this.terrainMesh),(new bh).load("models/duneBuggy.glb",function(a){window.gltf=a,this.buggy_frame=a.scene.getObjectByName("Frame"),this.buggy_frontLeftWheel=a.scene.getObjectByName("FrontLeftWheel"),this.buggy_frontRightWheel=a.scene.getObjectByName("FrontRightWheel"),this.buggy_backLeftWheel=a.scene.getObjectByName("BackLeftWheel"),this.buggy_backRightWheel=a.scene.getObjectByName("BackRightWheel"),this.buggy=new _i,this.buggy.scale.set(this.buggyScale,this.buggyScale,this.buggyScale),this.masterGroup.add(this.buggy),this.buggySpin=new _i,this.buggySpin.add(this.buggy_frame),this.buggy.add(this.buggySpin),this.buggy.add(this.buggy_frontLeftWheel),this.buggy.add(this.buggy_frontRightWheel),this.buggy.add(this.buggy_backLeftWheel),this.buggy.add(this.buggy_backRightWheel),this.buggy_frame.castShadow=!0,this.buggy_frontLeftWheel.castShadow=!0,this.buggy_frontRightWheel.castShadow=!0,this.buggy_backLeftWheel.castShadow=!0,this.buggy_backRightWheel.castShadow=!0,this.buggy_frontLeftWheel.position.y=this.duneBuggy.frontWheelX,this.buggy_frontRightWheel.position.y=this.duneBuggy.frontWheelX,this.buggy_frontLeftWheel.position.x=-this.duneBuggy.frontWheelSpace,this.buggy_frontRightWheel.position.x=this.duneBuggy.frontWheelSpace,this.buggy_backLeftWheel.position.y=this.duneBuggy.backWheelX,this.buggy_backRightWheel.position.y=this.duneBuggy.backWheelX,this.terrain.setPosition(-34.4250000000009,-73.40156249999966),this.terrain.setPosition(-34.4250000000009,-73.40156249999966),this.terrain.setPosition(-34.4250000000009,-73.40156249999966),this.animate()}.bind(this)),this.timer=0,this.terrain.setPosition(-34.4250000000009,-73.40156249999966)}function dh(){this.renderer.render(this.scene,this.camera)}function ih(){this.camera.aspect=window.innerWidth/window.innerHeight,this.camera.updateProjectionMatrix(),this.renderer.setSize(window.innerWidth,window.innerHeight)}console.log(t),th.prototype.render=dh,th.prototype.animate=function a(){requestAnimationFrame(a.bind(this)),this.terrain.move(this.duneBuggy.velocity[0],-this.duneBuggy.velocity[1]),this.duneBuggy.rotate(.00675),this.timer+=.01,this.masterGroup.rotation.z+=.001,this.duneBuggy.setWheelHeights(this.terrain.getPt(this.terrain.currentPosition[0]+this.duneBuggy.wheelPositions[0][0]*this.buggyScale,this.terrain.currentPosition[1]-this.duneBuggy.wheelPositions[0][1]*this.buggyScale).z,this.terrain.getPt(this.terrain.currentPosition[0]+this.duneBuggy.wheelPositions[1][0]*this.buggyScale,this.terrain.currentPosition[1]-this.duneBuggy.wheelPositions[1][1]*this.buggyScale).z,this.terrain.getPt(this.terrain.currentPosition[0]+this.duneBuggy.wheelPositions[2][0]*this.buggyScale,this.terrain.currentPosition[1]-this.duneBuggy.wheelPositions[2][1]*this.buggyScale).z,this.terrain.getPt(this.terrain.currentPosition[0]+this.duneBuggy.wheelPositions[3][0]*this.buggyScale,this.terrain.currentPosition[1]-this.duneBuggy.wheelPositions[3][1]*this.buggyScale).z),this.buggySpin.rotation.z=this.duneBuggy.rotation,this.buggy_frame.rotation.x=this.duneBuggy.tilt,this.buggy_frame.rotation.y=this.duneBuggy.roll,this.buggy_frame.position.z=this.duneBuggy.midHeight/this.buggyScale,this.buggy_frontLeftWheel.position.set(this.duneBuggy.wheelPositions[0][0],this.duneBuggy.wheelPositions[0][1],this.duneBuggy.wheelPositions[0][2]/this.buggyScale),this.buggy_frontRightWheel.position.set(this.duneBuggy.wheelPositions[1][0],this.duneBuggy.wheelPositions[1][1],this.duneBuggy.wheelPositions[1][2]/this.buggyScale),this.buggy_backLeftWheel.position.set(this.duneBuggy.wheelPositions[2][0],this.duneBuggy.wheelPositions[2][1],this.duneBuggy.wheelPositions[2][2]/this.buggyScale),this.buggy_backRightWheel.position.set(this.duneBuggy.wheelPositions[3][0],this.duneBuggy.wheelPositions[3][1],this.duneBuggy.wheelPositions[3][2]/this.buggyScale),this.buggy_frontLeftWheel.rotation.z=this.duneBuggy.rotation,this.buggy_frontRightWheel.rotation.z=this.duneBuggy.rotation,this.buggy_backLeftWheel.rotation.z=this.duneBuggy.rotation,this.buggy_backRightWheel.rotation.z=this.duneBuggy.rotation,this.geoPositions.set(this.terrain.returnPtArray(),0),this.geoPositions.needsUpdate=!0,this.geoUVs.set(this.terrain.returnUVArray(),0),this.geoUVs.needsUpdate=!0,this.render()},th.prototype.render=dh,th.prototype.onWindowResize=ih,window.main=new th}]);